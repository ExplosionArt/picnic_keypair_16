// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _AES256_ECB_HH_
#define _AES256_ECB_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "KeyExpansion.h"
#include "Cipher.h"
#include "AES256_ECB_ctx_RodEe.h"
#include "AES256_ECB_1_test.h"

namespace ap_rtl {

struct AES256_ECB : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > key_address0;
    sc_out< sc_logic > key_ce0;
    sc_in< sc_lv<8> > key_q0;
    sc_out< sc_lv<4> > ctr_address0;
    sc_out< sc_logic > ctr_ce0;
    sc_in< sc_lv<8> > ctr_q0;
    sc_out< sc_lv<6> > buffer_r_address0;
    sc_out< sc_logic > buffer_r_ce0;
    sc_out< sc_logic > buffer_r_we0;
    sc_out< sc_lv<8> > buffer_r_d0;
    sc_in< sc_lv<6> > buffer_offset;


    // Module declarations
    AES256_ECB(sc_module_name name);
    SC_HAS_PROCESS(AES256_ECB);

    ~AES256_ECB();

    sc_trace_file* mVcdFile;

    AES256_ECB_ctx_RodEe* ctx_RoundKey_U;
    AES256_ECB_1_test* test_U;
    KeyExpansion* grp_KeyExpansion_fu_143;
    Cipher* grp_Cipher_fu_155;
    sc_signal< sc_lv<9> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > grp_KeyExpansion_fu_143_ap_ready;
    sc_signal< sc_logic > grp_KeyExpansion_fu_143_ap_done;
    sc_signal< sc_lv<3> > i_fu_169_p2;
    sc_signal< sc_lv<3> > i_reg_330;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<4> > shl_ln_fu_179_p3;
    sc_signal< sc_lv<4> > shl_ln_reg_335;
    sc_signal< sc_lv<1> > icmp_ln164_fu_163_p2;
    sc_signal< sc_lv<6> > zext_ln166_fu_195_p1;
    sc_signal< sc_lv<6> > zext_ln166_reg_340;
    sc_signal< sc_lv<3> > j_fu_205_p2;
    sc_signal< sc_lv<3> > j_reg_348;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<1> > icmp_ln166_fu_199_p2;
    sc_signal< sc_lv<6> > add_ln168_2_fu_229_p2;
    sc_signal< sc_lv<6> > add_ln168_2_reg_358;
    sc_signal< sc_lv<3> > i_11_fu_244_p2;
    sc_signal< sc_lv<3> > i_11_reg_366;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<6> > zext_ln195_fu_258_p1;
    sc_signal< sc_lv<6> > zext_ln195_reg_371;
    sc_signal< sc_lv<1> > icmp_ln191_fu_238_p2;
    sc_signal< sc_lv<4> > shl_ln3_fu_266_p3;
    sc_signal< sc_lv<4> > shl_ln3_reg_376;
    sc_signal< sc_lv<3> > j_9_fu_280_p2;
    sc_signal< sc_lv<3> > j_9_reg_384;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<1> > icmp_ln193_fu_274_p2;
    sc_signal< sc_lv<6> > add_ln195_1_fu_313_p2;
    sc_signal< sc_lv<6> > add_ln195_1_reg_394;
    sc_signal< sc_lv<8> > ctx_RoundKey_address0;
    sc_signal< sc_logic > ctx_RoundKey_ce0;
    sc_signal< sc_logic > ctx_RoundKey_we0;
    sc_signal< sc_lv<8> > ctx_RoundKey_q0;
    sc_signal< sc_lv<4> > test_address0;
    sc_signal< sc_logic > test_ce0;
    sc_signal< sc_logic > test_we0;
    sc_signal< sc_lv<8> > test_d0;
    sc_signal< sc_lv<8> > test_q0;
    sc_signal< sc_logic > test_ce1;
    sc_signal< sc_logic > test_we1;
    sc_signal< sc_lv<8> > test_q1;
    sc_signal< sc_logic > grp_KeyExpansion_fu_143_ap_start;
    sc_signal< sc_logic > grp_KeyExpansion_fu_143_ap_idle;
    sc_signal< sc_lv<8> > grp_KeyExpansion_fu_143_RoundKey_address0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_143_RoundKey_ce0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_143_RoundKey_we0;
    sc_signal< sc_lv<8> > grp_KeyExpansion_fu_143_RoundKey_d0;
    sc_signal< sc_lv<5> > grp_KeyExpansion_fu_143_Key_address0;
    sc_signal< sc_logic > grp_KeyExpansion_fu_143_Key_ce0;
    sc_signal< sc_logic > grp_Cipher_fu_155_ap_start;
    sc_signal< sc_logic > grp_Cipher_fu_155_ap_done;
    sc_signal< sc_logic > grp_Cipher_fu_155_ap_idle;
    sc_signal< sc_logic > grp_Cipher_fu_155_ap_ready;
    sc_signal< sc_lv<4> > grp_Cipher_fu_155_state_address0;
    sc_signal< sc_logic > grp_Cipher_fu_155_state_ce0;
    sc_signal< sc_logic > grp_Cipher_fu_155_state_we0;
    sc_signal< sc_lv<8> > grp_Cipher_fu_155_state_d0;
    sc_signal< sc_lv<4> > grp_Cipher_fu_155_state_address1;
    sc_signal< sc_logic > grp_Cipher_fu_155_state_ce1;
    sc_signal< sc_logic > grp_Cipher_fu_155_state_we1;
    sc_signal< sc_lv<8> > grp_Cipher_fu_155_state_d1;
    sc_signal< sc_lv<8> > grp_Cipher_fu_155_RoundKey_address0;
    sc_signal< sc_logic > grp_Cipher_fu_155_RoundKey_ce0;
    sc_signal< sc_lv<3> > i_0_reg_99;
    sc_signal< sc_lv<3> > j_0_reg_110;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<3> > i_1_reg_121;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<3> > j_1_reg_132;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > grp_KeyExpansion_fu_143_ap_start_reg;
    sc_signal< sc_logic > grp_Cipher_fu_155_ap_start_reg;
    sc_signal< sc_lv<64> > zext_ln168_4_fu_220_p1;
    sc_signal< sc_lv<64> > zext_ln168_6_fu_234_p1;
    sc_signal< sc_lv<64> > zext_ln195_8_fu_295_p1;
    sc_signal< sc_lv<64> > zext_ln195_6_fu_318_p1;
    sc_signal< sc_lv<2> > trunc_ln168_fu_175_p1;
    sc_signal< sc_lv<5> > tmp_s_fu_187_p3;
    sc_signal< sc_lv<4> > zext_ln168_fu_211_p1;
    sc_signal< sc_lv<4> > add_ln168_fu_215_p2;
    sc_signal< sc_lv<6> > zext_ln168_5_fu_225_p1;
    sc_signal< sc_lv<5> > tmp_4_fu_250_p3;
    sc_signal< sc_lv<2> > trunc_ln195_fu_262_p1;
    sc_signal< sc_lv<6> > zext_ln195_7_fu_286_p1;
    sc_signal< sc_lv<6> > add_ln195_2_fu_290_p2;
    sc_signal< sc_lv<4> > zext_ln195_4_fu_300_p1;
    sc_signal< sc_lv<4> > add_ln195_fu_304_p2;
    sc_signal< sc_lv<6> > zext_ln195_5_fu_309_p1;
    sc_signal< sc_lv<9> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<9> ap_ST_fsm_state1;
    static const sc_lv<9> ap_ST_fsm_state2;
    static const sc_lv<9> ap_ST_fsm_state3;
    static const sc_lv<9> ap_ST_fsm_state4;
    static const sc_lv<9> ap_ST_fsm_state5;
    static const sc_lv<9> ap_ST_fsm_state6;
    static const sc_lv<9> ap_ST_fsm_state7;
    static const sc_lv<9> ap_ST_fsm_state8;
    static const sc_lv<9> ap_ST_fsm_state9;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln168_2_fu_229_p2();
    void thread_add_ln168_fu_215_p2();
    void thread_add_ln195_1_fu_313_p2();
    void thread_add_ln195_2_fu_290_p2();
    void thread_add_ln195_fu_304_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_buffer_r_address0();
    void thread_buffer_r_ce0();
    void thread_buffer_r_d0();
    void thread_buffer_r_we0();
    void thread_ctr_address0();
    void thread_ctr_ce0();
    void thread_ctx_RoundKey_address0();
    void thread_ctx_RoundKey_ce0();
    void thread_ctx_RoundKey_we0();
    void thread_grp_Cipher_fu_155_ap_start();
    void thread_grp_KeyExpansion_fu_143_ap_start();
    void thread_i_11_fu_244_p2();
    void thread_i_fu_169_p2();
    void thread_icmp_ln164_fu_163_p2();
    void thread_icmp_ln166_fu_199_p2();
    void thread_icmp_ln191_fu_238_p2();
    void thread_icmp_ln193_fu_274_p2();
    void thread_j_9_fu_280_p2();
    void thread_j_fu_205_p2();
    void thread_key_address0();
    void thread_key_ce0();
    void thread_shl_ln3_fu_266_p3();
    void thread_shl_ln_fu_179_p3();
    void thread_test_address0();
    void thread_test_ce0();
    void thread_test_ce1();
    void thread_test_d0();
    void thread_test_we0();
    void thread_test_we1();
    void thread_tmp_4_fu_250_p3();
    void thread_tmp_s_fu_187_p3();
    void thread_trunc_ln168_fu_175_p1();
    void thread_trunc_ln195_fu_262_p1();
    void thread_zext_ln166_fu_195_p1();
    void thread_zext_ln168_4_fu_220_p1();
    void thread_zext_ln168_5_fu_225_p1();
    void thread_zext_ln168_6_fu_234_p1();
    void thread_zext_ln168_fu_211_p1();
    void thread_zext_ln195_4_fu_300_p1();
    void thread_zext_ln195_5_fu_309_p1();
    void thread_zext_ln195_6_fu_318_p1();
    void thread_zext_ln195_7_fu_286_p1();
    void thread_zext_ln195_8_fu_295_p1();
    void thread_zext_ln195_fu_258_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif

// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _randombytes_HH_
#define _randombytes_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "AES256_ECB.h"
#include "AES256_ECB_1.h"
#include "randombytes_block.h"
#include "randombytes_temp.h"

namespace ap_rtl {

struct randombytes : public sc_module {
    // Port declarations 23
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > x_address0;
    sc_out< sc_logic > x_ce0;
    sc_out< sc_logic > x_we0;
    sc_out< sc_lv<8> > x_d0;
    sc_out< sc_lv<4> > DRBG_ctx_V_address0;
    sc_out< sc_logic > DRBG_ctx_V_ce0;
    sc_out< sc_logic > DRBG_ctx_V_we0;
    sc_out< sc_lv<8> > DRBG_ctx_V_d0;
    sc_in< sc_lv<8> > DRBG_ctx_V_q0;
    sc_out< sc_lv<5> > DRBG_ctx_Key_address0;
    sc_out< sc_logic > DRBG_ctx_Key_ce0;
    sc_out< sc_logic > DRBG_ctx_Key_we0;
    sc_out< sc_lv<8> > DRBG_ctx_Key_d0;
    sc_in< sc_lv<8> > DRBG_ctx_Key_q0;
    sc_in< sc_lv<32> > DRBG_ctx_reseed_counter_i;
    sc_out< sc_lv<32> > DRBG_ctx_reseed_counter_o;
    sc_out< sc_logic > DRBG_ctx_reseed_counter_o_ap_vld;


    // Module declarations
    randombytes(sc_module_name name);
    SC_HAS_PROCESS(randombytes);

    ~randombytes();

    sc_trace_file* mVcdFile;

    randombytes_block* block_U;
    randombytes_temp* temp_U;
    AES256_ECB* grp_AES256_ECB_fu_240;
    AES256_ECB_1* grp_AES256_ECB_1_fu_254;
    sc_signal< sc_lv<16> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<4> > DRBG_ctx_V_addr_reg_430;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > tmp_fu_284_p3;
    sc_signal< sc_lv<5> > j_fu_297_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > grp_fu_267_p2;
    sc_signal< sc_lv<5> > loop_fu_309_p2;
    sc_signal< sc_lv<5> > loop_reg_446;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<64> > zext_ln270_fu_315_p1;
    sc_signal< sc_lv<64> > zext_ln270_reg_451;
    sc_signal< sc_lv<1> > icmp_ln269_fu_303_p2;
    sc_signal< sc_lv<2> > i_4_fu_326_p2;
    sc_signal< sc_lv<2> > i_4_reg_464;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<4> > DRBG_ctx_V_addr_1_reg_472;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<1> > tmp_1_fu_336_p3;
    sc_signal< sc_lv<5> > j_1_fu_349_p2;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<6> > shl_ln_fu_355_p3;
    sc_signal< sc_lv<6> > shl_ln_reg_485;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<6> > i_fu_370_p2;
    sc_signal< sc_lv<6> > i_reg_493;
    sc_signal< sc_logic > ap_CS_fsm_state13;
    sc_signal< sc_lv<64> > zext_ln307_fu_376_p1;
    sc_signal< sc_lv<64> > zext_ln307_reg_498;
    sc_signal< sc_lv<1> > icmp_ln306_fu_364_p2;
    sc_signal< sc_lv<5> > i_1_fu_387_p2;
    sc_signal< sc_lv<5> > i_1_reg_511;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<1> > icmp_ln308_fu_381_p2;
    sc_signal< sc_lv<4> > block_address0;
    sc_signal< sc_logic > block_ce0;
    sc_signal< sc_logic > block_we0;
    sc_signal< sc_lv<8> > block_q0;
    sc_signal< sc_lv<6> > temp_address0;
    sc_signal< sc_logic > temp_ce0;
    sc_signal< sc_logic > temp_we0;
    sc_signal< sc_lv<8> > temp_q0;
    sc_signal< sc_logic > grp_AES256_ECB_fu_240_ap_start;
    sc_signal< sc_logic > grp_AES256_ECB_fu_240_ap_done;
    sc_signal< sc_logic > grp_AES256_ECB_fu_240_ap_idle;
    sc_signal< sc_logic > grp_AES256_ECB_fu_240_ap_ready;
    sc_signal< sc_lv<5> > grp_AES256_ECB_fu_240_key_address0;
    sc_signal< sc_logic > grp_AES256_ECB_fu_240_key_ce0;
    sc_signal< sc_lv<4> > grp_AES256_ECB_fu_240_ctr_address0;
    sc_signal< sc_logic > grp_AES256_ECB_fu_240_ctr_ce0;
    sc_signal< sc_lv<6> > grp_AES256_ECB_fu_240_buffer_r_address0;
    sc_signal< sc_logic > grp_AES256_ECB_fu_240_buffer_r_ce0;
    sc_signal< sc_logic > grp_AES256_ECB_fu_240_buffer_r_we0;
    sc_signal< sc_lv<8> > grp_AES256_ECB_fu_240_buffer_r_d0;
    sc_signal< sc_logic > grp_AES256_ECB_1_fu_254_ap_start;
    sc_signal< sc_logic > grp_AES256_ECB_1_fu_254_ap_done;
    sc_signal< sc_logic > grp_AES256_ECB_1_fu_254_ap_idle;
    sc_signal< sc_logic > grp_AES256_ECB_1_fu_254_ap_ready;
    sc_signal< sc_lv<5> > grp_AES256_ECB_1_fu_254_key_address0;
    sc_signal< sc_logic > grp_AES256_ECB_1_fu_254_key_ce0;
    sc_signal< sc_lv<4> > grp_AES256_ECB_1_fu_254_ctr_address0;
    sc_signal< sc_logic > grp_AES256_ECB_1_fu_254_ctr_ce0;
    sc_signal< sc_lv<4> > grp_AES256_ECB_1_fu_254_buffer_r_address0;
    sc_signal< sc_logic > grp_AES256_ECB_1_fu_254_buffer_r_ce0;
    sc_signal< sc_logic > grp_AES256_ECB_1_fu_254_buffer_r_we0;
    sc_signal< sc_lv<8> > grp_AES256_ECB_1_fu_254_buffer_r_d0;
    sc_signal< sc_lv<5> > j_0_reg_170;
    sc_signal< sc_lv<5> > loop_0_reg_182;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<2> > i_0_reg_193;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<5> > j1_0_reg_205;
    sc_signal< sc_lv<1> > icmp_ln287_fu_320_p2;
    sc_signal< sc_lv<6> > i_2_reg_217;
    sc_signal< sc_logic > ap_CS_fsm_state14;
    sc_signal< sc_lv<5> > i_3_reg_228;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_logic > grp_AES256_ECB_fu_240_ap_start_reg;
    sc_signal< sc_logic > grp_AES256_ECB_1_fu_254_ap_start_reg;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<64> > zext_ln249_fu_292_p1;
    sc_signal< sc_lv<64> > zext_ln292_fu_344_p1;
    sc_signal< sc_lv<64> > zext_ln309_fu_401_p1;
    sc_signal< sc_lv<64> > zext_ln309_1_fu_422_p1;
    sc_signal< sc_lv<32> > add_ln310_fu_410_p2;
    sc_signal< sc_lv<8> > grp_fu_273_p2;
    sc_signal< sc_lv<32> > sext_ln246_fu_280_p1;
    sc_signal< sc_lv<32> > sext_ln290_fu_332_p1;
    sc_signal< sc_lv<6> > or_ln_fu_393_p3;
    sc_signal< sc_lv<16> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<16> ap_ST_fsm_state1;
    static const sc_lv<16> ap_ST_fsm_state2;
    static const sc_lv<16> ap_ST_fsm_state3;
    static const sc_lv<16> ap_ST_fsm_state4;
    static const sc_lv<16> ap_ST_fsm_state5;
    static const sc_lv<16> ap_ST_fsm_state6;
    static const sc_lv<16> ap_ST_fsm_state7;
    static const sc_lv<16> ap_ST_fsm_state8;
    static const sc_lv<16> ap_ST_fsm_state9;
    static const sc_lv<16> ap_ST_fsm_state10;
    static const sc_lv<16> ap_ST_fsm_state11;
    static const sc_lv<16> ap_ST_fsm_state12;
    static const sc_lv<16> ap_ST_fsm_state13;
    static const sc_lv<16> ap_ST_fsm_state14;
    static const sc_lv<16> ap_ST_fsm_state15;
    static const sc_lv<16> ap_ST_fsm_state16;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<5> ap_const_lv5_F;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<5> ap_const_lv5_1F;
    static const sc_lv<5> ap_const_lv5_10;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_DRBG_ctx_Key_address0();
    void thread_DRBG_ctx_Key_ce0();
    void thread_DRBG_ctx_Key_d0();
    void thread_DRBG_ctx_Key_we0();
    void thread_DRBG_ctx_V_address0();
    void thread_DRBG_ctx_V_ce0();
    void thread_DRBG_ctx_V_d0();
    void thread_DRBG_ctx_V_we0();
    void thread_DRBG_ctx_reseed_counter_o();
    void thread_DRBG_ctx_reseed_counter_o_ap_vld();
    void thread_add_ln310_fu_410_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state13();
    void thread_ap_CS_fsm_state14();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_block_address0();
    void thread_block_ce0();
    void thread_block_we0();
    void thread_grp_AES256_ECB_1_fu_254_ap_start();
    void thread_grp_AES256_ECB_fu_240_ap_start();
    void thread_grp_fu_267_p2();
    void thread_grp_fu_273_p2();
    void thread_i_1_fu_387_p2();
    void thread_i_4_fu_326_p2();
    void thread_i_fu_370_p2();
    void thread_icmp_ln269_fu_303_p2();
    void thread_icmp_ln287_fu_320_p2();
    void thread_icmp_ln306_fu_364_p2();
    void thread_icmp_ln308_fu_381_p2();
    void thread_j_1_fu_349_p2();
    void thread_j_fu_297_p2();
    void thread_loop_fu_309_p2();
    void thread_or_ln_fu_393_p3();
    void thread_sext_ln246_fu_280_p1();
    void thread_sext_ln290_fu_332_p1();
    void thread_shl_ln_fu_355_p3();
    void thread_temp_address0();
    void thread_temp_ce0();
    void thread_temp_we0();
    void thread_tmp_1_fu_336_p3();
    void thread_tmp_fu_284_p3();
    void thread_x_address0();
    void thread_x_ce0();
    void thread_x_d0();
    void thread_x_we0();
    void thread_zext_ln249_fu_292_p1();
    void thread_zext_ln270_fu_315_p1();
    void thread_zext_ln292_fu_344_p1();
    void thread_zext_ln307_fu_376_p1();
    void thread_zext_ln309_1_fu_422_p1();
    void thread_zext_ln309_fu_401_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif

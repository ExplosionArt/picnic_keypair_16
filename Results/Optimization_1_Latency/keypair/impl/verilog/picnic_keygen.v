// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module picnic_keygen (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        parameters,
        pk_plaintext_address0,
        pk_plaintext_ce0,
        pk_plaintext_we0,
        pk_plaintext_d0,
        pk_plaintext_q0,
        pk_plaintext_address1,
        pk_plaintext_ce1,
        pk_plaintext_we1,
        pk_plaintext_d1,
        pk_plaintext_q1,
        pk_ciphertext_address0,
        pk_ciphertext_ce0,
        pk_ciphertext_we0,
        pk_ciphertext_d0,
        pk_ciphertext_q0,
        pk_ciphertext_address1,
        pk_ciphertext_ce1,
        pk_ciphertext_we1,
        pk_ciphertext_d1,
        pk_ciphertext_q1,
        sk_data_address0,
        sk_data_ce0,
        sk_data_we0,
        sk_data_d0,
        sk_data_q0,
        sk_data_address1,
        sk_data_ce1,
        sk_data_we1,
        sk_data_d1,
        sk_data_q1,
        sk_pk_plaintext_address0,
        sk_pk_plaintext_ce0,
        sk_pk_plaintext_we0,
        sk_pk_plaintext_d0,
        sk_pk_plaintext_address1,
        sk_pk_plaintext_ce1,
        sk_pk_plaintext_we1,
        sk_pk_plaintext_d1,
        sk_pk_ciphertext_address0,
        sk_pk_ciphertext_ce0,
        sk_pk_ciphertext_we0,
        sk_pk_ciphertext_d0,
        sk_pk_ciphertext_address1,
        sk_pk_ciphertext_ce1,
        sk_pk_ciphertext_we1,
        sk_pk_ciphertext_d1,
        DRBG_ctx_V_address0,
        DRBG_ctx_V_ce0,
        DRBG_ctx_V_we0,
        DRBG_ctx_V_d0,
        DRBG_ctx_V_q0,
        DRBG_ctx_V_address1,
        DRBG_ctx_V_ce1,
        DRBG_ctx_V_we1,
        DRBG_ctx_V_d1,
        DRBG_ctx_V_q1,
        DRBG_ctx_Key_address0,
        DRBG_ctx_Key_ce0,
        DRBG_ctx_Key_we0,
        DRBG_ctx_Key_d0,
        DRBG_ctx_Key_q0,
        DRBG_ctx_Key_address1,
        DRBG_ctx_Key_ce1,
        DRBG_ctx_Key_we1,
        DRBG_ctx_Key_d1,
        DRBG_ctx_Key_q1,
        DRBG_ctx_reseed_counter_i,
        DRBG_ctx_reseed_counter_o,
        DRBG_ctx_reseed_counter_o_ap_vld,
        ap_return_0,
        ap_return_1,
        ap_return_2
);

parameter    ap_ST_fsm_state1 = 42'd1;
parameter    ap_ST_fsm_state2 = 42'd2;
parameter    ap_ST_fsm_state3 = 42'd4;
parameter    ap_ST_fsm_state4 = 42'd8;
parameter    ap_ST_fsm_state5 = 42'd16;
parameter    ap_ST_fsm_state6 = 42'd32;
parameter    ap_ST_fsm_state7 = 42'd64;
parameter    ap_ST_fsm_state8 = 42'd128;
parameter    ap_ST_fsm_state9 = 42'd256;
parameter    ap_ST_fsm_state10 = 42'd512;
parameter    ap_ST_fsm_state11 = 42'd1024;
parameter    ap_ST_fsm_state12 = 42'd2048;
parameter    ap_ST_fsm_state13 = 42'd4096;
parameter    ap_ST_fsm_state14 = 42'd8192;
parameter    ap_ST_fsm_state15 = 42'd16384;
parameter    ap_ST_fsm_state16 = 42'd32768;
parameter    ap_ST_fsm_state17 = 42'd65536;
parameter    ap_ST_fsm_state18 = 42'd131072;
parameter    ap_ST_fsm_state19 = 42'd262144;
parameter    ap_ST_fsm_state20 = 42'd524288;
parameter    ap_ST_fsm_state21 = 42'd1048576;
parameter    ap_ST_fsm_state22 = 42'd2097152;
parameter    ap_ST_fsm_state23 = 42'd4194304;
parameter    ap_ST_fsm_state24 = 42'd8388608;
parameter    ap_ST_fsm_state25 = 42'd16777216;
parameter    ap_ST_fsm_state26 = 42'd33554432;
parameter    ap_ST_fsm_state27 = 42'd67108864;
parameter    ap_ST_fsm_state28 = 42'd134217728;
parameter    ap_ST_fsm_state29 = 42'd268435456;
parameter    ap_ST_fsm_state30 = 42'd536870912;
parameter    ap_ST_fsm_state31 = 42'd1073741824;
parameter    ap_ST_fsm_state32 = 42'd2147483648;
parameter    ap_ST_fsm_state33 = 42'd4294967296;
parameter    ap_ST_fsm_state34 = 42'd8589934592;
parameter    ap_ST_fsm_state35 = 42'd17179869184;
parameter    ap_ST_fsm_state36 = 42'd34359738368;
parameter    ap_ST_fsm_state37 = 42'd68719476736;
parameter    ap_ST_fsm_state38 = 42'd137438953472;
parameter    ap_ST_fsm_state39 = 42'd274877906944;
parameter    ap_ST_fsm_state40 = 42'd549755813888;
parameter    ap_ST_fsm_state41 = 42'd1099511627776;
parameter    ap_ST_fsm_state42 = 42'd2199023255552;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [3:0] parameters;
output  [4:0] pk_plaintext_address0;
output   pk_plaintext_ce0;
output   pk_plaintext_we0;
output  [7:0] pk_plaintext_d0;
input  [7:0] pk_plaintext_q0;
output  [4:0] pk_plaintext_address1;
output   pk_plaintext_ce1;
output   pk_plaintext_we1;
output  [7:0] pk_plaintext_d1;
input  [7:0] pk_plaintext_q1;
output  [4:0] pk_ciphertext_address0;
output   pk_ciphertext_ce0;
output   pk_ciphertext_we0;
output  [7:0] pk_ciphertext_d0;
input  [7:0] pk_ciphertext_q0;
output  [4:0] pk_ciphertext_address1;
output   pk_ciphertext_ce1;
output   pk_ciphertext_we1;
output  [7:0] pk_ciphertext_d1;
input  [7:0] pk_ciphertext_q1;
output  [4:0] sk_data_address0;
output   sk_data_ce0;
output   sk_data_we0;
output  [7:0] sk_data_d0;
input  [7:0] sk_data_q0;
output  [4:0] sk_data_address1;
output   sk_data_ce1;
output   sk_data_we1;
output  [7:0] sk_data_d1;
input  [7:0] sk_data_q1;
output  [4:0] sk_pk_plaintext_address0;
output   sk_pk_plaintext_ce0;
output   sk_pk_plaintext_we0;
output  [7:0] sk_pk_plaintext_d0;
output  [4:0] sk_pk_plaintext_address1;
output   sk_pk_plaintext_ce1;
output   sk_pk_plaintext_we1;
output  [7:0] sk_pk_plaintext_d1;
output  [4:0] sk_pk_ciphertext_address0;
output   sk_pk_ciphertext_ce0;
output   sk_pk_ciphertext_we0;
output  [7:0] sk_pk_ciphertext_d0;
output  [4:0] sk_pk_ciphertext_address1;
output   sk_pk_ciphertext_ce1;
output   sk_pk_ciphertext_we1;
output  [7:0] sk_pk_ciphertext_d1;
output  [3:0] DRBG_ctx_V_address0;
output   DRBG_ctx_V_ce0;
output   DRBG_ctx_V_we0;
output  [7:0] DRBG_ctx_V_d0;
input  [7:0] DRBG_ctx_V_q0;
output  [3:0] DRBG_ctx_V_address1;
output   DRBG_ctx_V_ce1;
output   DRBG_ctx_V_we1;
output  [7:0] DRBG_ctx_V_d1;
input  [7:0] DRBG_ctx_V_q1;
output  [4:0] DRBG_ctx_Key_address0;
output   DRBG_ctx_Key_ce0;
output   DRBG_ctx_Key_we0;
output  [7:0] DRBG_ctx_Key_d0;
input  [7:0] DRBG_ctx_Key_q0;
output  [4:0] DRBG_ctx_Key_address1;
output   DRBG_ctx_Key_ce1;
output   DRBG_ctx_Key_we1;
output  [7:0] DRBG_ctx_Key_d1;
input  [7:0] DRBG_ctx_Key_q1;
input  [31:0] DRBG_ctx_reseed_counter_i;
output  [31:0] DRBG_ctx_reseed_counter_o;
output   DRBG_ctx_reseed_counter_o_ap_vld;
output  [31:0] ap_return_0;
output  [3:0] ap_return_1;
output  [3:0] ap_return_2;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[4:0] pk_plaintext_address0;
reg pk_plaintext_ce0;
reg pk_plaintext_we0;
reg[4:0] pk_plaintext_address1;
reg pk_plaintext_ce1;
reg pk_plaintext_we1;
reg[4:0] pk_ciphertext_address0;
reg pk_ciphertext_ce0;
reg pk_ciphertext_we0;
reg[7:0] pk_ciphertext_d0;
reg[4:0] pk_ciphertext_address1;
reg pk_ciphertext_ce1;
reg pk_ciphertext_we1;
reg[7:0] pk_ciphertext_d1;
reg[4:0] sk_data_address0;
reg sk_data_ce0;
reg sk_data_we0;
reg[4:0] sk_data_address1;
reg sk_data_ce1;
reg sk_data_we1;
reg[4:0] sk_pk_plaintext_address0;
reg sk_pk_plaintext_ce0;
reg sk_pk_plaintext_we0;
reg[4:0] sk_pk_plaintext_address1;
reg sk_pk_plaintext_ce1;
reg sk_pk_plaintext_we1;
reg[4:0] sk_pk_ciphertext_address0;
reg sk_pk_ciphertext_ce0;
reg sk_pk_ciphertext_we0;
reg[7:0] sk_pk_ciphertext_d0;
reg[4:0] sk_pk_ciphertext_address1;
reg sk_pk_ciphertext_ce1;
reg sk_pk_ciphertext_we1;
reg[7:0] sk_pk_ciphertext_d1;
reg DRBG_ctx_V_ce0;
reg DRBG_ctx_V_we0;
reg DRBG_ctx_V_ce1;
reg DRBG_ctx_V_we1;
reg DRBG_ctx_Key_ce0;
reg DRBG_ctx_Key_we0;
reg DRBG_ctx_Key_ce1;
reg DRBG_ctx_Key_we1;
reg[31:0] DRBG_ctx_reseed_counter_o;
reg DRBG_ctx_reseed_counter_o_ap_vld;
reg[31:0] ap_return_0;
reg[3:0] ap_return_1;
reg[3:0] ap_return_2;

(* fsm_encoding = "none" *) reg   [41:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] reg_1993;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state12;
wire    ap_CS_fsm_state14;
wire    ap_CS_fsm_state16;
wire    ap_CS_fsm_state18;
wire    ap_CS_fsm_state20;
wire    ap_CS_fsm_state22;
reg   [7:0] reg_1997;
reg   [7:0] reg_2001;
reg   [7:0] reg_2005;
reg   [7:0] reg_2009;
reg   [7:0] reg_2013;
reg   [7:0] reg_2017;
wire    ap_CS_fsm_state27;
wire    ap_CS_fsm_state29;
wire    ap_CS_fsm_state31;
wire    ap_CS_fsm_state33;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state37;
wire    ap_CS_fsm_state39;
wire    ap_CS_fsm_state41;
reg   [7:0] reg_2023;
wire   [0:0] empty_25_fu_2101_p2;
reg   [0:0] empty_25_reg_2548;
wire   [2:0] add_ln211_fu_2107_p2;
wire    ap_CS_fsm_state5;
wire   [2:0] add_ln211_1_fu_2124_p2;
wire    ap_CS_fsm_state6;
wire   [2:0] add_ln211_2_fu_2141_p2;
wire    ap_CS_fsm_state7;
wire   [4:0] pk_ciphertext_addr_reg_2576;
wire   [0:0] icmp_ln211_2_fu_2152_p2;
wire   [4:0] pk_ciphertext_addr_1_reg_2581;
wire   [4:0] pk_plaintext_addr_reg_2586;
wire   [4:0] pk_plaintext_addr_1_reg_2591;
wire   [4:0] pk_ciphertext_addr_2_reg_2606;
wire   [4:0] pk_ciphertext_addr_3_reg_2611;
wire   [4:0] pk_plaintext_addr_2_reg_2616;
wire   [4:0] pk_plaintext_addr_3_reg_2621;
wire   [2:0] temp_addr_1_reg_2636;
wire    ap_CS_fsm_state9;
wire   [4:0] pk_ciphertext_addr_4_reg_2641;
wire   [4:0] pk_ciphertext_addr_5_reg_2646;
wire   [4:0] pk_plaintext_addr_4_reg_2651;
wire   [4:0] pk_plaintext_addr_5_reg_2656;
wire   [4:0] pk_ciphertext_addr_8_reg_2671;
wire   [4:0] pk_ciphertext_addr_9_reg_2676;
wire   [4:0] pk_plaintext_addr_6_reg_2681;
wire   [4:0] pk_plaintext_addr_7_reg_2686;
wire   [2:0] temp_addr_2_reg_2701;
wire    ap_CS_fsm_state11;
wire   [4:0] pk_ciphertext_addr_10_reg_2706;
wire   [4:0] pk_ciphertext_addr_11_reg_2711;
wire   [4:0] pk_plaintext_addr_8_reg_2716;
wire   [4:0] pk_plaintext_addr_9_reg_2721;
wire   [4:0] pk_ciphertext_addr_12_reg_2736;
wire   [4:0] pk_ciphertext_addr_13_reg_2741;
wire   [4:0] pk_plaintext_addr_10_reg_2746;
wire   [4:0] pk_plaintext_addr_11_reg_2751;
wire   [2:0] temp_addr_3_reg_2766;
wire    ap_CS_fsm_state13;
wire   [4:0] pk_ciphertext_addr_14_reg_2771;
wire   [4:0] pk_ciphertext_addr_15_reg_2776;
wire   [4:0] pk_plaintext_addr_12_reg_2781;
wire   [4:0] pk_plaintext_addr_13_reg_2786;
wire   [4:0] pk_ciphertext_addr_16_reg_2801;
wire   [4:0] pk_ciphertext_addr_17_reg_2806;
wire   [4:0] pk_plaintext_addr_14_reg_2811;
wire   [4:0] pk_plaintext_addr_15_reg_2816;
wire   [2:0] temp_addr_4_reg_2831;
wire    ap_CS_fsm_state15;
wire   [4:0] pk_ciphertext_addr_18_reg_2836;
wire   [4:0] pk_ciphertext_addr_19_reg_2841;
wire   [4:0] pk_plaintext_addr_16_reg_2846;
wire   [4:0] pk_plaintext_addr_17_reg_2851;
wire   [4:0] pk_ciphertext_addr_20_reg_2866;
wire   [4:0] pk_ciphertext_addr_21_reg_2871;
wire   [4:0] pk_plaintext_addr_18_reg_2876;
wire   [4:0] pk_plaintext_addr_19_reg_2881;
wire   [2:0] temp_addr_5_reg_2896;
wire    ap_CS_fsm_state17;
wire   [4:0] pk_ciphertext_addr_22_reg_2901;
wire   [4:0] pk_ciphertext_addr_23_reg_2906;
wire   [4:0] pk_plaintext_addr_20_reg_2911;
wire   [4:0] pk_plaintext_addr_21_reg_2916;
wire   [4:0] pk_ciphertext_addr_24_reg_2931;
wire   [4:0] pk_ciphertext_addr_25_reg_2936;
wire   [4:0] pk_plaintext_addr_22_reg_2941;
wire   [4:0] pk_plaintext_addr_23_reg_2946;
wire   [2:0] temp_addr_6_reg_2961;
wire    ap_CS_fsm_state19;
wire   [4:0] pk_ciphertext_addr_6_reg_2966;
wire   [4:0] pk_ciphertext_addr_26_reg_2971;
wire   [4:0] pk_plaintext_addr_24_reg_2976;
wire   [4:0] pk_plaintext_addr_25_reg_2981;
wire   [4:0] pk_ciphertext_addr_27_reg_2996;
wire   [4:0] pk_ciphertext_addr_28_reg_3001;
wire   [4:0] pk_plaintext_addr_26_reg_3006;
wire   [4:0] pk_plaintext_addr_27_reg_3011;
wire   [2:0] temp_addr_7_reg_3026;
wire    ap_CS_fsm_state21;
wire   [4:0] pk_ciphertext_addr_7_reg_3031;
wire   [4:0] pk_ciphertext_addr_29_reg_3036;
wire   [4:0] pk_plaintext_addr_28_reg_3041;
wire   [4:0] pk_plaintext_addr_29_reg_3046;
wire   [4:0] pk_ciphertext_addr_30_reg_3061;
wire   [4:0] pk_ciphertext_addr_31_reg_3066;
wire   [4:0] pk_plaintext_addr_30_reg_3071;
wire   [4:0] pk_plaintext_addr_31_reg_3076;
wire   [2:0] temp_addr_8_reg_3091;
wire    ap_CS_fsm_state23;
reg   [2:0] temp_address0;
reg    temp_ce0;
reg    temp_we0;
reg   [31:0] temp_d0;
wire   [31:0] temp_q0;
reg    temp_ce1;
reg    temp_we1;
wire   [31:0] temp_q1;
reg   [2:0] temp2_address0;
reg    temp2_ce0;
reg    temp2_we0;
reg   [31:0] temp2_d0;
wire   [31:0] temp2_q0;
reg    temp2_ce1;
wire   [31:0] temp2_q1;
reg   [2:0] temp3_address0;
reg    temp3_ce0;
reg    temp3_we0;
reg   [31:0] temp3_d0;
wire   [31:0] temp3_q0;
reg    temp3_ce1;
wire   [31:0] temp3_q1;
wire    grp_randombytes_fu_1933_ap_start;
wire    grp_randombytes_fu_1933_ap_done;
wire    grp_randombytes_fu_1933_ap_idle;
wire    grp_randombytes_fu_1933_ap_ready;
wire   [4:0] grp_randombytes_fu_1933_x_address0;
wire    grp_randombytes_fu_1933_x_ce0;
wire    grp_randombytes_fu_1933_x_we0;
wire   [7:0] grp_randombytes_fu_1933_x_d0;
wire   [4:0] grp_randombytes_fu_1933_x_address1;
wire    grp_randombytes_fu_1933_x_ce1;
wire    grp_randombytes_fu_1933_x_we1;
wire   [7:0] grp_randombytes_fu_1933_x_d1;
wire   [3:0] grp_randombytes_fu_1933_DRBG_ctx_V_address0;
wire    grp_randombytes_fu_1933_DRBG_ctx_V_ce0;
wire    grp_randombytes_fu_1933_DRBG_ctx_V_we0;
wire   [7:0] grp_randombytes_fu_1933_DRBG_ctx_V_d0;
wire   [3:0] grp_randombytes_fu_1933_DRBG_ctx_V_address1;
wire    grp_randombytes_fu_1933_DRBG_ctx_V_ce1;
wire    grp_randombytes_fu_1933_DRBG_ctx_V_we1;
wire   [7:0] grp_randombytes_fu_1933_DRBG_ctx_V_d1;
wire   [4:0] grp_randombytes_fu_1933_DRBG_ctx_Key_address0;
wire    grp_randombytes_fu_1933_DRBG_ctx_Key_ce0;
wire    grp_randombytes_fu_1933_DRBG_ctx_Key_we0;
wire   [7:0] grp_randombytes_fu_1933_DRBG_ctx_Key_d0;
wire   [4:0] grp_randombytes_fu_1933_DRBG_ctx_Key_address1;
wire    grp_randombytes_fu_1933_DRBG_ctx_Key_ce1;
wire    grp_randombytes_fu_1933_DRBG_ctx_Key_we1;
wire   [7:0] grp_randombytes_fu_1933_DRBG_ctx_Key_d1;
wire   [31:0] grp_randombytes_fu_1933_DRBG_ctx_reseed_counter_o;
wire    grp_randombytes_fu_1933_DRBG_ctx_reseed_counter_o_ap_vld;
wire    grp_LowMCEnc_fu_1948_ap_start;
wire    grp_LowMCEnc_fu_1948_ap_done;
wire    grp_LowMCEnc_fu_1948_ap_idle;
wire    grp_LowMCEnc_fu_1948_ap_ready;
wire   [2:0] grp_LowMCEnc_fu_1948_plaintext_address0;
wire    grp_LowMCEnc_fu_1948_plaintext_ce0;
wire   [2:0] grp_LowMCEnc_fu_1948_plaintext_address1;
wire    grp_LowMCEnc_fu_1948_plaintext_ce1;
wire   [2:0] grp_LowMCEnc_fu_1948_output_r_address0;
wire    grp_LowMCEnc_fu_1948_output_r_ce0;
wire    grp_LowMCEnc_fu_1948_output_r_we0;
wire   [31:0] grp_LowMCEnc_fu_1948_output_r_d0;
wire   [2:0] grp_LowMCEnc_fu_1948_output_r_address1;
wire    grp_LowMCEnc_fu_1948_output_r_ce1;
wire    grp_LowMCEnc_fu_1948_output_r_we1;
wire   [31:0] grp_LowMCEnc_fu_1948_output_r_d1;
wire   [2:0] grp_LowMCEnc_fu_1948_key_address0;
wire    grp_LowMCEnc_fu_1948_key_ce0;
wire   [2:0] grp_LowMCEnc_fu_1948_key_address1;
wire    grp_LowMCEnc_fu_1948_key_ce1;
reg   [2:0] phi_ln211_reg_1888;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln211_fu_2118_p2;
reg   [2:0] phi_ln211_1_reg_1899;
wire   [0:0] icmp_ln211_1_fu_2135_p2;
reg   [2:0] phi_ln211_2_reg_1910;
reg   [0:0] ap_phi_mux_p_0_phi_fu_1925_p4;
reg   [0:0] p_0_reg_1921;
wire    ap_CS_fsm_state42;
reg    grp_randombytes_fu_1933_ap_start_reg;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state2;
reg    grp_LowMCEnc_fu_1948_ap_start_reg;
wire    ap_CS_fsm_state24;
wire    ap_CS_fsm_state25;
wire   [63:0] zext_ln211_fu_2113_p1;
wire   [63:0] zext_ln211_1_fu_2130_p1;
wire   [63:0] zext_ln211_2_fu_2147_p1;
wire    ap_CS_fsm_state26;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state32;
wire    ap_CS_fsm_state34;
wire    ap_CS_fsm_state36;
wire    ap_CS_fsm_state38;
wire    ap_CS_fsm_state40;
wire   [31:0] or_ln215_5_fu_2158_p5;
wire   [31:0] or_ln215_5_1_fu_2197_p5;
wire   [31:0] or_ln215_5_2_fu_2236_p5;
wire   [31:0] or_ln215_5_3_fu_2275_p5;
wire   [31:0] or_ln215_5_4_fu_2314_p5;
wire   [31:0] or_ln215_5_5_fu_2353_p5;
wire   [31:0] or_ln215_5_6_fu_2392_p5;
wire   [31:0] or_ln215_5_7_fu_2431_p5;
wire   [31:0] or_ln216_2_fu_2171_p5;
wire   [31:0] or_ln216_2_1_fu_2210_p5;
wire   [31:0] or_ln216_2_2_fu_2249_p5;
wire   [31:0] or_ln216_2_3_fu_2288_p5;
wire   [31:0] or_ln216_2_4_fu_2327_p5;
wire   [31:0] or_ln216_2_5_fu_2366_p5;
wire   [31:0] or_ln216_2_6_fu_2405_p5;
wire   [31:0] or_ln216_2_7_fu_2444_p5;
wire   [31:0] or_ln217_2_fu_2184_p5;
wire   [31:0] or_ln217_2_1_fu_2223_p5;
wire   [31:0] or_ln217_2_2_fu_2262_p5;
wire   [31:0] or_ln217_2_3_fu_2301_p5;
wire   [31:0] or_ln217_2_4_fu_2340_p5;
wire   [31:0] or_ln217_2_5_fu_2379_p5;
wire   [31:0] or_ln217_2_6_fu_2418_p5;
wire   [31:0] or_ln217_2_7_fu_2457_p5;
wire   [7:0] trunc_ln227_fu_2470_p1;
wire   [7:0] trunc_ln227_4_fu_2476_p1;
wire   [7:0] trunc_ln227_8_fu_2482_p1;
wire   [7:0] trunc_ln227_11_fu_2488_p1;
wire   [7:0] trunc_ln227_15_fu_2494_p1;
wire   [7:0] trunc_ln227_19_fu_2500_p1;
wire   [7:0] trunc_ln227_23_fu_2506_p1;
wire   [7:0] trunc_ln227_27_fu_2512_p1;
wire   [0:0] empty_14_fu_2035_p2;
wire   [0:0] empty_fu_2029_p2;
wire   [0:0] empty_16_fu_2047_p2;
wire   [0:0] empty_15_fu_2041_p2;
wire   [0:0] empty_18_fu_2059_p2;
wire   [0:0] empty_17_fu_2053_p2;
wire   [0:0] empty_20_fu_2071_p2;
wire   [0:0] empty_19_fu_2065_p2;
wire   [0:0] empty_22_fu_2083_p2;
wire   [0:0] empty_21_fu_2077_p2;
wire   [0:0] empty_24_fu_2095_p2;
wire   [0:0] empty_23_fu_2089_p2;
wire   [31:0] select_ln166_fu_2518_p3;
reg   [31:0] ap_return_0_preg;
reg   [3:0] ap_return_1_preg;
reg   [3:0] ap_return_2_preg;
reg   [41:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 42'd1;
#0 grp_randombytes_fu_1933_ap_start_reg = 1'b0;
#0 grp_LowMCEnc_fu_1948_ap_start_reg = 1'b0;
#0 ap_return_0_preg = 32'd0;
#0 ap_return_1_preg = 4'd0;
#0 ap_return_2_preg = 4'd0;
end

picnic_keygen_temp #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
temp_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp_address0),
    .ce0(temp_ce0),
    .we0(temp_we0),
    .d0(temp_d0),
    .q0(temp_q0),
    .address1(grp_LowMCEnc_fu_1948_output_r_address1),
    .ce1(temp_ce1),
    .we1(temp_we1),
    .d1(grp_LowMCEnc_fu_1948_output_r_d1),
    .q1(temp_q1)
);

picnic_keygen_temp2 #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
temp2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp2_address0),
    .ce0(temp2_ce0),
    .we0(temp2_we0),
    .d0(temp2_d0),
    .q0(temp2_q0),
    .address1(grp_LowMCEnc_fu_1948_plaintext_address1),
    .ce1(temp2_ce1),
    .q1(temp2_q1)
);

picnic_keygen_temp2 #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
temp3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp3_address0),
    .ce0(temp3_ce0),
    .we0(temp3_we0),
    .d0(temp3_d0),
    .q0(temp3_q0),
    .address1(grp_LowMCEnc_fu_1948_key_address1),
    .ce1(temp3_ce1),
    .q1(temp3_q1)
);

randombytes grp_randombytes_fu_1933(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_randombytes_fu_1933_ap_start),
    .ap_done(grp_randombytes_fu_1933_ap_done),
    .ap_idle(grp_randombytes_fu_1933_ap_idle),
    .ap_ready(grp_randombytes_fu_1933_ap_ready),
    .x_address0(grp_randombytes_fu_1933_x_address0),
    .x_ce0(grp_randombytes_fu_1933_x_ce0),
    .x_we0(grp_randombytes_fu_1933_x_we0),
    .x_d0(grp_randombytes_fu_1933_x_d0),
    .x_address1(grp_randombytes_fu_1933_x_address1),
    .x_ce1(grp_randombytes_fu_1933_x_ce1),
    .x_we1(grp_randombytes_fu_1933_x_we1),
    .x_d1(grp_randombytes_fu_1933_x_d1),
    .DRBG_ctx_V_address0(grp_randombytes_fu_1933_DRBG_ctx_V_address0),
    .DRBG_ctx_V_ce0(grp_randombytes_fu_1933_DRBG_ctx_V_ce0),
    .DRBG_ctx_V_we0(grp_randombytes_fu_1933_DRBG_ctx_V_we0),
    .DRBG_ctx_V_d0(grp_randombytes_fu_1933_DRBG_ctx_V_d0),
    .DRBG_ctx_V_q0(DRBG_ctx_V_q0),
    .DRBG_ctx_V_address1(grp_randombytes_fu_1933_DRBG_ctx_V_address1),
    .DRBG_ctx_V_ce1(grp_randombytes_fu_1933_DRBG_ctx_V_ce1),
    .DRBG_ctx_V_we1(grp_randombytes_fu_1933_DRBG_ctx_V_we1),
    .DRBG_ctx_V_d1(grp_randombytes_fu_1933_DRBG_ctx_V_d1),
    .DRBG_ctx_V_q1(DRBG_ctx_V_q1),
    .DRBG_ctx_Key_address0(grp_randombytes_fu_1933_DRBG_ctx_Key_address0),
    .DRBG_ctx_Key_ce0(grp_randombytes_fu_1933_DRBG_ctx_Key_ce0),
    .DRBG_ctx_Key_we0(grp_randombytes_fu_1933_DRBG_ctx_Key_we0),
    .DRBG_ctx_Key_d0(grp_randombytes_fu_1933_DRBG_ctx_Key_d0),
    .DRBG_ctx_Key_q0(DRBG_ctx_Key_q0),
    .DRBG_ctx_Key_address1(grp_randombytes_fu_1933_DRBG_ctx_Key_address1),
    .DRBG_ctx_Key_ce1(grp_randombytes_fu_1933_DRBG_ctx_Key_ce1),
    .DRBG_ctx_Key_we1(grp_randombytes_fu_1933_DRBG_ctx_Key_we1),
    .DRBG_ctx_Key_d1(grp_randombytes_fu_1933_DRBG_ctx_Key_d1),
    .DRBG_ctx_Key_q1(DRBG_ctx_Key_q1),
    .DRBG_ctx_reseed_counter_i(DRBG_ctx_reseed_counter_i),
    .DRBG_ctx_reseed_counter_o(grp_randombytes_fu_1933_DRBG_ctx_reseed_counter_o),
    .DRBG_ctx_reseed_counter_o_ap_vld(grp_randombytes_fu_1933_DRBG_ctx_reseed_counter_o_ap_vld)
);

LowMCEnc grp_LowMCEnc_fu_1948(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_LowMCEnc_fu_1948_ap_start),
    .ap_done(grp_LowMCEnc_fu_1948_ap_done),
    .ap_idle(grp_LowMCEnc_fu_1948_ap_idle),
    .ap_ready(grp_LowMCEnc_fu_1948_ap_ready),
    .plaintext_address0(grp_LowMCEnc_fu_1948_plaintext_address0),
    .plaintext_ce0(grp_LowMCEnc_fu_1948_plaintext_ce0),
    .plaintext_q0(temp2_q0),
    .plaintext_address1(grp_LowMCEnc_fu_1948_plaintext_address1),
    .plaintext_ce1(grp_LowMCEnc_fu_1948_plaintext_ce1),
    .plaintext_q1(temp2_q1),
    .output_r_address0(grp_LowMCEnc_fu_1948_output_r_address0),
    .output_r_ce0(grp_LowMCEnc_fu_1948_output_r_ce0),
    .output_r_we0(grp_LowMCEnc_fu_1948_output_r_we0),
    .output_r_d0(grp_LowMCEnc_fu_1948_output_r_d0),
    .output_r_q0(temp_q0),
    .output_r_address1(grp_LowMCEnc_fu_1948_output_r_address1),
    .output_r_ce1(grp_LowMCEnc_fu_1948_output_r_ce1),
    .output_r_we1(grp_LowMCEnc_fu_1948_output_r_we1),
    .output_r_d1(grp_LowMCEnc_fu_1948_output_r_d1),
    .output_r_q1(temp_q1),
    .key_address0(grp_LowMCEnc_fu_1948_key_address0),
    .key_ce0(grp_LowMCEnc_fu_1948_key_ce0),
    .key_q0(temp3_q0),
    .key_address1(grp_LowMCEnc_fu_1948_key_address1),
    .key_ce1(grp_LowMCEnc_fu_1948_key_ce1),
    .key_q1(temp3_q1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state42)) begin
            ap_return_0_preg <= select_ln166_fu_2518_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 4'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state42)) begin
            ap_return_1_preg <= parameters;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_2_preg <= 4'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state42)) begin
            ap_return_2_preg <= parameters;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_LowMCEnc_fu_1948_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state24)) begin
            grp_LowMCEnc_fu_1948_ap_start_reg <= 1'b1;
        end else if ((grp_LowMCEnc_fu_1948_ap_ready == 1'b1)) begin
            grp_LowMCEnc_fu_1948_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_randombytes_fu_1933_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state3) | ((ap_start == 1'b1) & (empty_25_fu_2101_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1)))) begin
            grp_randombytes_fu_1933_ap_start_reg <= 1'b1;
        end else if ((grp_randombytes_fu_1933_ap_ready == 1'b1)) begin
            grp_randombytes_fu_1933_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (empty_25_fu_2101_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
        p_0_reg_1921 <= 1'd1;
    end else if (((empty_25_reg_2548 == 1'd0) & (1'b1 == ap_CS_fsm_state42))) begin
        p_0_reg_1921 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln211_fu_2118_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        phi_ln211_1_reg_1899 <= 3'd0;
    end else if (((icmp_ln211_1_fu_2135_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        phi_ln211_1_reg_1899 <= add_ln211_1_fu_2124_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln211_1_fu_2135_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        phi_ln211_2_reg_1910 <= 3'd0;
    end else if (((icmp_ln211_2_fu_2152_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state7))) begin
        phi_ln211_2_reg_1910 <= add_ln211_2_fu_2141_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln211_fu_2118_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        phi_ln211_reg_1888 <= add_ln211_fu_2107_p2;
    end else if (((grp_randombytes_fu_1933_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        phi_ln211_reg_1888 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        empty_25_reg_2548 <= empty_25_fu_2101_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8))) begin
        reg_1993 <= pk_ciphertext_q0;
        reg_1997 <= pk_ciphertext_q1;
        reg_2001 <= pk_plaintext_q0;
        reg_2005 <= pk_plaintext_q1;
        reg_2009 <= sk_data_q0;
        reg_2013 <= sk_data_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27))) begin
        reg_2017 <= {{temp_q0[23:16]}};
        reg_2023 <= {{temp_q0[31:24]}};
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4))) begin
        DRBG_ctx_Key_ce0 = grp_randombytes_fu_1933_DRBG_ctx_Key_ce0;
    end else begin
        DRBG_ctx_Key_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4))) begin
        DRBG_ctx_Key_ce1 = grp_randombytes_fu_1933_DRBG_ctx_Key_ce1;
    end else begin
        DRBG_ctx_Key_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4))) begin
        DRBG_ctx_Key_we0 = grp_randombytes_fu_1933_DRBG_ctx_Key_we0;
    end else begin
        DRBG_ctx_Key_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4))) begin
        DRBG_ctx_Key_we1 = grp_randombytes_fu_1933_DRBG_ctx_Key_we1;
    end else begin
        DRBG_ctx_Key_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4))) begin
        DRBG_ctx_V_ce0 = grp_randombytes_fu_1933_DRBG_ctx_V_ce0;
    end else begin
        DRBG_ctx_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4))) begin
        DRBG_ctx_V_ce1 = grp_randombytes_fu_1933_DRBG_ctx_V_ce1;
    end else begin
        DRBG_ctx_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4))) begin
        DRBG_ctx_V_we0 = grp_randombytes_fu_1933_DRBG_ctx_V_we0;
    end else begin
        DRBG_ctx_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4))) begin
        DRBG_ctx_V_we1 = grp_randombytes_fu_1933_DRBG_ctx_V_we1;
    end else begin
        DRBG_ctx_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & (grp_randombytes_fu_1933_DRBG_ctx_reseed_counter_o_ap_vld == 1'b1)) | ((1'b1 == ap_CS_fsm_state4) & (grp_randombytes_fu_1933_DRBG_ctx_reseed_counter_o_ap_vld == 1'b1)))) begin
        DRBG_ctx_reseed_counter_o = grp_randombytes_fu_1933_DRBG_ctx_reseed_counter_o;
    end else begin
        DRBG_ctx_reseed_counter_o = DRBG_ctx_reseed_counter_i;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state4))) begin
        DRBG_ctx_reseed_counter_o_ap_vld = grp_randombytes_fu_1933_DRBG_ctx_reseed_counter_o_ap_vld;
    end else begin
        DRBG_ctx_reseed_counter_o_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state42) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((empty_25_reg_2548 == 1'd0) & (1'b1 == ap_CS_fsm_state42))) begin
        ap_phi_mux_p_0_phi_fu_1925_p4 = 1'd0;
    end else begin
        ap_phi_mux_p_0_phi_fu_1925_p4 = p_0_reg_1921;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        ap_return_0 = select_ln166_fu_2518_p3;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        ap_return_1 = parameters;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        ap_return_2 = parameters;
    end else begin
        ap_return_2 = ap_return_2_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        pk_ciphertext_address0 = pk_ciphertext_addr_30_reg_3061;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        pk_ciphertext_address0 = pk_ciphertext_addr_7_reg_3031;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        pk_ciphertext_address0 = pk_ciphertext_addr_27_reg_2996;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        pk_ciphertext_address0 = pk_ciphertext_addr_6_reg_2966;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        pk_ciphertext_address0 = pk_ciphertext_addr_24_reg_2931;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        pk_ciphertext_address0 = pk_ciphertext_addr_22_reg_2901;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        pk_ciphertext_address0 = pk_ciphertext_addr_20_reg_2866;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        pk_ciphertext_address0 = pk_ciphertext_addr_18_reg_2836;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        pk_ciphertext_address0 = pk_ciphertext_addr_16_reg_2801;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        pk_ciphertext_address0 = pk_ciphertext_addr_14_reg_2771;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        pk_ciphertext_address0 = pk_ciphertext_addr_12_reg_2736;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        pk_ciphertext_address0 = pk_ciphertext_addr_10_reg_2706;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        pk_ciphertext_address0 = pk_ciphertext_addr_8_reg_2671;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        pk_ciphertext_address0 = pk_ciphertext_addr_4_reg_2641;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        pk_ciphertext_address0 = pk_ciphertext_addr_2_reg_2606;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        pk_ciphertext_address0 = pk_ciphertext_addr_reg_2576;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        pk_ciphertext_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        pk_ciphertext_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        pk_ciphertext_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        pk_ciphertext_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        pk_ciphertext_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        pk_ciphertext_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        pk_ciphertext_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        pk_ciphertext_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        pk_ciphertext_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        pk_ciphertext_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        pk_ciphertext_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        pk_ciphertext_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        pk_ciphertext_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        pk_ciphertext_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        pk_ciphertext_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        pk_ciphertext_address0 = 64'd0;
    end else begin
        pk_ciphertext_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        pk_ciphertext_address1 = pk_ciphertext_addr_31_reg_3066;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        pk_ciphertext_address1 = pk_ciphertext_addr_29_reg_3036;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        pk_ciphertext_address1 = pk_ciphertext_addr_28_reg_3001;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        pk_ciphertext_address1 = pk_ciphertext_addr_26_reg_2971;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        pk_ciphertext_address1 = pk_ciphertext_addr_25_reg_2936;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        pk_ciphertext_address1 = pk_ciphertext_addr_23_reg_2906;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        pk_ciphertext_address1 = pk_ciphertext_addr_21_reg_2871;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        pk_ciphertext_address1 = pk_ciphertext_addr_19_reg_2841;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        pk_ciphertext_address1 = pk_ciphertext_addr_17_reg_2806;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        pk_ciphertext_address1 = pk_ciphertext_addr_15_reg_2776;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        pk_ciphertext_address1 = pk_ciphertext_addr_13_reg_2741;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        pk_ciphertext_address1 = pk_ciphertext_addr_11_reg_2711;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        pk_ciphertext_address1 = pk_ciphertext_addr_9_reg_2676;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        pk_ciphertext_address1 = pk_ciphertext_addr_5_reg_2646;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        pk_ciphertext_address1 = pk_ciphertext_addr_3_reg_2611;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        pk_ciphertext_address1 = pk_ciphertext_addr_1_reg_2581;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        pk_ciphertext_address1 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        pk_ciphertext_address1 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        pk_ciphertext_address1 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        pk_ciphertext_address1 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        pk_ciphertext_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        pk_ciphertext_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        pk_ciphertext_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        pk_ciphertext_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        pk_ciphertext_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        pk_ciphertext_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        pk_ciphertext_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        pk_ciphertext_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        pk_ciphertext_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        pk_ciphertext_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        pk_ciphertext_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        pk_ciphertext_address1 = 64'd1;
    end else begin
        pk_ciphertext_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8))) begin
        pk_ciphertext_ce0 = 1'b1;
    end else begin
        pk_ciphertext_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8))) begin
        pk_ciphertext_ce1 = 1'b1;
    end else begin
        pk_ciphertext_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        pk_ciphertext_d0 = trunc_ln227_27_fu_2512_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        pk_ciphertext_d0 = trunc_ln227_23_fu_2506_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        pk_ciphertext_d0 = trunc_ln227_19_fu_2500_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        pk_ciphertext_d0 = trunc_ln227_15_fu_2494_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        pk_ciphertext_d0 = trunc_ln227_11_fu_2488_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        pk_ciphertext_d0 = trunc_ln227_8_fu_2482_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        pk_ciphertext_d0 = trunc_ln227_4_fu_2476_p1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state42))) begin
        pk_ciphertext_d0 = reg_2017;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        pk_ciphertext_d0 = trunc_ln227_fu_2470_p1;
    end else begin
        pk_ciphertext_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state42))) begin
        pk_ciphertext_d1 = reg_2023;
    end else if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27))) begin
        pk_ciphertext_d1 = {{temp_q0[15:8]}};
    end else begin
        pk_ciphertext_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | ((empty_25_reg_2548 == 1'd0) & (1'b1 == ap_CS_fsm_state42)))) begin
        pk_ciphertext_we0 = 1'b1;
    end else begin
        pk_ciphertext_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | ((empty_25_reg_2548 == 1'd0) & (1'b1 == ap_CS_fsm_state42)))) begin
        pk_ciphertext_we1 = 1'b1;
    end else begin
        pk_ciphertext_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        pk_plaintext_address0 = pk_plaintext_addr_30_reg_3071;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        pk_plaintext_address0 = pk_plaintext_addr_28_reg_3041;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        pk_plaintext_address0 = pk_plaintext_addr_26_reg_3006;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        pk_plaintext_address0 = pk_plaintext_addr_24_reg_2976;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        pk_plaintext_address0 = pk_plaintext_addr_22_reg_2941;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        pk_plaintext_address0 = pk_plaintext_addr_20_reg_2911;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        pk_plaintext_address0 = pk_plaintext_addr_18_reg_2876;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        pk_plaintext_address0 = pk_plaintext_addr_16_reg_2846;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        pk_plaintext_address0 = pk_plaintext_addr_14_reg_2811;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        pk_plaintext_address0 = pk_plaintext_addr_12_reg_2781;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        pk_plaintext_address0 = pk_plaintext_addr_10_reg_2746;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        pk_plaintext_address0 = pk_plaintext_addr_8_reg_2716;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        pk_plaintext_address0 = pk_plaintext_addr_6_reg_2681;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        pk_plaintext_address0 = pk_plaintext_addr_4_reg_2651;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        pk_plaintext_address0 = pk_plaintext_addr_2_reg_2616;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        pk_plaintext_address0 = pk_plaintext_addr_reg_2586;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        pk_plaintext_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        pk_plaintext_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        pk_plaintext_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        pk_plaintext_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        pk_plaintext_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        pk_plaintext_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        pk_plaintext_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        pk_plaintext_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        pk_plaintext_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        pk_plaintext_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        pk_plaintext_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        pk_plaintext_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        pk_plaintext_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        pk_plaintext_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        pk_plaintext_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        pk_plaintext_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        pk_plaintext_address0 = grp_randombytes_fu_1933_x_address0;
    end else begin
        pk_plaintext_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state38)) begin
        pk_plaintext_address1 = pk_plaintext_addr_31_reg_3076;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        pk_plaintext_address1 = pk_plaintext_addr_29_reg_3046;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        pk_plaintext_address1 = pk_plaintext_addr_27_reg_3011;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        pk_plaintext_address1 = pk_plaintext_addr_25_reg_2981;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        pk_plaintext_address1 = pk_plaintext_addr_23_reg_2946;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        pk_plaintext_address1 = pk_plaintext_addr_21_reg_2916;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        pk_plaintext_address1 = pk_plaintext_addr_19_reg_2881;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        pk_plaintext_address1 = pk_plaintext_addr_17_reg_2851;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        pk_plaintext_address1 = pk_plaintext_addr_15_reg_2816;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        pk_plaintext_address1 = pk_plaintext_addr_13_reg_2786;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        pk_plaintext_address1 = pk_plaintext_addr_11_reg_2751;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        pk_plaintext_address1 = pk_plaintext_addr_9_reg_2721;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        pk_plaintext_address1 = pk_plaintext_addr_7_reg_2686;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        pk_plaintext_address1 = pk_plaintext_addr_5_reg_2656;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        pk_plaintext_address1 = pk_plaintext_addr_3_reg_2621;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        pk_plaintext_address1 = pk_plaintext_addr_1_reg_2591;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        pk_plaintext_address1 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        pk_plaintext_address1 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        pk_plaintext_address1 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        pk_plaintext_address1 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        pk_plaintext_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        pk_plaintext_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        pk_plaintext_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        pk_plaintext_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        pk_plaintext_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        pk_plaintext_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        pk_plaintext_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        pk_plaintext_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        pk_plaintext_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        pk_plaintext_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        pk_plaintext_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        pk_plaintext_address1 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        pk_plaintext_address1 = grp_randombytes_fu_1933_x_address1;
    end else begin
        pk_plaintext_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | ((grp_LowMCEnc_fu_1948_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state25)))) begin
        pk_plaintext_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        pk_plaintext_ce0 = grp_randombytes_fu_1933_x_ce0;
    end else begin
        pk_plaintext_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8) | ((grp_LowMCEnc_fu_1948_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state25)))) begin
        pk_plaintext_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        pk_plaintext_ce1 = grp_randombytes_fu_1933_x_ce1;
    end else begin
        pk_plaintext_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        pk_plaintext_we0 = grp_randombytes_fu_1933_x_we0;
    end else begin
        pk_plaintext_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        pk_plaintext_we1 = grp_randombytes_fu_1933_x_we1;
    end else begin
        pk_plaintext_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        sk_data_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        sk_data_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        sk_data_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        sk_data_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        sk_data_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        sk_data_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        sk_data_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        sk_data_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        sk_data_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        sk_data_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        sk_data_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        sk_data_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sk_data_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        sk_data_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sk_data_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sk_data_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        sk_data_address0 = grp_randombytes_fu_1933_x_address0;
    end else begin
        sk_data_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        sk_data_address1 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        sk_data_address1 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        sk_data_address1 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        sk_data_address1 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        sk_data_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        sk_data_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        sk_data_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        sk_data_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        sk_data_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        sk_data_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        sk_data_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        sk_data_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        sk_data_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        sk_data_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        sk_data_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        sk_data_address1 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        sk_data_address1 = grp_randombytes_fu_1933_x_address1;
    end else begin
        sk_data_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8))) begin
        sk_data_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        sk_data_ce0 = grp_randombytes_fu_1933_x_ce0;
    end else begin
        sk_data_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state8))) begin
        sk_data_ce1 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        sk_data_ce1 = grp_randombytes_fu_1933_x_ce1;
    end else begin
        sk_data_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sk_data_we0 = grp_randombytes_fu_1933_x_we0;
    end else begin
        sk_data_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sk_data_we1 = grp_randombytes_fu_1933_x_we1;
    end else begin
        sk_data_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        sk_pk_ciphertext_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        sk_pk_ciphertext_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        sk_pk_ciphertext_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        sk_pk_ciphertext_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        sk_pk_ciphertext_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        sk_pk_ciphertext_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        sk_pk_ciphertext_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        sk_pk_ciphertext_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        sk_pk_ciphertext_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        sk_pk_ciphertext_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        sk_pk_ciphertext_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        sk_pk_ciphertext_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        sk_pk_ciphertext_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        sk_pk_ciphertext_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        sk_pk_ciphertext_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        sk_pk_ciphertext_address0 = 64'd0;
    end else begin
        sk_pk_ciphertext_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state42)) begin
        sk_pk_ciphertext_address1 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        sk_pk_ciphertext_address1 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state40)) begin
        sk_pk_ciphertext_address1 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        sk_pk_ciphertext_address1 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        sk_pk_ciphertext_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        sk_pk_ciphertext_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        sk_pk_ciphertext_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        sk_pk_ciphertext_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        sk_pk_ciphertext_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        sk_pk_ciphertext_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        sk_pk_ciphertext_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        sk_pk_ciphertext_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        sk_pk_ciphertext_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        sk_pk_ciphertext_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        sk_pk_ciphertext_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        sk_pk_ciphertext_address1 = 64'd1;
    end else begin
        sk_pk_ciphertext_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27))) begin
        sk_pk_ciphertext_ce0 = 1'b1;
    end else begin
        sk_pk_ciphertext_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state42) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27))) begin
        sk_pk_ciphertext_ce1 = 1'b1;
    end else begin
        sk_pk_ciphertext_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        sk_pk_ciphertext_d0 = trunc_ln227_27_fu_2512_p1;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        sk_pk_ciphertext_d0 = trunc_ln227_23_fu_2506_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        sk_pk_ciphertext_d0 = trunc_ln227_19_fu_2500_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        sk_pk_ciphertext_d0 = trunc_ln227_15_fu_2494_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        sk_pk_ciphertext_d0 = trunc_ln227_11_fu_2488_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        sk_pk_ciphertext_d0 = trunc_ln227_8_fu_2482_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        sk_pk_ciphertext_d0 = trunc_ln227_4_fu_2476_p1;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state42))) begin
        sk_pk_ciphertext_d0 = reg_2017;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        sk_pk_ciphertext_d0 = trunc_ln227_fu_2470_p1;
    end else begin
        sk_pk_ciphertext_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state42))) begin
        sk_pk_ciphertext_d1 = reg_2023;
    end else if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27))) begin
        sk_pk_ciphertext_d1 = {{temp_q0[15:8]}};
    end else begin
        sk_pk_ciphertext_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | ((empty_25_reg_2548 == 1'd0) & (1'b1 == ap_CS_fsm_state42)))) begin
        sk_pk_ciphertext_we0 = 1'b1;
    end else begin
        sk_pk_ciphertext_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | ((empty_25_reg_2548 == 1'd0) & (1'b1 == ap_CS_fsm_state42)))) begin
        sk_pk_ciphertext_we1 = 1'b1;
    end else begin
        sk_pk_ciphertext_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        sk_pk_plaintext_address0 = 64'd30;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        sk_pk_plaintext_address0 = 64'd28;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        sk_pk_plaintext_address0 = 64'd26;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        sk_pk_plaintext_address0 = 64'd24;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        sk_pk_plaintext_address0 = 64'd22;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        sk_pk_plaintext_address0 = 64'd20;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        sk_pk_plaintext_address0 = 64'd18;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        sk_pk_plaintext_address0 = 64'd16;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        sk_pk_plaintext_address0 = 64'd14;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        sk_pk_plaintext_address0 = 64'd12;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        sk_pk_plaintext_address0 = 64'd10;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        sk_pk_plaintext_address0 = 64'd8;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        sk_pk_plaintext_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        sk_pk_plaintext_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        sk_pk_plaintext_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        sk_pk_plaintext_address0 = 64'd0;
    end else begin
        sk_pk_plaintext_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        sk_pk_plaintext_address1 = 64'd31;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        sk_pk_plaintext_address1 = 64'd29;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        sk_pk_plaintext_address1 = 64'd27;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        sk_pk_plaintext_address1 = 64'd25;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        sk_pk_plaintext_address1 = 64'd23;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        sk_pk_plaintext_address1 = 64'd21;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        sk_pk_plaintext_address1 = 64'd19;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        sk_pk_plaintext_address1 = 64'd17;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        sk_pk_plaintext_address1 = 64'd15;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        sk_pk_plaintext_address1 = 64'd13;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        sk_pk_plaintext_address1 = 64'd11;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        sk_pk_plaintext_address1 = 64'd9;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        sk_pk_plaintext_address1 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        sk_pk_plaintext_address1 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        sk_pk_plaintext_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        sk_pk_plaintext_address1 = 64'd1;
    end else begin
        sk_pk_plaintext_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | ((grp_LowMCEnc_fu_1948_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state25)))) begin
        sk_pk_plaintext_ce0 = 1'b1;
    end else begin
        sk_pk_plaintext_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | ((grp_LowMCEnc_fu_1948_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state25)))) begin
        sk_pk_plaintext_ce1 = 1'b1;
    end else begin
        sk_pk_plaintext_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | ((grp_LowMCEnc_fu_1948_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state25)))) begin
        sk_pk_plaintext_we0 = 1'b1;
    end else begin
        sk_pk_plaintext_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state27) | ((grp_LowMCEnc_fu_1948_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state25)))) begin
        sk_pk_plaintext_we1 = 1'b1;
    end else begin
        sk_pk_plaintext_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        temp2_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        temp2_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        temp2_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        temp2_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        temp2_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        temp2_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        temp2_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        temp2_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        temp2_address0 = zext_ln211_1_fu_2130_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        temp2_address0 = grp_LowMCEnc_fu_1948_plaintext_address0;
    end else begin
        temp2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6))) begin
        temp2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        temp2_ce0 = grp_LowMCEnc_fu_1948_plaintext_ce0;
    end else begin
        temp2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        temp2_ce1 = grp_LowMCEnc_fu_1948_plaintext_ce1;
    end else begin
        temp2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        temp2_d0 = or_ln216_2_7_fu_2444_p5;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        temp2_d0 = or_ln216_2_6_fu_2405_p5;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        temp2_d0 = or_ln216_2_5_fu_2366_p5;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        temp2_d0 = or_ln216_2_4_fu_2327_p5;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        temp2_d0 = or_ln216_2_3_fu_2288_p5;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        temp2_d0 = or_ln216_2_2_fu_2249_p5;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        temp2_d0 = or_ln216_2_1_fu_2210_p5;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        temp2_d0 = or_ln216_2_fu_2171_p5;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        temp2_d0 = 32'd0;
    end else begin
        temp2_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6))) begin
        temp2_we0 = 1'b1;
    end else begin
        temp2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        temp3_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        temp3_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        temp3_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        temp3_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        temp3_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        temp3_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        temp3_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        temp3_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        temp3_address0 = zext_ln211_2_fu_2147_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        temp3_address0 = grp_LowMCEnc_fu_1948_key_address0;
    end else begin
        temp3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7))) begin
        temp3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        temp3_ce0 = grp_LowMCEnc_fu_1948_key_ce0;
    end else begin
        temp3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        temp3_ce1 = grp_LowMCEnc_fu_1948_key_ce1;
    end else begin
        temp3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        temp3_d0 = or_ln217_2_7_fu_2457_p5;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        temp3_d0 = or_ln217_2_6_fu_2418_p5;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        temp3_d0 = or_ln217_2_5_fu_2379_p5;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        temp3_d0 = or_ln217_2_4_fu_2340_p5;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        temp3_d0 = or_ln217_2_3_fu_2301_p5;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        temp3_d0 = or_ln217_2_2_fu_2262_p5;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        temp3_d0 = or_ln217_2_1_fu_2223_p5;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        temp3_d0 = or_ln217_2_fu_2184_p5;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        temp3_d0 = 32'd0;
    end else begin
        temp3_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state7))) begin
        temp3_we0 = 1'b1;
    end else begin
        temp3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        temp_address0 = temp_addr_8_reg_3091;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        temp_address0 = temp_addr_7_reg_3026;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        temp_address0 = temp_addr_6_reg_2961;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        temp_address0 = temp_addr_5_reg_2896;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        temp_address0 = temp_addr_4_reg_2831;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        temp_address0 = temp_addr_3_reg_2766;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        temp_address0 = temp_addr_2_reg_2701;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        temp_address0 = temp_addr_1_reg_2636;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        temp_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        temp_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        temp_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        temp_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        temp_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        temp_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        temp_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        temp_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        temp_address0 = zext_ln211_fu_2113_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        temp_address0 = grp_LowMCEnc_fu_1948_output_r_address0;
    end else begin
        temp_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        temp_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        temp_ce0 = grp_LowMCEnc_fu_1948_output_r_ce0;
    end else begin
        temp_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        temp_ce1 = grp_LowMCEnc_fu_1948_output_r_ce1;
    end else begin
        temp_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        temp_d0 = or_ln215_5_7_fu_2431_p5;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        temp_d0 = or_ln215_5_6_fu_2392_p5;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        temp_d0 = or_ln215_5_5_fu_2353_p5;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        temp_d0 = or_ln215_5_4_fu_2314_p5;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        temp_d0 = or_ln215_5_3_fu_2275_p5;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        temp_d0 = or_ln215_5_2_fu_2236_p5;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        temp_d0 = or_ln215_5_1_fu_2197_p5;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        temp_d0 = or_ln215_5_fu_2158_p5;
    end else if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state5))) begin
        temp_d0 = 32'd0;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        temp_d0 = grp_LowMCEnc_fu_1948_output_r_d0;
    end else begin
        temp_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state40) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5))) begin
        temp_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        temp_we0 = grp_LowMCEnc_fu_1948_output_r_we0;
    end else begin
        temp_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        temp_we1 = grp_LowMCEnc_fu_1948_output_r_we1;
    end else begin
        temp_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (empty_25_fu_2101_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state42;
            end else if (((ap_start == 1'b1) & (empty_25_fu_2101_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((grp_randombytes_fu_1933_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_randombytes_fu_1933_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln211_fu_2118_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln211_1_fu_2135_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((icmp_ln211_2_fu_2152_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((grp_LowMCEnc_fu_1948_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign DRBG_ctx_Key_address0 = grp_randombytes_fu_1933_DRBG_ctx_Key_address0;

assign DRBG_ctx_Key_address1 = grp_randombytes_fu_1933_DRBG_ctx_Key_address1;

assign DRBG_ctx_Key_d0 = grp_randombytes_fu_1933_DRBG_ctx_Key_d0;

assign DRBG_ctx_Key_d1 = grp_randombytes_fu_1933_DRBG_ctx_Key_d1;

assign DRBG_ctx_V_address0 = grp_randombytes_fu_1933_DRBG_ctx_V_address0;

assign DRBG_ctx_V_address1 = grp_randombytes_fu_1933_DRBG_ctx_V_address1;

assign DRBG_ctx_V_d0 = grp_randombytes_fu_1933_DRBG_ctx_V_d0;

assign DRBG_ctx_V_d1 = grp_randombytes_fu_1933_DRBG_ctx_V_d1;

assign add_ln211_1_fu_2124_p2 = (phi_ln211_1_reg_1899 + 3'd1);

assign add_ln211_2_fu_2141_p2 = (phi_ln211_2_reg_1910 + 3'd1);

assign add_ln211_fu_2107_p2 = (phi_ln211_reg_1888 + 3'd1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state42 = ap_CS_fsm[32'd41];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign empty_14_fu_2035_p2 = ((parameters == 4'd14) ? 1'b1 : 1'b0);

assign empty_15_fu_2041_p2 = (empty_fu_2029_p2 | empty_14_fu_2035_p2);

assign empty_16_fu_2047_p2 = ((parameters == 4'd13) ? 1'b1 : 1'b0);

assign empty_17_fu_2053_p2 = (empty_16_fu_2047_p2 | empty_15_fu_2041_p2);

assign empty_18_fu_2059_p2 = ((parameters == 4'd12) ? 1'b1 : 1'b0);

assign empty_19_fu_2065_p2 = (empty_18_fu_2059_p2 | empty_17_fu_2053_p2);

assign empty_20_fu_2071_p2 = ((parameters == 4'd11) ? 1'b1 : 1'b0);

assign empty_21_fu_2077_p2 = (empty_20_fu_2071_p2 | empty_19_fu_2065_p2);

assign empty_22_fu_2083_p2 = ((parameters == 4'd10) ? 1'b1 : 1'b0);

assign empty_23_fu_2089_p2 = (empty_22_fu_2083_p2 | empty_21_fu_2077_p2);

assign empty_24_fu_2095_p2 = ((parameters == 4'd0) ? 1'b1 : 1'b0);

assign empty_25_fu_2101_p2 = (empty_24_fu_2095_p2 | empty_23_fu_2089_p2);

assign empty_fu_2029_p2 = ((parameters == 4'd15) ? 1'b1 : 1'b0);

assign grp_LowMCEnc_fu_1948_ap_start = grp_LowMCEnc_fu_1948_ap_start_reg;

assign grp_randombytes_fu_1933_ap_start = grp_randombytes_fu_1933_ap_start_reg;

assign icmp_ln211_1_fu_2135_p2 = ((phi_ln211_1_reg_1899 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln211_2_fu_2152_p2 = ((phi_ln211_2_reg_1910 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln211_fu_2118_p2 = ((phi_ln211_reg_1888 == 3'd7) ? 1'b1 : 1'b0);

assign or_ln215_5_1_fu_2197_p5 = {{{{pk_ciphertext_q1}, {pk_ciphertext_q0}}, {reg_1997}}, {reg_1993}};

assign or_ln215_5_2_fu_2236_p5 = {{{{pk_ciphertext_q1}, {pk_ciphertext_q0}}, {reg_1997}}, {reg_1993}};

assign or_ln215_5_3_fu_2275_p5 = {{{{pk_ciphertext_q1}, {pk_ciphertext_q0}}, {reg_1997}}, {reg_1993}};

assign or_ln215_5_4_fu_2314_p5 = {{{{pk_ciphertext_q1}, {pk_ciphertext_q0}}, {reg_1997}}, {reg_1993}};

assign or_ln215_5_5_fu_2353_p5 = {{{{pk_ciphertext_q1}, {pk_ciphertext_q0}}, {reg_1997}}, {reg_1993}};

assign or_ln215_5_6_fu_2392_p5 = {{{{pk_ciphertext_q1}, {pk_ciphertext_q0}}, {reg_1997}}, {reg_1993}};

assign or_ln215_5_7_fu_2431_p5 = {{{{pk_ciphertext_q1}, {pk_ciphertext_q0}}, {reg_1997}}, {reg_1993}};

assign or_ln215_5_fu_2158_p5 = {{{{pk_ciphertext_q1}, {pk_ciphertext_q0}}, {reg_1997}}, {reg_1993}};

assign or_ln216_2_1_fu_2210_p5 = {{{{pk_plaintext_q1}, {pk_plaintext_q0}}, {reg_2005}}, {reg_2001}};

assign or_ln216_2_2_fu_2249_p5 = {{{{pk_plaintext_q1}, {pk_plaintext_q0}}, {reg_2005}}, {reg_2001}};

assign or_ln216_2_3_fu_2288_p5 = {{{{pk_plaintext_q1}, {pk_plaintext_q0}}, {reg_2005}}, {reg_2001}};

assign or_ln216_2_4_fu_2327_p5 = {{{{pk_plaintext_q1}, {pk_plaintext_q0}}, {reg_2005}}, {reg_2001}};

assign or_ln216_2_5_fu_2366_p5 = {{{{pk_plaintext_q1}, {pk_plaintext_q0}}, {reg_2005}}, {reg_2001}};

assign or_ln216_2_6_fu_2405_p5 = {{{{pk_plaintext_q1}, {pk_plaintext_q0}}, {reg_2005}}, {reg_2001}};

assign or_ln216_2_7_fu_2444_p5 = {{{{pk_plaintext_q1}, {pk_plaintext_q0}}, {reg_2005}}, {reg_2001}};

assign or_ln216_2_fu_2171_p5 = {{{{pk_plaintext_q1}, {pk_plaintext_q0}}, {reg_2005}}, {reg_2001}};

assign or_ln217_2_1_fu_2223_p5 = {{{{sk_data_q1}, {sk_data_q0}}, {reg_2013}}, {reg_2009}};

assign or_ln217_2_2_fu_2262_p5 = {{{{sk_data_q1}, {sk_data_q0}}, {reg_2013}}, {reg_2009}};

assign or_ln217_2_3_fu_2301_p5 = {{{{sk_data_q1}, {sk_data_q0}}, {reg_2013}}, {reg_2009}};

assign or_ln217_2_4_fu_2340_p5 = {{{{sk_data_q1}, {sk_data_q0}}, {reg_2013}}, {reg_2009}};

assign or_ln217_2_5_fu_2379_p5 = {{{{sk_data_q1}, {sk_data_q0}}, {reg_2013}}, {reg_2009}};

assign or_ln217_2_6_fu_2418_p5 = {{{{sk_data_q1}, {sk_data_q0}}, {reg_2013}}, {reg_2009}};

assign or_ln217_2_7_fu_2457_p5 = {{{{sk_data_q1}, {sk_data_q0}}, {reg_2013}}, {reg_2009}};

assign or_ln217_2_fu_2184_p5 = {{{{sk_data_q1}, {sk_data_q0}}, {reg_2013}}, {reg_2009}};

assign pk_ciphertext_addr_10_reg_2706 = 64'd8;

assign pk_ciphertext_addr_11_reg_2711 = 64'd9;

assign pk_ciphertext_addr_12_reg_2736 = 64'd10;

assign pk_ciphertext_addr_13_reg_2741 = 64'd11;

assign pk_ciphertext_addr_14_reg_2771 = 64'd12;

assign pk_ciphertext_addr_15_reg_2776 = 64'd13;

assign pk_ciphertext_addr_16_reg_2801 = 64'd14;

assign pk_ciphertext_addr_17_reg_2806 = 64'd15;

assign pk_ciphertext_addr_18_reg_2836 = 64'd16;

assign pk_ciphertext_addr_19_reg_2841 = 64'd17;

assign pk_ciphertext_addr_1_reg_2581 = 64'd1;

assign pk_ciphertext_addr_20_reg_2866 = 64'd18;

assign pk_ciphertext_addr_21_reg_2871 = 64'd19;

assign pk_ciphertext_addr_22_reg_2901 = 64'd20;

assign pk_ciphertext_addr_23_reg_2906 = 64'd21;

assign pk_ciphertext_addr_24_reg_2931 = 64'd22;

assign pk_ciphertext_addr_25_reg_2936 = 64'd23;

assign pk_ciphertext_addr_26_reg_2971 = 64'd25;

assign pk_ciphertext_addr_27_reg_2996 = 64'd26;

assign pk_ciphertext_addr_28_reg_3001 = 64'd27;

assign pk_ciphertext_addr_29_reg_3036 = 64'd29;

assign pk_ciphertext_addr_2_reg_2606 = 64'd2;

assign pk_ciphertext_addr_30_reg_3061 = 64'd30;

assign pk_ciphertext_addr_31_reg_3066 = 64'd31;

assign pk_ciphertext_addr_3_reg_2611 = 64'd3;

assign pk_ciphertext_addr_4_reg_2641 = 64'd4;

assign pk_ciphertext_addr_5_reg_2646 = 64'd5;

assign pk_ciphertext_addr_6_reg_2966 = 64'd24;

assign pk_ciphertext_addr_7_reg_3031 = 64'd28;

assign pk_ciphertext_addr_8_reg_2671 = 64'd6;

assign pk_ciphertext_addr_9_reg_2676 = 64'd7;

assign pk_ciphertext_addr_reg_2576 = 64'd0;

assign pk_plaintext_addr_10_reg_2746 = 64'd10;

assign pk_plaintext_addr_11_reg_2751 = 64'd11;

assign pk_plaintext_addr_12_reg_2781 = 64'd12;

assign pk_plaintext_addr_13_reg_2786 = 64'd13;

assign pk_plaintext_addr_14_reg_2811 = 64'd14;

assign pk_plaintext_addr_15_reg_2816 = 64'd15;

assign pk_plaintext_addr_16_reg_2846 = 64'd16;

assign pk_plaintext_addr_17_reg_2851 = 64'd17;

assign pk_plaintext_addr_18_reg_2876 = 64'd18;

assign pk_plaintext_addr_19_reg_2881 = 64'd19;

assign pk_plaintext_addr_1_reg_2591 = 64'd1;

assign pk_plaintext_addr_20_reg_2911 = 64'd20;

assign pk_plaintext_addr_21_reg_2916 = 64'd21;

assign pk_plaintext_addr_22_reg_2941 = 64'd22;

assign pk_plaintext_addr_23_reg_2946 = 64'd23;

assign pk_plaintext_addr_24_reg_2976 = 64'd24;

assign pk_plaintext_addr_25_reg_2981 = 64'd25;

assign pk_plaintext_addr_26_reg_3006 = 64'd26;

assign pk_plaintext_addr_27_reg_3011 = 64'd27;

assign pk_plaintext_addr_28_reg_3041 = 64'd28;

assign pk_plaintext_addr_29_reg_3046 = 64'd29;

assign pk_plaintext_addr_2_reg_2616 = 64'd2;

assign pk_plaintext_addr_30_reg_3071 = 64'd30;

assign pk_plaintext_addr_31_reg_3076 = 64'd31;

assign pk_plaintext_addr_3_reg_2621 = 64'd3;

assign pk_plaintext_addr_4_reg_2651 = 64'd4;

assign pk_plaintext_addr_5_reg_2656 = 64'd5;

assign pk_plaintext_addr_6_reg_2681 = 64'd6;

assign pk_plaintext_addr_7_reg_2686 = 64'd7;

assign pk_plaintext_addr_8_reg_2716 = 64'd8;

assign pk_plaintext_addr_9_reg_2721 = 64'd9;

assign pk_plaintext_addr_reg_2586 = 64'd0;

assign pk_plaintext_d0 = grp_randombytes_fu_1933_x_d0;

assign pk_plaintext_d1 = grp_randombytes_fu_1933_x_d1;

assign select_ln166_fu_2518_p3 = ((ap_phi_mux_p_0_phi_fu_1925_p4[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign sk_data_d0 = grp_randombytes_fu_1933_x_d0;

assign sk_data_d1 = grp_randombytes_fu_1933_x_d1;

assign sk_pk_plaintext_d0 = pk_plaintext_q0;

assign sk_pk_plaintext_d1 = pk_plaintext_q1;

assign temp_addr_1_reg_2636 = 64'd0;

assign temp_addr_2_reg_2701 = 64'd1;

assign temp_addr_3_reg_2766 = 64'd2;

assign temp_addr_4_reg_2831 = 64'd3;

assign temp_addr_5_reg_2896 = 64'd4;

assign temp_addr_6_reg_2961 = 64'd5;

assign temp_addr_7_reg_3026 = 64'd6;

assign temp_addr_8_reg_3091 = 64'd7;

assign trunc_ln227_11_fu_2488_p1 = temp_q0[7:0];

assign trunc_ln227_15_fu_2494_p1 = temp_q0[7:0];

assign trunc_ln227_19_fu_2500_p1 = temp_q0[7:0];

assign trunc_ln227_23_fu_2506_p1 = temp_q0[7:0];

assign trunc_ln227_27_fu_2512_p1 = temp_q0[7:0];

assign trunc_ln227_4_fu_2476_p1 = temp_q0[7:0];

assign trunc_ln227_8_fu_2482_p1 = temp_q0[7:0];

assign trunc_ln227_fu_2470_p1 = temp_q0[7:0];

assign zext_ln211_1_fu_2130_p1 = phi_ln211_1_reg_1899;

assign zext_ln211_2_fu_2147_p1 = phi_ln211_2_reg_1910;

assign zext_ln211_fu_2113_p1 = phi_ln211_reg_1888;

endmodule //picnic_keygen

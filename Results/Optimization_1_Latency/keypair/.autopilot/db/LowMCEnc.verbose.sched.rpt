

================================================================
== Vivado HLS Report for 'LowMCEnc'
================================================================
* Date:           Sat May  9 23:49:08 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        picnic1
* Solution:       keypair
* Product family: artix7
* Target device:  xc7a200t-fbg676-2


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.366 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-------+-------+---------+
    |  Latency (cycles) |  Latency (absolute) |    Interval   | Pipeline|
    |   min   |   max   |    min   |    max   |  min  |  max  |   Type  |
    +---------+---------+----------+----------+-------+-------+---------+
    |    80696|    80696| 0.807 ms | 0.807 ms |  80696|  80696|   none  |
    +---------+---------+----------+----------+-------+-------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                     |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name      |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- Loop 1             |        2|        2|         2|          1|          1|     2|    yes   |
        |- xor_array_label4   |        4|        4|         2|          -|          -|     2|    no    |
        |- Loop 3             |    78760|    78760|      3938|          -|          -|    20|    no    |
        | + Loop 3.1          |       70|       70|         7|          -|          -|    10|    no    |
        | + xor_array_label4  |        4|        4|         2|          -|          -|     2|    no    |
        | + xor_array_label4  |        4|        4|         2|          -|          -|     2|    no    |
        +---------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 1
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 25
* Pipeline : 1
  Pipeline-0 : II = 1, D = 2, States = { 2 3 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 4 3 
3 --> 2 
4 --> 5 
5 --> 6 
6 --> 7 8 
7 --> 6 
8 --> 9 
9 --> 10 
10 --> 11 
11 --> 12 18 
12 --> 13 
13 --> 14 
14 --> 15 
15 --> 16 
16 --> 17 
17 --> 11 
18 --> 19 
19 --> 20 
20 --> 21 
21 --> 22 
22 --> 23 24 
23 --> 22 
24 --> 25 8 
25 --> 24 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.35>
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%output_addr = getelementptr [8 x i32]* %output_r, i64 0, i64 0" [picnic_impl.c:162]   --->   Operation 26 'getelementptr' 'output_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%roundKey = alloca [16 x i32], align 16" [picnic_impl.c:164]   --->   Operation 27 'alloca' 'roundKey' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%temp = alloca [120 x i8], align 16" [picnic_impl.c:186]   --->   Operation 28 'alloca' 'temp' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_1 : Operation 29 [1/1] (1.35ns)   --->   "br label %1" [picnic_impl.c:171]   --->   Operation 29 'br' <Predicate = true> <Delay = 1.35>

State 2 <SV = 1> <Delay = 1.75>
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%loop_0_0 = phi i3 [ 0, %0 ], [ %add_ln171, %hls_label_0 ]" [picnic_impl.c:171]   --->   Operation 30 'phi' 'loop_0_0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%tmp_36 = call i1 @_ssdm_op_BitSelect.i1.i3.i32(i3 %loop_0_0, i32 2)" [picnic_impl.c:171]   --->   Operation 31 'bitselect' 'tmp_36' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2)"   --->   Operation 32 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 33 [1/1] (0.00ns)   --->   "br i1 %tmp_36, label %2, label %hls_label_0" [picnic_impl.c:171]   --->   Operation 33 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%trunc_ln171 = trunc i3 %loop_0_0 to i2" [picnic_impl.c:171]   --->   Operation 34 'trunc' 'trunc_ln171' <Predicate = (!tmp_36)> <Delay = 0.00>
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%zext_ln174 = zext i3 %loop_0_0 to i64" [picnic_impl.c:174]   --->   Operation 35 'zext' 'zext_ln174' <Predicate = (!tmp_36)> <Delay = 0.00>
ST_2 : Operation 36 [1/1] (0.00ns)   --->   "%plaintext_addr = getelementptr [8 x i32]* %plaintext, i64 0, i64 %zext_ln174" [picnic_impl.c:174]   --->   Operation 36 'getelementptr' 'plaintext_addr' <Predicate = (!tmp_36)> <Delay = 0.00>
ST_2 : Operation 37 [2/2] (1.75ns)   --->   "%plaintext_load = load i32* %plaintext_addr, align 4" [picnic_impl.c:174]   --->   Operation 37 'load' 'plaintext_load' <Predicate = (!tmp_36)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "%or_ln171 = or i2 %trunc_ln171, 1" [picnic_impl.c:171]   --->   Operation 38 'or' 'or_ln171' <Predicate = (!tmp_36)> <Delay = 0.00>
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "%zext_ln174_1 = zext i2 %or_ln171 to i64" [picnic_impl.c:174]   --->   Operation 39 'zext' 'zext_ln174_1' <Predicate = (!tmp_36)> <Delay = 0.00>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%plaintext_addr_1 = getelementptr [8 x i32]* %plaintext, i64 0, i64 %zext_ln174_1" [picnic_impl.c:174]   --->   Operation 40 'getelementptr' 'plaintext_addr_1' <Predicate = (!tmp_36)> <Delay = 0.00>
ST_2 : Operation 41 [2/2] (1.75ns)   --->   "%plaintext_load_1 = load i32* %plaintext_addr_1, align 4" [picnic_impl.c:174]   --->   Operation 41 'load' 'plaintext_load_1' <Predicate = (!tmp_36)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_2 : Operation 42 [1/1] (1.34ns)   --->   "%add_ln171 = add i3 2, %loop_0_0" [picnic_impl.c:171]   --->   Operation 42 'add' 'add_ln171' <Predicate = (!tmp_36)> <Delay = 1.34> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 3 <SV = 2> <Delay = 3.51>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([12 x i8]* @p_str529)" [picnic_impl.c:173]   --->   Operation 43 'specregionbegin' 'tmp' <Predicate = (!tmp_36)> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str327) nounwind" [picnic_impl.c:173]   --->   Operation 44 'specpipeline' <Predicate = (!tmp_36)> <Delay = 0.00>
ST_3 : Operation 45 [1/2] (1.75ns)   --->   "%plaintext_load = load i32* %plaintext_addr, align 4" [picnic_impl.c:174]   --->   Operation 45 'load' 'plaintext_load' <Predicate = (!tmp_36)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%output_addr_2 = getelementptr [8 x i32]* %output_r, i64 0, i64 %zext_ln174" [picnic_impl.c:174]   --->   Operation 46 'getelementptr' 'output_addr_2' <Predicate = (!tmp_36)> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (1.75ns)   --->   "store i32 %plaintext_load, i32* %output_addr_2, align 4" [picnic_impl.c:174]   --->   Operation 47 'store' <Predicate = (!tmp_36)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%empty_114 = call i32 (...)* @_ssdm_op_SpecRegionEnd([12 x i8]* @p_str529, i32 %tmp)" [picnic_impl.c:174]   --->   Operation 48 'specregionend' 'empty_114' <Predicate = (!tmp_36)> <Delay = 0.00>
ST_3 : Operation 49 [1/2] (1.75ns)   --->   "%plaintext_load_1 = load i32* %plaintext_addr_1, align 4" [picnic_impl.c:174]   --->   Operation 49 'load' 'plaintext_load_1' <Predicate = (!tmp_36)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%output_addr_3 = getelementptr [8 x i32]* %output_r, i64 0, i64 %zext_ln174_1" [picnic_impl.c:174]   --->   Operation 50 'getelementptr' 'output_addr_3' <Predicate = (!tmp_36)> <Delay = 0.00>
ST_3 : Operation 51 [1/1] (1.75ns)   --->   "store i32 %plaintext_load_1, i32* %output_addr_3, align 4" [picnic_impl.c:174]   --->   Operation 51 'store' <Predicate = (!tmp_36)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "br label %1" [picnic_impl.c:171]   --->   Operation 52 'br' <Predicate = (!tmp_36)> <Delay = 0.00>

State 4 <SV = 2> <Delay = 1.35>
ST_4 : Operation 53 [2/2] (1.35ns)   --->   "call fastcc void @matrix_mul.1([16 x i32]* %roundKey, [8 x i32]* %key, i14 0)" [picnic_impl.c:178]   --->   Operation 53 'call' <Predicate = true> <Delay = 1.35> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 5 <SV = 3> <Delay = 1.35>
ST_5 : Operation 54 [1/2] (0.00ns)   --->   "call fastcc void @matrix_mul.1([16 x i32]* %roundKey, [8 x i32]* %key, i14 0)" [picnic_impl.c:178]   --->   Operation 54 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_5 : Operation 55 [1/1] (1.35ns)   --->   "br label %3" [picnic_impl.c:110->picnic_impl.c:179]   --->   Operation 55 'br' <Predicate = true> <Delay = 1.35>

State 6 <SV = 4> <Delay = 1.81>
ST_6 : Operation 56 [1/1] (0.00ns)   --->   "%i_0_0_i1 = phi i3 [ 0, %2 ], [ %add_ln110_1, %4 ]" [picnic_impl.c:110->picnic_impl.c:179]   --->   Operation 56 'phi' 'i_0_0_i1' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 57 [1/1] (1.00ns)   --->   "%icmp_ln110_1 = icmp eq i3 %i_0_0_i1, -4" [picnic_impl.c:110->picnic_impl.c:179]   --->   Operation 57 'icmp' 'icmp_ln110_1' <Predicate = true> <Delay = 1.00> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 58 [1/1] (0.00ns)   --->   "%empty_115 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2)"   --->   Operation 58 'speclooptripcount' 'empty_115' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 59 [1/1] (0.00ns)   --->   "br i1 %icmp_ln110_1, label %xor_array.exit, label %4" [picnic_impl.c:110->picnic_impl.c:179]   --->   Operation 59 'br' <Predicate = true> <Delay = 0.00>
ST_6 : Operation 60 [1/1] (0.00ns)   --->   "%zext_ln114_1 = zext i3 %i_0_0_i1 to i64" [picnic_impl.c:114->picnic_impl.c:179]   --->   Operation 60 'zext' 'zext_ln114_1' <Predicate = (!icmp_ln110_1)> <Delay = 0.00>
ST_6 : Operation 61 [1/1] (0.00ns)   --->   "%output_addr_6 = getelementptr [8 x i32]* %output_r, i64 0, i64 %zext_ln114_1" [picnic_impl.c:114->picnic_impl.c:179]   --->   Operation 61 'getelementptr' 'output_addr_6' <Predicate = (!icmp_ln110_1)> <Delay = 0.00>
ST_6 : Operation 62 [2/2] (1.75ns)   --->   "%output_load_3 = load i32* %output_addr_6, align 4" [picnic_impl.c:114->picnic_impl.c:179]   --->   Operation 62 'load' 'output_load_3' <Predicate = (!icmp_ln110_1)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_6 : Operation 63 [1/1] (0.00ns)   --->   "%roundKey_addr = getelementptr [16 x i32]* %roundKey, i64 0, i64 %zext_ln114_1" [picnic_impl.c:114->picnic_impl.c:179]   --->   Operation 63 'getelementptr' 'roundKey_addr' <Predicate = (!icmp_ln110_1)> <Delay = 0.00>
ST_6 : Operation 64 [2/2] (1.75ns)   --->   "%roundKey_load = load i32* %roundKey_addr, align 8" [picnic_impl.c:114->picnic_impl.c:179]   --->   Operation 64 'load' 'roundKey_load' <Predicate = (!icmp_ln110_1)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_6 : Operation 65 [1/1] (0.00ns)   --->   "%trunc_ln110 = trunc i3 %i_0_0_i1 to i2" [picnic_impl.c:110->picnic_impl.c:179]   --->   Operation 65 'trunc' 'trunc_ln110' <Predicate = (!icmp_ln110_1)> <Delay = 0.00>
ST_6 : Operation 66 [1/1] (0.00ns)   --->   "%or_ln110_1 = or i2 %trunc_ln110, 1" [picnic_impl.c:110->picnic_impl.c:179]   --->   Operation 66 'or' 'or_ln110_1' <Predicate = (!icmp_ln110_1)> <Delay = 0.00>
ST_6 : Operation 67 [1/1] (0.00ns)   --->   "%zext_ln114_3 = zext i2 %or_ln110_1 to i64" [picnic_impl.c:114->picnic_impl.c:179]   --->   Operation 67 'zext' 'zext_ln114_3' <Predicate = (!icmp_ln110_1)> <Delay = 0.00>
ST_6 : Operation 68 [1/1] (0.00ns)   --->   "%output_addr_7 = getelementptr [8 x i32]* %output_r, i64 0, i64 %zext_ln114_3" [picnic_impl.c:114->picnic_impl.c:179]   --->   Operation 68 'getelementptr' 'output_addr_7' <Predicate = (!icmp_ln110_1)> <Delay = 0.00>
ST_6 : Operation 69 [2/2] (1.75ns)   --->   "%output_load_4 = load i32* %output_addr_7, align 4" [picnic_impl.c:114->picnic_impl.c:179]   --->   Operation 69 'load' 'output_load_4' <Predicate = (!icmp_ln110_1)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_6 : Operation 70 [1/1] (0.00ns)   --->   "%roundKey_addr_1 = getelementptr [16 x i32]* %roundKey, i64 0, i64 %zext_ln114_3" [picnic_impl.c:114->picnic_impl.c:179]   --->   Operation 70 'getelementptr' 'roundKey_addr_1' <Predicate = (!icmp_ln110_1)> <Delay = 0.00>
ST_6 : Operation 71 [2/2] (1.75ns)   --->   "%roundKey_load_1 = load i32* %roundKey_addr_1, align 4" [picnic_impl.c:114->picnic_impl.c:179]   --->   Operation 71 'load' 'roundKey_load_1' <Predicate = (!icmp_ln110_1)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_6 : Operation 72 [1/1] (1.34ns)   --->   "%add_ln110_1 = add i3 2, %i_0_0_i1" [picnic_impl.c:110->picnic_impl.c:179]   --->   Operation 72 'add' 'add_ln110_1' <Predicate = (!icmp_ln110_1)> <Delay = 1.34> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 73 [1/1] (0.00ns)   --->   "%temp_addr = getelementptr inbounds [120 x i8]* %temp, i64 0, i64 0" [picnic_impl.c:194]   --->   Operation 73 'getelementptr' 'temp_addr' <Predicate = (icmp_ln110_1)> <Delay = 0.00>
ST_6 : Operation 74 [1/1] (0.00ns)   --->   "%temp_addr_4 = getelementptr inbounds [120 x i8]* %temp, i64 0, i64 1" [picnic_impl.c:196]   --->   Operation 74 'getelementptr' 'temp_addr_4' <Predicate = (icmp_ln110_1)> <Delay = 0.00>
ST_6 : Operation 75 [1/1] (0.00ns)   --->   "%temp_addr_5 = getelementptr inbounds [120 x i8]* %temp, i64 0, i64 2" [picnic_impl.c:198]   --->   Operation 75 'getelementptr' 'temp_addr_5' <Predicate = (icmp_ln110_1)> <Delay = 0.00>
ST_6 : Operation 76 [1/1] (0.00ns)   --->   "%temp_addr_6 = getelementptr inbounds [120 x i8]* %temp, i64 0, i64 3" [picnic_impl.c:200]   --->   Operation 76 'getelementptr' 'temp_addr_6' <Predicate = (icmp_ln110_1)> <Delay = 0.00>
ST_6 : Operation 77 [1/1] (1.35ns)   --->   "br label %5" [picnic_impl.c:188]   --->   Operation 77 'br' <Predicate = (icmp_ln110_1)> <Delay = 1.35>

State 7 <SV = 5> <Delay = 4.31>
ST_7 : Operation 78 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([17 x i8]* @p_str428) nounwind" [picnic_impl.c:111->picnic_impl.c:179]   --->   Operation 78 'specloopname' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 79 [1/2] (1.75ns)   --->   "%output_load_3 = load i32* %output_addr_6, align 4" [picnic_impl.c:114->picnic_impl.c:179]   --->   Operation 79 'load' 'output_load_3' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_7 : Operation 80 [1/2] (1.75ns)   --->   "%roundKey_load = load i32* %roundKey_addr, align 8" [picnic_impl.c:114->picnic_impl.c:179]   --->   Operation 80 'load' 'roundKey_load' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_7 : Operation 81 [1/1] (0.80ns)   --->   "%xor_ln114_1 = xor i32 %roundKey_load, %output_load_3" [picnic_impl.c:114->picnic_impl.c:179]   --->   Operation 81 'xor' 'xor_ln114_1' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 82 [1/1] (1.75ns)   --->   "store i32 %xor_ln114_1, i32* %output_addr_6, align 4" [picnic_impl.c:114->picnic_impl.c:179]   --->   Operation 82 'store' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_7 : Operation 83 [1/2] (1.75ns)   --->   "%output_load_4 = load i32* %output_addr_7, align 4" [picnic_impl.c:114->picnic_impl.c:179]   --->   Operation 83 'load' 'output_load_4' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_7 : Operation 84 [1/2] (1.75ns)   --->   "%roundKey_load_1 = load i32* %roundKey_addr_1, align 4" [picnic_impl.c:114->picnic_impl.c:179]   --->   Operation 84 'load' 'roundKey_load_1' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_7 : Operation 85 [1/1] (0.80ns)   --->   "%xor_ln114_3 = xor i32 %roundKey_load_1, %output_load_4" [picnic_impl.c:114->picnic_impl.c:179]   --->   Operation 85 'xor' 'xor_ln114_3' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 86 [1/1] (1.75ns)   --->   "store i32 %xor_ln114_3, i32* %output_addr_7, align 4" [picnic_impl.c:114->picnic_impl.c:179]   --->   Operation 86 'store' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_7 : Operation 87 [1/1] (0.00ns)   --->   "br label %3" [picnic_impl.c:110->picnic_impl.c:179]   --->   Operation 87 'br' <Predicate = true> <Delay = 0.00>

State 8 <SV = 5> <Delay = 2.02>
ST_8 : Operation 88 [1/1] (0.00ns)   --->   "%r_0 = phi i5 [ 1, %xor_array.exit ], [ %r, %xor_array.exit18 ]"   --->   Operation 88 'phi' 'r_0' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 89 [1/1] (0.00ns)   --->   "%empty_116 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 20, i64 20, i64 20)"   --->   Operation 89 'speclooptripcount' 'empty_116' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 90 [1/1] (1.21ns)   --->   "%icmp_ln188 = icmp eq i5 %r_0, -11" [picnic_impl.c:188]   --->   Operation 90 'icmp' 'icmp_ln188' <Predicate = true> <Delay = 1.21> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 91 [1/1] (0.00ns)   --->   "br i1 %icmp_ln188, label %13, label %6" [picnic_impl.c:188]   --->   Operation 91 'br' <Predicate = true> <Delay = 0.00>
ST_8 : Operation 92 [2/2] (1.75ns)   --->   "%output_load = load i32* %output_addr, align 4" [picnic_impl.c:194]   --->   Operation 92 'load' 'output_load' <Predicate = (!icmp_ln188)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_8 : Operation 93 [1/1] (0.00ns)   --->   "ret void" [picnic_impl.c:247]   --->   Operation 93 'ret' <Predicate = (icmp_ln188)> <Delay = 0.00>

State 9 <SV = 6> <Delay = 3.60>
ST_9 : Operation 94 [1/1] (0.00ns)   --->   "%shl_ln = call i14 @_ssdm_op_BitConcatenate.i14.i5.i9(i5 %r_0, i9 0)" [picnic_impl.c:191]   --->   Operation 94 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 95 [2/2] (1.35ns)   --->   "call fastcc void @matrix_mul.1([16 x i32]* %roundKey, [8 x i32]* %key, i14 %shl_ln)" [picnic_impl.c:191]   --->   Operation 95 'call' <Predicate = true> <Delay = 1.35> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_9 : Operation 96 [1/2] (1.75ns)   --->   "%output_load = load i32* %output_addr, align 4" [picnic_impl.c:194]   --->   Operation 96 'load' 'output_load' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_9 : Operation 97 [1/1] (0.00ns)   --->   "%trunc_ln194 = trunc i32 %output_load to i8" [picnic_impl.c:194]   --->   Operation 97 'trunc' 'trunc_ln194' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 98 [1/1] (1.84ns)   --->   "store i8 %trunc_ln194, i8* %temp_addr, align 16" [picnic_impl.c:194]   --->   Operation 98 'store' <Predicate = true> <Delay = 1.84> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_9 : Operation 99 [1/1] (0.00ns)   --->   "%trunc_ln = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %output_load, i32 8, i32 15)" [picnic_impl.c:196]   --->   Operation 99 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 100 [1/1] (1.84ns)   --->   "store i8 %trunc_ln, i8* %temp_addr_4, align 1" [picnic_impl.c:196]   --->   Operation 100 'store' <Predicate = true> <Delay = 1.84> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_9 : Operation 101 [1/1] (0.00ns)   --->   "%trunc_ln1 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %output_load, i32 16, i32 23)" [picnic_impl.c:198]   --->   Operation 101 'partselect' 'trunc_ln1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 102 [1/1] (0.00ns)   --->   "%trunc_ln2 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %output_load, i32 24, i32 31)" [picnic_impl.c:200]   --->   Operation 102 'partselect' 'trunc_ln2' <Predicate = true> <Delay = 0.00>

State 10 <SV = 7> <Delay = 1.84>
ST_10 : Operation 103 [1/2] (0.00ns)   --->   "call fastcc void @matrix_mul.1([16 x i32]* %roundKey, [8 x i32]* %key, i14 %shl_ln)" [picnic_impl.c:191]   --->   Operation 103 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_10 : Operation 104 [1/1] (1.84ns)   --->   "store i8 %trunc_ln1, i8* %temp_addr_5, align 2" [picnic_impl.c:198]   --->   Operation 104 'store' <Predicate = true> <Delay = 1.84> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_10 : Operation 105 [1/1] (1.84ns)   --->   "store i8 %trunc_ln2, i8* %temp_addr_6, align 1" [picnic_impl.c:200]   --->   Operation 105 'store' <Predicate = true> <Delay = 1.84> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_10 : Operation 106 [1/1] (1.35ns)   --->   "br label %7" [picnic_impl.c:209]   --->   Operation 106 'br' <Predicate = true> <Delay = 1.35>

State 11 <SV = 8> <Delay = 3.39>
ST_11 : Operation 107 [1/1] (0.00ns)   --->   "%bitNumber_assign_2 = phi i5 [ 0, %6 ], [ %add_ln209, %8 ]" [picnic_impl.c:209]   --->   Operation 107 'phi' 'bitNumber_assign_2' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 108 [1/1] (1.21ns)   --->   "%icmp_ln209 = icmp ult i5 %bitNumber_assign_2, -2" [picnic_impl.c:209]   --->   Operation 108 'icmp' 'icmp_ln209' <Predicate = true> <Delay = 1.21> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 109 [1/1] (0.00ns)   --->   "%empty_117 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 10, i64 10, i64 10)"   --->   Operation 109 'speclooptripcount' 'empty_117' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 110 [1/1] (0.00ns)   --->   "br i1 %icmp_ln209, label %8, label %9" [picnic_impl.c:209]   --->   Operation 110 'br' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 111 [1/1] (1.54ns)   --->   "%add_ln218 = add i5 2, %bitNumber_assign_2" [picnic_impl.c:218]   --->   Operation 111 'add' 'add_ln218' <Predicate = (icmp_ln209)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 112 [1/1] (0.00ns)   --->   "%lshr_ln = call i2 @_ssdm_op_PartSelect.i2.i5.i32.i32(i5 %add_ln218, i32 3, i32 4)" [picnic_impl.c:55->picnic_impl.c:218]   --->   Operation 112 'partselect' 'lshr_ln' <Predicate = (icmp_ln209)> <Delay = 0.00>
ST_11 : Operation 113 [1/1] (0.00ns)   --->   "%zext_ln55 = zext i2 %lshr_ln to i64" [picnic_impl.c:55->picnic_impl.c:218]   --->   Operation 113 'zext' 'zext_ln55' <Predicate = (icmp_ln209)> <Delay = 0.00>
ST_11 : Operation 114 [1/1] (0.00ns)   --->   "%temp_addr_11 = getelementptr [120 x i8]* %temp, i64 0, i64 %zext_ln55" [picnic_impl.c:55->picnic_impl.c:218]   --->   Operation 114 'getelementptr' 'temp_addr_11' <Predicate = (icmp_ln209)> <Delay = 0.00>
ST_11 : Operation 115 [2/2] (1.84ns)   --->   "%temp_load_10 = load i8* %temp_addr_11, align 1" [picnic_impl.c:55->picnic_impl.c:218]   --->   Operation 115 'load' 'temp_load_10' <Predicate = (icmp_ln209)> <Delay = 1.84> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_11 : Operation 116 [2/2] (1.84ns)   --->   "%temp_load = load i8* %temp_addr, align 16" [picnic_impl.c:239]   --->   Operation 116 'load' 'temp_load' <Predicate = (!icmp_ln209)> <Delay = 1.84> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_11 : Operation 117 [2/2] (1.84ns)   --->   "%temp_load_1 = load i8* %temp_addr_4, align 1" [picnic_impl.c:239]   --->   Operation 117 'load' 'temp_load_1' <Predicate = (!icmp_ln209)> <Delay = 1.84> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 12 <SV = 9> <Delay = 3.39>
ST_12 : Operation 118 [1/2] (1.84ns)   --->   "%temp_load_10 = load i8* %temp_addr_11, align 1" [picnic_impl.c:55->picnic_impl.c:218]   --->   Operation 118 'load' 'temp_load_10' <Predicate = true> <Delay = 1.84> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_12 : Operation 119 [1/1] (0.00ns)   --->   "%trunc_ln209 = trunc i5 %bitNumber_assign_2 to i3" [picnic_impl.c:209]   --->   Operation 119 'trunc' 'trunc_ln209' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 120 [1/1] (1.54ns)   --->   "%add_ln219 = add i5 1, %bitNumber_assign_2" [picnic_impl.c:219]   --->   Operation 120 'add' 'add_ln219' <Predicate = true> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 121 [1/1] (0.00ns)   --->   "%lshr_ln55_2 = call i2 @_ssdm_op_PartSelect.i2.i5.i32.i32(i5 %add_ln219, i32 3, i32 4)" [picnic_impl.c:55->picnic_impl.c:219]   --->   Operation 121 'partselect' 'lshr_ln55_2' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 122 [1/1] (0.00ns)   --->   "%zext_ln55_2 = zext i2 %lshr_ln55_2 to i64" [picnic_impl.c:55->picnic_impl.c:219]   --->   Operation 122 'zext' 'zext_ln55_2' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 123 [1/1] (0.00ns)   --->   "%temp_addr_12 = getelementptr [120 x i8]* %temp, i64 0, i64 %zext_ln55_2" [picnic_impl.c:55->picnic_impl.c:219]   --->   Operation 123 'getelementptr' 'temp_addr_12' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 124 [2/2] (1.84ns)   --->   "%temp_load_11 = load i8* %temp_addr_12, align 1" [picnic_impl.c:55->picnic_impl.c:219]   --->   Operation 124 'load' 'temp_load_11' <Predicate = true> <Delay = 1.84> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_12 : Operation 125 [1/1] (0.00ns)   --->   "%lshr_ln55_4 = call i2 @_ssdm_op_PartSelect.i2.i5.i32.i32(i5 %bitNumber_assign_2, i32 3, i32 4)" [picnic_impl.c:55->picnic_impl.c:220]   --->   Operation 125 'partselect' 'lshr_ln55_4' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 126 [1/1] (0.00ns)   --->   "%zext_ln55_4 = zext i2 %lshr_ln55_4 to i64" [picnic_impl.c:55->picnic_impl.c:220]   --->   Operation 126 'zext' 'zext_ln55_4' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 127 [1/1] (0.00ns)   --->   "%temp_addr_13 = getelementptr [120 x i8]* %temp, i64 0, i64 %zext_ln55_4" [picnic_impl.c:55->picnic_impl.c:220]   --->   Operation 127 'getelementptr' 'temp_addr_13' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 128 [2/2] (1.84ns)   --->   "%temp_load_12 = load i8* %temp_addr_13, align 1" [picnic_impl.c:55->picnic_impl.c:220]   --->   Operation 128 'load' 'temp_load_12' <Predicate = true> <Delay = 1.84> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_12 : Operation 129 [1/1] (1.54ns)   --->   "%add_ln209 = add i5 3, %bitNumber_assign_2" [picnic_impl.c:209]   --->   Operation 129 'add' 'add_ln209' <Predicate = true> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 13 <SV = 10> <Delay = 7.80>
ST_13 : Operation 130 [1/1] (1.34ns)   --->   "%sub_ln55 = sub i3 -3, %trunc_ln209" [picnic_impl.c:55->picnic_impl.c:218]   --->   Operation 130 'sub' 'sub_ln55' <Predicate = true> <Delay = 1.34> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 131 [1/1] (0.00ns)   --->   "%zext_ln55_1 = zext i3 %sub_ln55 to i8" [picnic_impl.c:55->picnic_impl.c:218]   --->   Operation 131 'zext' 'zext_ln55_1' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 132 [1/1] (2.42ns)   --->   "%lshr_ln55 = lshr i8 %temp_load_10, %zext_ln55_1" [picnic_impl.c:55->picnic_impl.c:218]   --->   Operation 132 'lshr' 'lshr_ln55' <Predicate = true> <Delay = 2.42> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.68> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 133 [1/1] (0.00ns)   --->   "%a = trunc i8 %lshr_ln55 to i1" [picnic_impl.c:55->picnic_impl.c:218]   --->   Operation 133 'trunc' 'a' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 134 [1/2] (1.84ns)   --->   "%temp_load_11 = load i8* %temp_addr_12, align 1" [picnic_impl.c:55->picnic_impl.c:219]   --->   Operation 134 'load' 'temp_load_11' <Predicate = true> <Delay = 1.84> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_13 : Operation 135 [1/1] (1.34ns)   --->   "%sub_ln55_1 = sub i3 -2, %trunc_ln209" [picnic_impl.c:55->picnic_impl.c:219]   --->   Operation 135 'sub' 'sub_ln55_1' <Predicate = true> <Delay = 1.34> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 136 [1/1] (0.00ns)   --->   "%zext_ln55_3 = zext i3 %sub_ln55_1 to i8" [picnic_impl.c:55->picnic_impl.c:219]   --->   Operation 136 'zext' 'zext_ln55_3' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 137 [1/1] (2.42ns)   --->   "%lshr_ln55_1 = lshr i8 %temp_load_11, %zext_ln55_3" [picnic_impl.c:55->picnic_impl.c:219]   --->   Operation 137 'lshr' 'lshr_ln55_1' <Predicate = true> <Delay = 2.42> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.68> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 138 [1/1] (0.00ns)   --->   "%b = trunc i8 %lshr_ln55_1 to i1" [picnic_impl.c:55->picnic_impl.c:219]   --->   Operation 138 'trunc' 'b' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 139 [1/2] (1.84ns)   --->   "%temp_load_12 = load i8* %temp_addr_13, align 1" [picnic_impl.c:55->picnic_impl.c:220]   --->   Operation 139 'load' 'temp_load_12' <Predicate = true> <Delay = 1.84> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_13 : Operation 140 [1/1] (0.80ns)   --->   "%xor_ln55 = xor i3 %trunc_ln209, -1" [picnic_impl.c:55->picnic_impl.c:220]   --->   Operation 140 'xor' 'xor_ln55' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 141 [1/1] (0.00ns)   --->   "%zext_ln55_5 = zext i3 %xor_ln55 to i8" [picnic_impl.c:55->picnic_impl.c:220]   --->   Operation 141 'zext' 'zext_ln55_5' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 142 [1/1] (2.42ns)   --->   "%lshr_ln55_3 = lshr i8 %temp_load_12, %zext_ln55_5" [picnic_impl.c:55->picnic_impl.c:220]   --->   Operation 142 'lshr' 'lshr_ln55_3' <Predicate = true> <Delay = 2.42> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.68> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 143 [1/1] (0.00ns)   --->   "%c = trunc i8 %lshr_ln55_3 to i1" [picnic_impl.c:55->picnic_impl.c:220]   --->   Operation 143 'trunc' 'c' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node or_ln68)   --->   "%and_ln222 = and i1 %c, %b" [picnic_impl.c:222]   --->   Operation 144 'and' 'and_ln222' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 145 [1/1] (0.00ns) (grouped into LUT with out node or_ln68)   --->   "%xor_ln222 = xor i1 %and_ln222, %a" [picnic_impl.c:222]   --->   Operation 145 'xor' 'xor_ln222' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 146 [1/1] (0.00ns) (grouped into LUT with out node or_ln68)   --->   "%zext_ln222 = zext i1 %xor_ln222 to i8" [picnic_impl.c:222]   --->   Operation 146 'zext' 'zext_ln222' <Predicate = true> <Delay = 0.00>
ST_13 : Operation 147 [1/1] (0.00ns) (grouped into LUT with out node or_ln68)   --->   "%shl_ln68 = shl i8 1, %zext_ln55_1" [picnic_impl.c:68->picnic_impl.c:222]   --->   Operation 147 'shl' 'shl_ln68' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.68> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 148 [1/1] (0.00ns) (grouped into LUT with out node or_ln68)   --->   "%xor_ln68 = xor i8 %shl_ln68, -1" [picnic_impl.c:68->picnic_impl.c:222]   --->   Operation 148 'xor' 'xor_ln68' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node or_ln68)   --->   "%shl_ln68_3 = shl i8 %zext_ln222, %zext_ln55_1" [picnic_impl.c:68->picnic_impl.c:222]   --->   Operation 149 'shl' 'shl_ln68_3' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.68> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 150 [1/1] (0.00ns) (grouped into LUT with out node or_ln68)   --->   "%and_ln68 = and i8 %temp_load_10, %xor_ln68" [picnic_impl.c:68->picnic_impl.c:222]   --->   Operation 150 'and' 'and_ln68' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 151 [1/1] (1.68ns) (out node of the LUT)   --->   "%or_ln68 = or i8 %and_ln68, %shl_ln68_3" [picnic_impl.c:68->picnic_impl.c:222]   --->   Operation 151 'or' 'or_ln68' <Predicate = true> <Delay = 1.68> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 152 [1/1] (1.84ns)   --->   "store i8 %or_ln68, i8* %temp_addr_11, align 1" [picnic_impl.c:68->picnic_impl.c:222]   --->   Operation 152 'store' <Predicate = true> <Delay = 1.84> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 14 <SV = 11> <Delay = 1.84>
ST_14 : Operation 153 [2/2] (1.84ns)   --->   "%temp_load_13 = load i8* %temp_addr_12, align 1" [picnic_impl.c:68->picnic_impl.c:223]   --->   Operation 153 'load' 'temp_load_13' <Predicate = true> <Delay = 1.84> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 15 <SV = 12> <Delay = 5.38>
ST_15 : Operation 154 [1/1] (0.00ns) (grouped into LUT with out node or_ln68_1)   --->   "%and_ln223 = and i1 %c, %a" [picnic_impl.c:223]   --->   Operation 154 'and' 'and_ln223' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 155 [1/1] (0.80ns)   --->   "%xor_ln223 = xor i1 %b, %a" [picnic_impl.c:223]   --->   Operation 155 'xor' 'xor_ln223' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 156 [1/1] (0.00ns) (grouped into LUT with out node or_ln68_1)   --->   "%xor_ln223_1 = xor i1 %and_ln223, %xor_ln223" [picnic_impl.c:223]   --->   Operation 156 'xor' 'xor_ln223_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node or_ln68_1)   --->   "%zext_ln223 = zext i1 %xor_ln223_1 to i8" [picnic_impl.c:223]   --->   Operation 157 'zext' 'zext_ln223' <Predicate = true> <Delay = 0.00>
ST_15 : Operation 158 [1/2] (1.84ns)   --->   "%temp_load_13 = load i8* %temp_addr_12, align 1" [picnic_impl.c:68->picnic_impl.c:223]   --->   Operation 158 'load' 'temp_load_13' <Predicate = true> <Delay = 1.84> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_15 : Operation 159 [1/1] (0.00ns) (grouped into LUT with out node or_ln68_1)   --->   "%shl_ln68_4 = shl i8 1, %zext_ln55_3" [picnic_impl.c:68->picnic_impl.c:223]   --->   Operation 159 'shl' 'shl_ln68_4' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.68> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 160 [1/1] (0.00ns) (grouped into LUT with out node or_ln68_1)   --->   "%xor_ln68_3 = xor i8 %shl_ln68_4, -1" [picnic_impl.c:68->picnic_impl.c:223]   --->   Operation 160 'xor' 'xor_ln68_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 161 [1/1] (0.00ns) (grouped into LUT with out node or_ln68_1)   --->   "%shl_ln68_5 = shl i8 %zext_ln223, %zext_ln55_3" [picnic_impl.c:68->picnic_impl.c:223]   --->   Operation 161 'shl' 'shl_ln68_5' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.68> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 162 [1/1] (0.00ns) (grouped into LUT with out node or_ln68_1)   --->   "%and_ln68_1 = and i8 %temp_load_13, %xor_ln68_3" [picnic_impl.c:68->picnic_impl.c:223]   --->   Operation 162 'and' 'and_ln68_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 163 [1/1] (1.68ns) (out node of the LUT)   --->   "%or_ln68_1 = or i8 %and_ln68_1, %shl_ln68_5" [picnic_impl.c:68->picnic_impl.c:223]   --->   Operation 163 'or' 'or_ln68_1' <Predicate = true> <Delay = 1.68> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_15 : Operation 164 [1/1] (1.84ns)   --->   "store i8 %or_ln68_1, i8* %temp_addr_12, align 1" [picnic_impl.c:68->picnic_impl.c:223]   --->   Operation 164 'store' <Predicate = true> <Delay = 1.84> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 16 <SV = 13> <Delay = 1.84>
ST_16 : Operation 165 [2/2] (1.84ns)   --->   "%temp_load_14 = load i8* %temp_addr_13, align 1" [picnic_impl.c:68->picnic_impl.c:224]   --->   Operation 165 'load' 'temp_load_14' <Predicate = true> <Delay = 1.84> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 17 <SV = 14> <Delay = 5.38>
ST_17 : Operation 166 [1/1] (0.00ns) (grouped into LUT with out node shl_ln68_7)   --->   "%and_ln224 = and i1 %b, %a" [picnic_impl.c:224]   --->   Operation 166 'and' 'and_ln224' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 167 [1/1] (0.00ns) (grouped into LUT with out node shl_ln68_7)   --->   "%xor_ln224 = xor i1 %c, %xor_ln223" [picnic_impl.c:224]   --->   Operation 167 'xor' 'xor_ln224' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 168 [1/1] (0.00ns) (grouped into LUT with out node shl_ln68_7)   --->   "%xor_ln224_1 = xor i1 %xor_ln224, %and_ln224" [picnic_impl.c:224]   --->   Operation 168 'xor' 'xor_ln224_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 169 [1/1] (0.00ns) (grouped into LUT with out node shl_ln68_7)   --->   "%zext_ln224 = zext i1 %xor_ln224_1 to i8" [picnic_impl.c:224]   --->   Operation 169 'zext' 'zext_ln224' <Predicate = true> <Delay = 0.00>
ST_17 : Operation 170 [1/2] (1.84ns)   --->   "%temp_load_14 = load i8* %temp_addr_13, align 1" [picnic_impl.c:68->picnic_impl.c:224]   --->   Operation 170 'load' 'temp_load_14' <Predicate = true> <Delay = 1.84> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_17 : Operation 171 [1/1] (0.00ns) (grouped into LUT with out node or_ln68_2)   --->   "%shl_ln68_6 = shl i8 1, %zext_ln55_5" [picnic_impl.c:68->picnic_impl.c:224]   --->   Operation 171 'shl' 'shl_ln68_6' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.68> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 172 [1/1] (0.00ns) (grouped into LUT with out node or_ln68_2)   --->   "%xor_ln68_4 = xor i8 %shl_ln68_6, -1" [picnic_impl.c:68->picnic_impl.c:224]   --->   Operation 172 'xor' 'xor_ln68_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 173 [1/1] (1.68ns) (out node of the LUT)   --->   "%shl_ln68_7 = shl i8 %zext_ln224, %zext_ln55_5" [picnic_impl.c:68->picnic_impl.c:224]   --->   Operation 173 'shl' 'shl_ln68_7' <Predicate = true> <Delay = 1.68> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.68> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 174 [1/1] (0.00ns) (grouped into LUT with out node or_ln68_2)   --->   "%and_ln68_2 = and i8 %temp_load_14, %xor_ln68_4" [picnic_impl.c:68->picnic_impl.c:224]   --->   Operation 174 'and' 'and_ln68_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 175 [1/1] (1.68ns) (out node of the LUT)   --->   "%or_ln68_2 = or i8 %and_ln68_2, %shl_ln68_7" [picnic_impl.c:68->picnic_impl.c:224]   --->   Operation 175 'or' 'or_ln68_2' <Predicate = true> <Delay = 1.68> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_17 : Operation 176 [1/1] (1.84ns)   --->   "store i8 %or_ln68_2, i8* %temp_addr_13, align 1" [picnic_impl.c:68->picnic_impl.c:224]   --->   Operation 176 'store' <Predicate = true> <Delay = 1.84> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_17 : Operation 177 [1/1] (0.00ns)   --->   "br label %7" [picnic_impl.c:209]   --->   Operation 177 'br' <Predicate = true> <Delay = 0.00>

State 18 <SV = 9> <Delay = 1.84>
ST_18 : Operation 178 [1/2] (1.84ns)   --->   "%temp_load = load i8* %temp_addr, align 16" [picnic_impl.c:239]   --->   Operation 178 'load' 'temp_load' <Predicate = true> <Delay = 1.84> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_18 : Operation 179 [1/2] (1.84ns)   --->   "%temp_load_1 = load i8* %temp_addr_4, align 1" [picnic_impl.c:239]   --->   Operation 179 'load' 'temp_load_1' <Predicate = true> <Delay = 1.84> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_18 : Operation 180 [2/2] (1.84ns)   --->   "%temp_load_2 = load i8* %temp_addr_5, align 2" [picnic_impl.c:239]   --->   Operation 180 'load' 'temp_load_2' <Predicate = true> <Delay = 1.84> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_18 : Operation 181 [2/2] (1.84ns)   --->   "%temp_load_3 = load i8* %temp_addr_6, align 1" [picnic_impl.c:239]   --->   Operation 181 'load' 'temp_load_3' <Predicate = true> <Delay = 1.84> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 19 <SV = 10> <Delay = 3.60>
ST_19 : Operation 182 [1/2] (1.84ns)   --->   "%temp_load_2 = load i8* %temp_addr_5, align 2" [picnic_impl.c:239]   --->   Operation 182 'load' 'temp_load_2' <Predicate = true> <Delay = 1.84> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_19 : Operation 183 [1/2] (1.84ns)   --->   "%temp_load_3 = load i8* %temp_addr_6, align 1" [picnic_impl.c:239]   --->   Operation 183 'load' 'temp_load_3' <Predicate = true> <Delay = 1.84> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_19 : Operation 184 [1/1] (0.00ns)   --->   "%or_ln239_2 = call i32 @_ssdm_op_BitConcatenate.i32.i8.i8.i8.i8(i8 %temp_load_3, i8 %temp_load_2, i8 %temp_load_1, i8 %temp_load)" [picnic_impl.c:239]   --->   Operation 184 'bitconcatenate' 'or_ln239_2' <Predicate = true> <Delay = 0.00>
ST_19 : Operation 185 [1/1] (1.75ns)   --->   "store i32 %or_ln239_2, i32* %output_addr, align 4" [picnic_impl.c:239]   --->   Operation 185 'store' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>

State 20 <SV = 11> <Delay = 1.80>
ST_20 : Operation 186 [1/1] (1.80ns)   --->   "%add_ln243 = add i14 %shl_ln, -512" [picnic_impl.c:243]   --->   Operation 186 'add' 'add_ln243' <Predicate = true> <Delay = 1.80> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 187 [2/2] (0.00ns)   --->   "call fastcc void @matrix_mul([8 x i32]* %output_r, i14 %add_ln243)" [picnic_impl.c:243]   --->   Operation 187 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >

State 21 <SV = 12> <Delay = 1.66>
ST_21 : Operation 188 [1/2] (0.00ns)   --->   "call fastcc void @matrix_mul([8 x i32]* %output_r, i14 %add_ln243)" [picnic_impl.c:243]   --->   Operation 188 'call' <Predicate = true> <Delay = 0.00> <CoreType = "Generic">   --->   Core 0 '' <Latency = 0> <II = 1> <Delay = 1.00> <Generic> <Opcode : >
ST_21 : Operation 189 [1/1] (0.00ns)   --->   "%shl_ln1 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %r_0, i2 0)" [picnic_impl.c:244]   --->   Operation 189 'bitconcatenate' 'shl_ln1' <Predicate = true> <Delay = 0.00>
ST_21 : Operation 190 [1/1] (1.66ns)   --->   "%add_ln244 = add i7 %shl_ln1, -4" [picnic_impl.c:244]   --->   Operation 190 'add' 'add_ln244' <Predicate = true> <Delay = 1.66> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_21 : Operation 191 [1/1] (1.35ns)   --->   "br label %10" [picnic_impl.c:110->picnic_impl.c:244]   --->   Operation 191 'br' <Predicate = true> <Delay = 1.35>

State 22 <SV = 13> <Delay = 4.43>
ST_22 : Operation 192 [1/1] (0.00ns)   --->   "%i_0_0_i = phi i3 [ 0, %9 ], [ %add_ln110, %11 ]" [picnic_impl.c:110->picnic_impl.c:244]   --->   Operation 192 'phi' 'i_0_0_i' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 193 [1/1] (1.00ns)   --->   "%icmp_ln110 = icmp eq i3 %i_0_0_i, -4" [picnic_impl.c:110->picnic_impl.c:244]   --->   Operation 193 'icmp' 'icmp_ln110' <Predicate = true> <Delay = 1.00> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 194 [1/1] (0.00ns)   --->   "%empty_118 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2)"   --->   Operation 194 'speclooptripcount' 'empty_118' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 195 [1/1] (0.00ns)   --->   "br i1 %icmp_ln110, label %xor_array.1.exit.preheader, label %11" [picnic_impl.c:110->picnic_impl.c:244]   --->   Operation 195 'br' <Predicate = true> <Delay = 0.00>
ST_22 : Operation 196 [1/1] (0.00ns)   --->   "%zext_ln114 = zext i3 %i_0_0_i to i64" [picnic_impl.c:114->picnic_impl.c:244]   --->   Operation 196 'zext' 'zext_ln114' <Predicate = (!icmp_ln110)> <Delay = 0.00>
ST_22 : Operation 197 [1/1] (0.00ns)   --->   "%zext_ln114_4 = zext i3 %i_0_0_i to i7" [picnic_impl.c:114->picnic_impl.c:244]   --->   Operation 197 'zext' 'zext_ln114_4' <Predicate = (!icmp_ln110)> <Delay = 0.00>
ST_22 : Operation 198 [1/1] (0.00ns)   --->   "%output_addr_4 = getelementptr [8 x i32]* %output_r, i64 0, i64 %zext_ln114" [picnic_impl.c:114->picnic_impl.c:244]   --->   Operation 198 'getelementptr' 'output_addr_4' <Predicate = (!icmp_ln110)> <Delay = 0.00>
ST_22 : Operation 199 [2/2] (1.75ns)   --->   "%output_load_1 = load i32* %output_addr_4, align 4" [picnic_impl.c:114->picnic_impl.c:244]   --->   Operation 199 'load' 'output_load_1' <Predicate = (!icmp_ln110)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_22 : Operation 200 [1/1] (1.66ns)   --->   "%add_ln114 = add i7 %add_ln244, %zext_ln114_4" [picnic_impl.c:114->picnic_impl.c:244]   --->   Operation 200 'add' 'add_ln114' <Predicate = (!icmp_ln110)> <Delay = 1.66> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 201 [1/1] (0.00ns)   --->   "%zext_ln114_5 = zext i7 %add_ln114 to i64" [picnic_impl.c:114->picnic_impl.c:244]   --->   Operation 201 'zext' 'zext_ln114_5' <Predicate = (!icmp_ln110)> <Delay = 0.00>
ST_22 : Operation 202 [1/1] (0.00ns)   --->   "%temp_matrix3_addr = getelementptr [80 x i32]* @temp_matrix3, i64 0, i64 %zext_ln114_5" [picnic_impl.c:114->picnic_impl.c:244]   --->   Operation 202 'getelementptr' 'temp_matrix3_addr' <Predicate = (!icmp_ln110)> <Delay = 0.00>
ST_22 : Operation 203 [2/2] (2.77ns)   --->   "%temp_matrix3_load = load i32* %temp_matrix3_addr, align 8" [picnic_impl.c:114->picnic_impl.c:244]   --->   Operation 203 'load' 'temp_matrix3_load' <Predicate = (!icmp_ln110)> <Delay = 2.77> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 80> <ROM>
ST_22 : Operation 204 [1/1] (0.00ns)   --->   "%trunc_ln110_1 = trunc i3 %i_0_0_i to i2" [picnic_impl.c:110->picnic_impl.c:244]   --->   Operation 204 'trunc' 'trunc_ln110_1' <Predicate = (!icmp_ln110)> <Delay = 0.00>
ST_22 : Operation 205 [1/1] (0.00ns)   --->   "%or_ln110 = or i2 %trunc_ln110_1, 1" [picnic_impl.c:110->picnic_impl.c:244]   --->   Operation 205 'or' 'or_ln110' <Predicate = (!icmp_ln110)> <Delay = 0.00>
ST_22 : Operation 206 [1/1] (0.00ns)   --->   "%zext_ln114_2 = zext i2 %or_ln110 to i64" [picnic_impl.c:114->picnic_impl.c:244]   --->   Operation 206 'zext' 'zext_ln114_2' <Predicate = (!icmp_ln110)> <Delay = 0.00>
ST_22 : Operation 207 [1/1] (0.00ns)   --->   "%output_addr_5 = getelementptr [8 x i32]* %output_r, i64 0, i64 %zext_ln114_2" [picnic_impl.c:114->picnic_impl.c:244]   --->   Operation 207 'getelementptr' 'output_addr_5' <Predicate = (!icmp_ln110)> <Delay = 0.00>
ST_22 : Operation 208 [2/2] (1.75ns)   --->   "%output_load_2 = load i32* %output_addr_5, align 4" [picnic_impl.c:114->picnic_impl.c:244]   --->   Operation 208 'load' 'output_load_2' <Predicate = (!icmp_ln110)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_22 : Operation 209 [1/1] (0.00ns)   --->   "%tmp_3 = call i5 @_ssdm_op_PartSelect.i5.i7.i32.i32(i7 %add_ln244, i32 2, i32 6)" [picnic_impl.c:114->picnic_impl.c:244]   --->   Operation 209 'partselect' 'tmp_3' <Predicate = (!icmp_ln110)> <Delay = 0.00>
ST_22 : Operation 210 [1/1] (0.00ns)   --->   "%add_ln114_1 = call i7 @_ssdm_op_BitConcatenate.i7.i5.i2(i5 %tmp_3, i2 %or_ln110)" [picnic_impl.c:114->picnic_impl.c:244]   --->   Operation 210 'bitconcatenate' 'add_ln114_1' <Predicate = (!icmp_ln110)> <Delay = 0.00>
ST_22 : Operation 211 [1/1] (0.00ns)   --->   "%zext_ln114_6 = zext i7 %add_ln114_1 to i64" [picnic_impl.c:114->picnic_impl.c:244]   --->   Operation 211 'zext' 'zext_ln114_6' <Predicate = (!icmp_ln110)> <Delay = 0.00>
ST_22 : Operation 212 [1/1] (0.00ns)   --->   "%temp_matrix3_addr_1 = getelementptr [80 x i32]* @temp_matrix3, i64 0, i64 %zext_ln114_6" [picnic_impl.c:114->picnic_impl.c:244]   --->   Operation 212 'getelementptr' 'temp_matrix3_addr_1' <Predicate = (!icmp_ln110)> <Delay = 0.00>
ST_22 : Operation 213 [2/2] (2.77ns)   --->   "%temp_matrix3_load_1 = load i32* %temp_matrix3_addr_1, align 4" [picnic_impl.c:114->picnic_impl.c:244]   --->   Operation 213 'load' 'temp_matrix3_load_1' <Predicate = (!icmp_ln110)> <Delay = 2.77> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 80> <ROM>
ST_22 : Operation 214 [1/1] (1.34ns)   --->   "%add_ln110 = add i3 2, %i_0_0_i" [picnic_impl.c:110->picnic_impl.c:244]   --->   Operation 214 'add' 'add_ln110' <Predicate = (!icmp_ln110)> <Delay = 1.34> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_22 : Operation 215 [1/1] (1.35ns)   --->   "br label %xor_array.1.exit" [picnic_impl.c:110->picnic_impl.c:245]   --->   Operation 215 'br' <Predicate = (icmp_ln110)> <Delay = 1.35>

State 23 <SV = 14> <Delay = 5.33>
ST_23 : Operation 216 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([17 x i8]* @p_str428) nounwind" [picnic_impl.c:111->picnic_impl.c:244]   --->   Operation 216 'specloopname' <Predicate = true> <Delay = 0.00>
ST_23 : Operation 217 [1/2] (1.75ns)   --->   "%output_load_1 = load i32* %output_addr_4, align 4" [picnic_impl.c:114->picnic_impl.c:244]   --->   Operation 217 'load' 'output_load_1' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_23 : Operation 218 [1/2] (2.77ns)   --->   "%temp_matrix3_load = load i32* %temp_matrix3_addr, align 8" [picnic_impl.c:114->picnic_impl.c:244]   --->   Operation 218 'load' 'temp_matrix3_load' <Predicate = true> <Delay = 2.77> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 80> <ROM>
ST_23 : Operation 219 [1/1] (0.80ns)   --->   "%xor_ln114 = xor i32 %temp_matrix3_load, %output_load_1" [picnic_impl.c:114->picnic_impl.c:244]   --->   Operation 219 'xor' 'xor_ln114' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 220 [1/1] (1.75ns)   --->   "store i32 %xor_ln114, i32* %output_addr_4, align 4" [picnic_impl.c:114->picnic_impl.c:244]   --->   Operation 220 'store' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_23 : Operation 221 [1/2] (1.75ns)   --->   "%output_load_2 = load i32* %output_addr_5, align 4" [picnic_impl.c:114->picnic_impl.c:244]   --->   Operation 221 'load' 'output_load_2' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_23 : Operation 222 [1/2] (2.77ns)   --->   "%temp_matrix3_load_1 = load i32* %temp_matrix3_addr_1, align 4" [picnic_impl.c:114->picnic_impl.c:244]   --->   Operation 222 'load' 'temp_matrix3_load_1' <Predicate = true> <Delay = 2.77> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 80> <ROM>
ST_23 : Operation 223 [1/1] (0.80ns)   --->   "%xor_ln114_2 = xor i32 %temp_matrix3_load_1, %output_load_2" [picnic_impl.c:114->picnic_impl.c:244]   --->   Operation 223 'xor' 'xor_ln114_2' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_23 : Operation 224 [1/1] (1.75ns)   --->   "store i32 %xor_ln114_2, i32* %output_addr_5, align 4" [picnic_impl.c:114->picnic_impl.c:244]   --->   Operation 224 'store' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_23 : Operation 225 [1/1] (0.00ns)   --->   "br label %10" [picnic_impl.c:110->picnic_impl.c:244]   --->   Operation 225 'br' <Predicate = true> <Delay = 0.00>

State 24 <SV = 14> <Delay = 1.81>
ST_24 : Operation 226 [1/1] (0.00ns)   --->   "%i_0_0_i2 = phi i3 [ %add_ln110_2, %12 ], [ 0, %xor_array.1.exit.preheader ]" [picnic_impl.c:110->picnic_impl.c:245]   --->   Operation 226 'phi' 'i_0_0_i2' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 227 [1/1] (1.00ns)   --->   "%icmp_ln110_2 = icmp eq i3 %i_0_0_i2, -4" [picnic_impl.c:110->picnic_impl.c:245]   --->   Operation 227 'icmp' 'icmp_ln110_2' <Predicate = true> <Delay = 1.00> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 228 [1/1] (0.00ns)   --->   "%empty_119 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2)"   --->   Operation 228 'speclooptripcount' 'empty_119' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 229 [1/1] (0.00ns)   --->   "br i1 %icmp_ln110_2, label %xor_array.exit18, label %12" [picnic_impl.c:110->picnic_impl.c:245]   --->   Operation 229 'br' <Predicate = true> <Delay = 0.00>
ST_24 : Operation 230 [1/1] (0.00ns)   --->   "%zext_ln114_7 = zext i3 %i_0_0_i2 to i64" [picnic_impl.c:114->picnic_impl.c:245]   --->   Operation 230 'zext' 'zext_ln114_7' <Predicate = (!icmp_ln110_2)> <Delay = 0.00>
ST_24 : Operation 231 [1/1] (0.00ns)   --->   "%output_addr_8 = getelementptr [8 x i32]* %output_r, i64 0, i64 %zext_ln114_7" [picnic_impl.c:114->picnic_impl.c:245]   --->   Operation 231 'getelementptr' 'output_addr_8' <Predicate = (!icmp_ln110_2)> <Delay = 0.00>
ST_24 : Operation 232 [2/2] (1.75ns)   --->   "%output_load_5 = load i32* %output_addr_8, align 4" [picnic_impl.c:114->picnic_impl.c:245]   --->   Operation 232 'load' 'output_load_5' <Predicate = (!icmp_ln110_2)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_24 : Operation 233 [1/1] (0.00ns)   --->   "%roundKey_addr_2 = getelementptr [16 x i32]* %roundKey, i64 0, i64 %zext_ln114_7" [picnic_impl.c:114->picnic_impl.c:245]   --->   Operation 233 'getelementptr' 'roundKey_addr_2' <Predicate = (!icmp_ln110_2)> <Delay = 0.00>
ST_24 : Operation 234 [2/2] (1.75ns)   --->   "%roundKey_load_2 = load i32* %roundKey_addr_2, align 8" [picnic_impl.c:114->picnic_impl.c:245]   --->   Operation 234 'load' 'roundKey_load_2' <Predicate = (!icmp_ln110_2)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_24 : Operation 235 [1/1] (0.00ns)   --->   "%trunc_ln110_2 = trunc i3 %i_0_0_i2 to i2" [picnic_impl.c:110->picnic_impl.c:245]   --->   Operation 235 'trunc' 'trunc_ln110_2' <Predicate = (!icmp_ln110_2)> <Delay = 0.00>
ST_24 : Operation 236 [1/1] (0.00ns)   --->   "%or_ln110_2 = or i2 %trunc_ln110_2, 1" [picnic_impl.c:110->picnic_impl.c:245]   --->   Operation 236 'or' 'or_ln110_2' <Predicate = (!icmp_ln110_2)> <Delay = 0.00>
ST_24 : Operation 237 [1/1] (0.00ns)   --->   "%zext_ln114_8 = zext i2 %or_ln110_2 to i64" [picnic_impl.c:114->picnic_impl.c:245]   --->   Operation 237 'zext' 'zext_ln114_8' <Predicate = (!icmp_ln110_2)> <Delay = 0.00>
ST_24 : Operation 238 [1/1] (0.00ns)   --->   "%output_addr_9 = getelementptr [8 x i32]* %output_r, i64 0, i64 %zext_ln114_8" [picnic_impl.c:114->picnic_impl.c:245]   --->   Operation 238 'getelementptr' 'output_addr_9' <Predicate = (!icmp_ln110_2)> <Delay = 0.00>
ST_24 : Operation 239 [2/2] (1.75ns)   --->   "%output_load_6 = load i32* %output_addr_9, align 4" [picnic_impl.c:114->picnic_impl.c:245]   --->   Operation 239 'load' 'output_load_6' <Predicate = (!icmp_ln110_2)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_24 : Operation 240 [1/1] (0.00ns)   --->   "%roundKey_addr_3 = getelementptr [16 x i32]* %roundKey, i64 0, i64 %zext_ln114_8" [picnic_impl.c:114->picnic_impl.c:245]   --->   Operation 240 'getelementptr' 'roundKey_addr_3' <Predicate = (!icmp_ln110_2)> <Delay = 0.00>
ST_24 : Operation 241 [2/2] (1.75ns)   --->   "%roundKey_load_3 = load i32* %roundKey_addr_3, align 4" [picnic_impl.c:114->picnic_impl.c:245]   --->   Operation 241 'load' 'roundKey_load_3' <Predicate = (!icmp_ln110_2)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_24 : Operation 242 [1/1] (1.34ns)   --->   "%add_ln110_2 = add i3 2, %i_0_0_i2" [picnic_impl.c:110->picnic_impl.c:245]   --->   Operation 242 'add' 'add_ln110_2' <Predicate = (!icmp_ln110_2)> <Delay = 1.34> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 243 [1/1] (1.54ns)   --->   "%r = add i5 %r_0, 1" [picnic_impl.c:188]   --->   Operation 243 'add' 'r' <Predicate = (icmp_ln110_2)> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.54> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_24 : Operation 244 [1/1] (0.00ns)   --->   "br label %5" [picnic_impl.c:188]   --->   Operation 244 'br' <Predicate = (icmp_ln110_2)> <Delay = 0.00>

State 25 <SV = 15> <Delay = 4.31>
ST_25 : Operation 245 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([17 x i8]* @p_str428) nounwind" [picnic_impl.c:111->picnic_impl.c:245]   --->   Operation 245 'specloopname' <Predicate = true> <Delay = 0.00>
ST_25 : Operation 246 [1/2] (1.75ns)   --->   "%output_load_5 = load i32* %output_addr_8, align 4" [picnic_impl.c:114->picnic_impl.c:245]   --->   Operation 246 'load' 'output_load_5' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_25 : Operation 247 [1/2] (1.75ns)   --->   "%roundKey_load_2 = load i32* %roundKey_addr_2, align 8" [picnic_impl.c:114->picnic_impl.c:245]   --->   Operation 247 'load' 'roundKey_load_2' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_25 : Operation 248 [1/1] (0.80ns)   --->   "%xor_ln114_4 = xor i32 %roundKey_load_2, %output_load_5" [picnic_impl.c:114->picnic_impl.c:245]   --->   Operation 248 'xor' 'xor_ln114_4' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 249 [1/1] (1.75ns)   --->   "store i32 %xor_ln114_4, i32* %output_addr_8, align 4" [picnic_impl.c:114->picnic_impl.c:245]   --->   Operation 249 'store' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_25 : Operation 250 [1/2] (1.75ns)   --->   "%output_load_6 = load i32* %output_addr_9, align 4" [picnic_impl.c:114->picnic_impl.c:245]   --->   Operation 250 'load' 'output_load_6' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_25 : Operation 251 [1/2] (1.75ns)   --->   "%roundKey_load_3 = load i32* %roundKey_addr_3, align 4" [picnic_impl.c:114->picnic_impl.c:245]   --->   Operation 251 'load' 'roundKey_load_3' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_25 : Operation 252 [1/1] (0.80ns)   --->   "%xor_ln114_5 = xor i32 %roundKey_load_3, %output_load_6" [picnic_impl.c:114->picnic_impl.c:245]   --->   Operation 252 'xor' 'xor_ln114_5' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 253 [1/1] (1.75ns)   --->   "store i32 %xor_ln114_5, i32* %output_addr_9, align 4" [picnic_impl.c:114->picnic_impl.c:245]   --->   Operation 253 'store' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 8> <RAM>
ST_25 : Operation 254 [1/1] (0.00ns)   --->   "br label %xor_array.1.exit" [picnic_impl.c:110->picnic_impl.c:245]   --->   Operation 254 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.35ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('loop_0_0', picnic_impl.c:171) with incoming values : ('add_ln171', picnic_impl.c:171) [15]  (1.35 ns)

 <State 2>: 1.75ns
The critical path consists of the following:
	'phi' operation ('loop_0_0', picnic_impl.c:171) with incoming values : ('add_ln171', picnic_impl.c:171) [15]  (0 ns)
	'getelementptr' operation ('plaintext_addr', picnic_impl.c:174) [24]  (0 ns)
	'load' operation ('plaintext_load', picnic_impl.c:174) on array 'plaintext' [25]  (1.75 ns)

 <State 3>: 3.51ns
The critical path consists of the following:
	'load' operation ('plaintext_load', picnic_impl.c:174) on array 'plaintext' [25]  (1.75 ns)
	'store' operation ('store_ln174', picnic_impl.c:174) of variable 'plaintext_load', picnic_impl.c:174 on array 'output_r' [27]  (1.75 ns)

 <State 4>: 1.35ns
The critical path consists of the following:
	'call' operation ('call_ln178', picnic_impl.c:178) to 'matrix_mul.1' [38]  (1.35 ns)

 <State 5>: 1.35ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i_0_0_i1', picnic_impl.c:110->picnic_impl.c:179) with incoming values : ('add_ln110_1', picnic_impl.c:110->picnic_impl.c:179) [41]  (1.35 ns)

 <State 6>: 1.81ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln110_1', picnic_impl.c:110->picnic_impl.c:179) [42]  (1 ns)
	blocking operation 0.809 ns on control path)

 <State 7>: 4.32ns
The critical path consists of the following:
	'load' operation ('output_load_3', picnic_impl.c:114->picnic_impl.c:179) on array 'output_r' [49]  (1.75 ns)
	'xor' operation ('xor_ln114_1', picnic_impl.c:114->picnic_impl.c:179) [52]  (0.809 ns)
	'store' operation ('store_ln114', picnic_impl.c:114->picnic_impl.c:179) of variable 'xor_ln114_1', picnic_impl.c:114->picnic_impl.c:179 on array 'output_r' [53]  (1.75 ns)

 <State 8>: 2.03ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln188', picnic_impl.c:188) [74]  (1.22 ns)
	blocking operation 0.809 ns on control path)

 <State 9>: 3.6ns
The critical path consists of the following:
	'load' operation ('output_load', picnic_impl.c:194) on array 'output_r' [79]  (1.75 ns)
	'store' operation ('store_ln194', picnic_impl.c:194) of variable 'trunc_ln194', picnic_impl.c:194 on array 'temp', picnic_impl.c:186 [81]  (1.85 ns)

 <State 10>: 1.85ns
The critical path consists of the following:
	'store' operation ('store_ln198', picnic_impl.c:198) of variable 'trunc_ln1', picnic_impl.c:198 on array 'temp', picnic_impl.c:186 [85]  (1.85 ns)

 <State 11>: 3.39ns
The critical path consists of the following:
	'phi' operation ('bitNumber', picnic_impl.c:209) with incoming values : ('add_ln209', picnic_impl.c:209) [90]  (0 ns)
	'add' operation ('bitNumber', picnic_impl.c:218) [95]  (1.55 ns)
	'getelementptr' operation ('temp_addr_11', picnic_impl.c:55->picnic_impl.c:218) [98]  (0 ns)
	'load' operation ('temp_load_10', picnic_impl.c:55->picnic_impl.c:218) on array 'temp', picnic_impl.c:186 [99]  (1.85 ns)

 <State 12>: 3.39ns
The critical path consists of the following:
	'add' operation ('bitNumber', picnic_impl.c:219) [105]  (1.55 ns)
	'getelementptr' operation ('temp_addr_12', picnic_impl.c:55->picnic_impl.c:219) [108]  (0 ns)
	'load' operation ('temp_load_11', picnic_impl.c:55->picnic_impl.c:219) on array 'temp', picnic_impl.c:186 [109]  (1.85 ns)

 <State 13>: 7.8ns
The critical path consists of the following:
	'load' operation ('temp_load_11', picnic_impl.c:55->picnic_impl.c:219) on array 'temp', picnic_impl.c:186 [109]  (1.85 ns)
	'lshr' operation ('lshr_ln55_1', picnic_impl.c:55->picnic_impl.c:219) [112]  (2.42 ns)
	'and' operation ('and_ln222', picnic_impl.c:222) [122]  (0 ns)
	'xor' operation ('val', picnic_impl.c:222) [123]  (0 ns)
	'shl' operation ('shl_ln68_3', picnic_impl.c:68->picnic_impl.c:222) [127]  (0 ns)
	'or' operation ('or_ln68', picnic_impl.c:68->picnic_impl.c:222) [129]  (1.69 ns)
	'store' operation ('store_ln68', picnic_impl.c:68->picnic_impl.c:222) of variable 'or_ln68', picnic_impl.c:68->picnic_impl.c:222 on array 'temp', picnic_impl.c:186 [130]  (1.85 ns)

 <State 14>: 1.85ns
The critical path consists of the following:
	'load' operation ('temp_load_13', picnic_impl.c:68->picnic_impl.c:223) on array 'temp', picnic_impl.c:186 [135]  (1.85 ns)

 <State 15>: 5.38ns
The critical path consists of the following:
	'load' operation ('temp_load_13', picnic_impl.c:68->picnic_impl.c:223) on array 'temp', picnic_impl.c:186 [135]  (1.85 ns)
	'and' operation ('and_ln68_1', picnic_impl.c:68->picnic_impl.c:223) [139]  (0 ns)
	'or' operation ('or_ln68_1', picnic_impl.c:68->picnic_impl.c:223) [140]  (1.69 ns)
	'store' operation ('store_ln68', picnic_impl.c:68->picnic_impl.c:223) of variable 'or_ln68_1', picnic_impl.c:68->picnic_impl.c:223 on array 'temp', picnic_impl.c:186 [141]  (1.85 ns)

 <State 16>: 1.85ns
The critical path consists of the following:
	'load' operation ('temp_load_14', picnic_impl.c:68->picnic_impl.c:224) on array 'temp', picnic_impl.c:186 [146]  (1.85 ns)

 <State 17>: 5.38ns
The critical path consists of the following:
	'load' operation ('temp_load_14', picnic_impl.c:68->picnic_impl.c:224) on array 'temp', picnic_impl.c:186 [146]  (1.85 ns)
	'and' operation ('and_ln68_2', picnic_impl.c:68->picnic_impl.c:224) [150]  (0 ns)
	'or' operation ('or_ln68_2', picnic_impl.c:68->picnic_impl.c:224) [151]  (1.69 ns)
	'store' operation ('store_ln68', picnic_impl.c:68->picnic_impl.c:224) of variable 'or_ln68_2', picnic_impl.c:68->picnic_impl.c:224 on array 'temp', picnic_impl.c:186 [152]  (1.85 ns)

 <State 18>: 1.85ns
The critical path consists of the following:
	'load' operation ('temp_load', picnic_impl.c:239) on array 'temp', picnic_impl.c:186 [156]  (1.85 ns)

 <State 19>: 3.6ns
The critical path consists of the following:
	'load' operation ('temp_load_2', picnic_impl.c:239) on array 'temp', picnic_impl.c:186 [158]  (1.85 ns)
	'store' operation ('store_ln239', picnic_impl.c:239) of variable 'or_ln239_2', picnic_impl.c:239 on array 'output_r' [161]  (1.75 ns)

 <State 20>: 1.81ns
The critical path consists of the following:
	'add' operation ('add_ln243', picnic_impl.c:243) [162]  (1.81 ns)

 <State 21>: 1.66ns
The critical path consists of the following:
	'add' operation ('add_ln244', picnic_impl.c:244) [165]  (1.66 ns)

 <State 22>: 4.43ns
The critical path consists of the following:
	'phi' operation ('i_0_0_i', picnic_impl.c:110->picnic_impl.c:244) with incoming values : ('add_ln110', picnic_impl.c:110->picnic_impl.c:244) [168]  (0 ns)
	'add' operation ('add_ln114', picnic_impl.c:114->picnic_impl.c:244) [178]  (1.66 ns)
	'getelementptr' operation ('temp_matrix3_addr', picnic_impl.c:114->picnic_impl.c:244) [180]  (0 ns)
	'load' operation ('temp_matrix3_load', picnic_impl.c:114->picnic_impl.c:244) on array 'temp_matrix3' [181]  (2.77 ns)

 <State 23>: 5.34ns
The critical path consists of the following:
	'load' operation ('temp_matrix3_load', picnic_impl.c:114->picnic_impl.c:244) on array 'temp_matrix3' [181]  (2.77 ns)
	'xor' operation ('xor_ln114', picnic_impl.c:114->picnic_impl.c:244) [182]  (0.809 ns)
	'store' operation ('store_ln114', picnic_impl.c:114->picnic_impl.c:244) of variable 'xor_ln114', picnic_impl.c:114->picnic_impl.c:244 on array 'output_r' [183]  (1.75 ns)

 <State 24>: 1.81ns
The critical path consists of the following:
	'icmp' operation ('icmp_ln110_2', picnic_impl.c:110->picnic_impl.c:245) [202]  (1 ns)
	blocking operation 0.809 ns on control path)

 <State 25>: 4.32ns
The critical path consists of the following:
	'load' operation ('output_load_5', picnic_impl.c:114->picnic_impl.c:245) on array 'output_r' [209]  (1.75 ns)
	'xor' operation ('xor_ln114_4', picnic_impl.c:114->picnic_impl.c:245) [212]  (0.809 ns)
	'store' operation ('store_ln114', picnic_impl.c:114->picnic_impl.c:245) of variable 'xor_ln114_4', picnic_impl.c:114->picnic_impl.c:245 on array 'output_r' [213]  (1.75 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A

// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _KeyExpansion_HH_
#define _KeyExpansion_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "KeyExpansion_sbox.h"
#include "KeyExpansion_Rcon.h"

namespace ap_rtl {

struct KeyExpansion : public sc_module {
    // Port declarations 22
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<8> > RoundKey_address0;
    sc_out< sc_logic > RoundKey_ce0;
    sc_out< sc_logic > RoundKey_we0;
    sc_out< sc_lv<8> > RoundKey_d0;
    sc_in< sc_lv<8> > RoundKey_q0;
    sc_out< sc_lv<8> > RoundKey_address1;
    sc_out< sc_logic > RoundKey_ce1;
    sc_out< sc_logic > RoundKey_we1;
    sc_out< sc_lv<8> > RoundKey_d1;
    sc_in< sc_lv<8> > RoundKey_q1;
    sc_out< sc_lv<5> > Key_address0;
    sc_out< sc_logic > Key_ce0;
    sc_in< sc_lv<8> > Key_q0;
    sc_out< sc_lv<5> > Key_address1;
    sc_out< sc_logic > Key_ce1;
    sc_in< sc_lv<8> > Key_q1;


    // Module declarations
    KeyExpansion(sc_module_name name);
    SC_HAS_PROCESS(KeyExpansion);

    ~KeyExpansion();

    sc_trace_file* mVcdFile;

    KeyExpansion_sbox* sbox_U;
    KeyExpansion_Rcon* Rcon_U;
    sc_signal< sc_lv<10> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<8> > sbox_address0;
    sc_signal< sc_logic > sbox_ce0;
    sc_signal< sc_lv<8> > sbox_q0;
    sc_signal< sc_lv<8> > sbox_address1;
    sc_signal< sc_logic > sbox_ce1;
    sc_signal< sc_lv<8> > sbox_q1;
    sc_signal< sc_lv<8> > sbox_address2;
    sc_signal< sc_logic > sbox_ce2;
    sc_signal< sc_lv<8> > sbox_q2;
    sc_signal< sc_lv<8> > sbox_address3;
    sc_signal< sc_logic > sbox_ce3;
    sc_signal< sc_lv<8> > sbox_q3;
    sc_signal< sc_lv<4> > Rcon_address0;
    sc_signal< sc_logic > Rcon_ce0;
    sc_signal< sc_lv<8> > Rcon_q0;
    sc_signal< sc_lv<8> > reg_374;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<4> > i_fu_385_p2;
    sc_signal< sc_lv<4> > i_reg_729;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<5> > shl_ln_fu_395_p3;
    sc_signal< sc_lv<5> > shl_ln_reg_734;
    sc_signal< sc_lv<1> > icmp_ln158_fu_379_p2;
    sc_signal< sc_lv<64> > zext_ln160_fu_403_p1;
    sc_signal< sc_lv<64> > zext_ln160_reg_740;
    sc_signal< sc_lv<64> > zext_ln161_fu_414_p1;
    sc_signal< sc_lv<64> > zext_ln161_reg_750;
    sc_signal< sc_lv<64> > zext_ln162_fu_424_p1;
    sc_signal< sc_lv<64> > zext_ln162_reg_760;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<64> > zext_ln163_fu_434_p1;
    sc_signal< sc_lv<64> > zext_ln163_reg_770;
    sc_signal< sc_lv<8> > j_fu_445_p3;
    sc_signal< sc_lv<8> > j_reg_783;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln167_fu_439_p2;
    sc_signal< sc_lv<1> > icmp_ln178_fu_479_p2;
    sc_signal< sc_lv<1> > icmp_ln178_reg_807;
    sc_signal< sc_lv<3> > lshr_ln_reg_815;
    sc_signal< sc_lv<1> > icmp_ln206_fu_495_p2;
    sc_signal< sc_lv<1> > icmp_ln206_reg_820;
    sc_signal< sc_lv<6> > i_7_fu_501_p2;
    sc_signal< sc_lv<6> > i_7_reg_828;
    sc_signal< sc_lv<8> > tempa_1_reg_833;
    sc_signal< sc_lv<8> > tempa_3_reg_858;
    sc_signal< sc_lv<8> > tempa_0_2_fu_557_p3;
    sc_signal< sc_lv<8> > tempa_0_2_reg_878;
    sc_signal< sc_lv<8> > tempa_3_2_fu_589_p3;
    sc_signal< sc_lv<8> > tempa_3_2_reg_898;
    sc_signal< sc_lv<8> > tempa_2_2_fu_595_p3;
    sc_signal< sc_lv<8> > tempa_2_2_reg_903;
    sc_signal< sc_lv<8> > tempa_1_2_fu_602_p3;
    sc_signal< sc_lv<8> > tempa_1_2_reg_908;
    sc_signal< sc_lv<8> > xor_ln218_fu_629_p2;
    sc_signal< sc_lv<8> > xor_ln218_reg_928;
    sc_signal< sc_lv<8> > xor_ln220_fu_694_p2;
    sc_signal< sc_lv<8> > xor_ln220_reg_943;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<8> > xor_ln221_fu_700_p2;
    sc_signal< sc_lv<8> > xor_ln221_reg_948;
    sc_signal< sc_lv<4> > i_0_reg_352;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<6> > i_1_reg_363;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<64> > zext_ln171_fu_459_p1;
    sc_signal< sc_lv<64> > zext_ln172_fu_470_p1;
    sc_signal< sc_lv<64> > zext_ln173_fu_512_p1;
    sc_signal< sc_lv<64> > zext_ln174_fu_522_p1;
    sc_signal< sc_lv<64> > zext_ln197_fu_527_p1;
    sc_signal< sc_lv<64> > zext_ln203_fu_532_p1;
    sc_signal< sc_lv<64> > zext_ln198_fu_536_p1;
    sc_signal< sc_lv<64> > zext_ln199_fu_541_p1;
    sc_signal< sc_lv<64> > zext_ln200_fu_546_p1;
    sc_signal< sc_lv<64> > zext_ln210_fu_564_p1;
    sc_signal< sc_lv<64> > zext_ln218_fu_574_p1;
    sc_signal< sc_lv<64> > zext_ln219_fu_584_p1;
    sc_signal< sc_lv<64> > zext_ln211_fu_608_p1;
    sc_signal< sc_lv<64> > zext_ln212_fu_613_p1;
    sc_signal< sc_lv<64> > zext_ln213_fu_618_p1;
    sc_signal< sc_lv<64> > zext_ln220_fu_640_p1;
    sc_signal< sc_lv<64> > zext_ln221_fu_650_p1;
    sc_signal< sc_lv<64> > zext_ln218_1_fu_673_p1;
    sc_signal< sc_lv<64> > zext_ln219_1_fu_689_p1;
    sc_signal< sc_lv<64> > zext_ln220_1_fu_711_p1;
    sc_signal< sc_lv<64> > zext_ln221_1_fu_721_p1;
    sc_signal< sc_lv<8> > xor_ln219_fu_677_p2;
    sc_signal< sc_lv<3> > trunc_ln160_fu_391_p1;
    sc_signal< sc_lv<5> > or_ln161_fu_408_p2;
    sc_signal< sc_lv<5> > or_ln162_fu_419_p2;
    sc_signal< sc_lv<5> > or_ln163_fu_429_p2;
    sc_signal< sc_lv<8> > add_ln171_fu_453_p2;
    sc_signal< sc_lv<8> > add_ln172_fu_464_p2;
    sc_signal< sc_lv<3> > trunc_ln167_fu_475_p1;
    sc_signal< sc_lv<8> > add_ln173_fu_507_p2;
    sc_signal< sc_lv<8> > add_ln174_fu_517_p2;
    sc_signal< sc_lv<8> > tempa_0_fu_551_p2;
    sc_signal< sc_lv<8> > add_ln218_fu_569_p2;
    sc_signal< sc_lv<8> > add_ln219_fu_579_p2;
    sc_signal< sc_lv<8> > tempa_0_4_fu_623_p3;
    sc_signal< sc_lv<8> > add_ln220_fu_635_p2;
    sc_signal< sc_lv<8> > add_ln221_fu_645_p2;
    sc_signal< sc_lv<8> > tempa_1_4_fu_667_p3;
    sc_signal< sc_lv<8> > or_ln219_fu_684_p2;
    sc_signal< sc_lv<8> > tempa_2_4_fu_661_p3;
    sc_signal< sc_lv<8> > tempa_3_4_fu_655_p3;
    sc_signal< sc_lv<8> > or_ln220_fu_706_p2;
    sc_signal< sc_lv<8> > or_ln221_fu_716_p2;
    sc_signal< sc_lv<10> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<10> ap_ST_fsm_state1;
    static const sc_lv<10> ap_ST_fsm_state2;
    static const sc_lv<10> ap_ST_fsm_state3;
    static const sc_lv<10> ap_ST_fsm_state4;
    static const sc_lv<10> ap_ST_fsm_state5;
    static const sc_lv<10> ap_ST_fsm_state6;
    static const sc_lv<10> ap_ST_fsm_state7;
    static const sc_lv<10> ap_ST_fsm_state8;
    static const sc_lv<10> ap_ST_fsm_state9;
    static const sc_lv<10> ap_ST_fsm_state10;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<6> ap_const_lv6_8;
    static const sc_lv<4> ap_const_lv4_8;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<5> ap_const_lv5_2;
    static const sc_lv<5> ap_const_lv5_3;
    static const sc_lv<6> ap_const_lv6_3C;
    static const sc_lv<8> ap_const_lv8_FC;
    static const sc_lv<8> ap_const_lv8_FD;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<8> ap_const_lv8_FE;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_E0;
    static const sc_lv<8> ap_const_lv8_E1;
    static const sc_lv<8> ap_const_lv8_E2;
    static const sc_lv<8> ap_const_lv8_E3;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<8> ap_const_lv8_2;
    static const sc_lv<8> ap_const_lv8_3;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_Key_address0();
    void thread_Key_address1();
    void thread_Key_ce0();
    void thread_Key_ce1();
    void thread_Rcon_address0();
    void thread_Rcon_ce0();
    void thread_RoundKey_address0();
    void thread_RoundKey_address1();
    void thread_RoundKey_ce0();
    void thread_RoundKey_ce1();
    void thread_RoundKey_d0();
    void thread_RoundKey_d1();
    void thread_RoundKey_we0();
    void thread_RoundKey_we1();
    void thread_add_ln171_fu_453_p2();
    void thread_add_ln172_fu_464_p2();
    void thread_add_ln173_fu_507_p2();
    void thread_add_ln174_fu_517_p2();
    void thread_add_ln218_fu_569_p2();
    void thread_add_ln219_fu_579_p2();
    void thread_add_ln220_fu_635_p2();
    void thread_add_ln221_fu_645_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_i_7_fu_501_p2();
    void thread_i_fu_385_p2();
    void thread_icmp_ln158_fu_379_p2();
    void thread_icmp_ln167_fu_439_p2();
    void thread_icmp_ln178_fu_479_p2();
    void thread_icmp_ln206_fu_495_p2();
    void thread_j_fu_445_p3();
    void thread_or_ln161_fu_408_p2();
    void thread_or_ln162_fu_419_p2();
    void thread_or_ln163_fu_429_p2();
    void thread_or_ln219_fu_684_p2();
    void thread_or_ln220_fu_706_p2();
    void thread_or_ln221_fu_716_p2();
    void thread_sbox_address0();
    void thread_sbox_address1();
    void thread_sbox_address2();
    void thread_sbox_address3();
    void thread_sbox_ce0();
    void thread_sbox_ce1();
    void thread_sbox_ce2();
    void thread_sbox_ce3();
    void thread_shl_ln_fu_395_p3();
    void thread_tempa_0_2_fu_557_p3();
    void thread_tempa_0_4_fu_623_p3();
    void thread_tempa_0_fu_551_p2();
    void thread_tempa_1_2_fu_602_p3();
    void thread_tempa_1_4_fu_667_p3();
    void thread_tempa_2_2_fu_595_p3();
    void thread_tempa_2_4_fu_661_p3();
    void thread_tempa_3_2_fu_589_p3();
    void thread_tempa_3_4_fu_655_p3();
    void thread_trunc_ln160_fu_391_p1();
    void thread_trunc_ln167_fu_475_p1();
    void thread_xor_ln218_fu_629_p2();
    void thread_xor_ln219_fu_677_p2();
    void thread_xor_ln220_fu_694_p2();
    void thread_xor_ln221_fu_700_p2();
    void thread_zext_ln160_fu_403_p1();
    void thread_zext_ln161_fu_414_p1();
    void thread_zext_ln162_fu_424_p1();
    void thread_zext_ln163_fu_434_p1();
    void thread_zext_ln171_fu_459_p1();
    void thread_zext_ln172_fu_470_p1();
    void thread_zext_ln173_fu_512_p1();
    void thread_zext_ln174_fu_522_p1();
    void thread_zext_ln197_fu_527_p1();
    void thread_zext_ln198_fu_536_p1();
    void thread_zext_ln199_fu_541_p1();
    void thread_zext_ln200_fu_546_p1();
    void thread_zext_ln203_fu_532_p1();
    void thread_zext_ln210_fu_564_p1();
    void thread_zext_ln211_fu_608_p1();
    void thread_zext_ln212_fu_613_p1();
    void thread_zext_ln213_fu_618_p1();
    void thread_zext_ln218_1_fu_673_p1();
    void thread_zext_ln218_fu_574_p1();
    void thread_zext_ln219_1_fu_689_p1();
    void thread_zext_ln219_fu_584_p1();
    void thread_zext_ln220_1_fu_711_p1();
    void thread_zext_ln220_fu_640_p1();
    void thread_zext_ln221_1_fu_721_p1();
    void thread_zext_ln221_fu_650_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif

// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "picnic_keygen.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic picnic_keygen::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic picnic_keygen::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<16> picnic_keygen::ap_ST_fsm_state1 = "1";
const sc_lv<16> picnic_keygen::ap_ST_fsm_state2 = "10";
const sc_lv<16> picnic_keygen::ap_ST_fsm_state3 = "100";
const sc_lv<16> picnic_keygen::ap_ST_fsm_state4 = "1000";
const sc_lv<16> picnic_keygen::ap_ST_fsm_state5 = "10000";
const sc_lv<16> picnic_keygen::ap_ST_fsm_state6 = "100000";
const sc_lv<16> picnic_keygen::ap_ST_fsm_state7 = "1000000";
const sc_lv<16> picnic_keygen::ap_ST_fsm_state8 = "10000000";
const sc_lv<16> picnic_keygen::ap_ST_fsm_state9 = "100000000";
const sc_lv<16> picnic_keygen::ap_ST_fsm_state10 = "1000000000";
const sc_lv<16> picnic_keygen::ap_ST_fsm_state11 = "10000000000";
const sc_lv<16> picnic_keygen::ap_ST_fsm_state12 = "100000000000";
const sc_lv<16> picnic_keygen::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<16> picnic_keygen::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<16> picnic_keygen::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<16> picnic_keygen::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<32> picnic_keygen::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> picnic_keygen::ap_const_lv32_4 = "100";
const sc_lv<32> picnic_keygen::ap_const_lv32_5 = "101";
const sc_lv<32> picnic_keygen::ap_const_lv32_6 = "110";
const sc_lv<32> picnic_keygen::ap_const_lv32_7 = "111";
const sc_lv<1> picnic_keygen::ap_const_lv1_0 = "0";
const sc_lv<32> picnic_keygen::ap_const_lv32_8 = "1000";
const sc_lv<32> picnic_keygen::ap_const_lv32_B = "1011";
const sc_lv<32> picnic_keygen::ap_const_lv32_D = "1101";
const sc_lv<3> picnic_keygen::ap_const_lv3_0 = "000";
const sc_lv<32> picnic_keygen::ap_const_lv32_3 = "11";
const sc_lv<1> picnic_keygen::ap_const_lv1_1 = "1";
const sc_lv<32> picnic_keygen::ap_const_lv32_9 = "1001";
const sc_lv<6> picnic_keygen::ap_const_lv6_0 = "000000";
const sc_lv<32> picnic_keygen::ap_const_lv32_A = "1010";
const sc_lv<32> picnic_keygen::ap_const_lv32_C = "1100";
const sc_lv<32> picnic_keygen::ap_const_lv32_E = "1110";
const sc_lv<32> picnic_keygen::ap_const_lv32_2 = "10";
const sc_lv<32> picnic_keygen::ap_const_lv32_1 = "1";
const sc_lv<4> picnic_keygen::ap_const_lv4_F = "1111";
const sc_lv<4> picnic_keygen::ap_const_lv4_E = "1110";
const sc_lv<4> picnic_keygen::ap_const_lv4_D = "1101";
const sc_lv<4> picnic_keygen::ap_const_lv4_C = "1100";
const sc_lv<4> picnic_keygen::ap_const_lv4_B = "1011";
const sc_lv<4> picnic_keygen::ap_const_lv4_A = "1010";
const sc_lv<4> picnic_keygen::ap_const_lv4_0 = "0000";
const sc_lv<3> picnic_keygen::ap_const_lv3_1 = "1";
const sc_lv<3> picnic_keygen::ap_const_lv3_7 = "111";
const sc_lv<5> picnic_keygen::ap_const_lv5_1 = "1";
const sc_lv<6> picnic_keygen::ap_const_lv6_4 = "100";
const sc_lv<5> picnic_keygen::ap_const_lv5_2 = "10";
const sc_lv<5> picnic_keygen::ap_const_lv5_3 = "11";
const sc_lv<6> picnic_keygen::ap_const_lv6_20 = "100000";
const sc_lv<6> picnic_keygen::ap_const_lv6_1 = "1";
const sc_lv<32> picnic_keygen::ap_const_lv32_1F = "11111";
const sc_lv<32> picnic_keygen::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<32> picnic_keygen::ap_const_lv32_F = "1111";
const bool picnic_keygen::ap_const_boolean_1 = true;

picnic_keygen::picnic_keygen(sc_module_name name) : sc_module(name), mVcdFile(0) {
    temp_U = new picnic_keygen_temp("temp_U");
    temp_U->clk(ap_clk);
    temp_U->reset(ap_rst);
    temp_U->address0(temp_address0);
    temp_U->ce0(temp_ce0);
    temp_U->we0(temp_we0);
    temp_U->d0(temp_d0);
    temp_U->q0(temp_q0);
    temp2_U = new picnic_keygen_temp("temp2_U");
    temp2_U->clk(ap_clk);
    temp2_U->reset(ap_rst);
    temp2_U->address0(temp2_address0);
    temp2_U->ce0(temp2_ce0);
    temp2_U->we0(temp2_we0);
    temp2_U->d0(temp2_d0);
    temp2_U->q0(temp2_q0);
    temp3_U = new picnic_keygen_temp("temp3_U");
    temp3_U->clk(ap_clk);
    temp3_U->reset(ap_rst);
    temp3_U->address0(temp3_address0);
    temp3_U->ce0(temp3_ce0);
    temp3_U->we0(temp3_we0);
    temp3_U->d0(temp3_d0);
    temp3_U->q0(temp3_q0);
    grp_randombytes_fu_454 = new randombytes("grp_randombytes_fu_454");
    grp_randombytes_fu_454->ap_clk(ap_clk);
    grp_randombytes_fu_454->ap_rst(ap_rst);
    grp_randombytes_fu_454->ap_start(grp_randombytes_fu_454_ap_start);
    grp_randombytes_fu_454->ap_done(grp_randombytes_fu_454_ap_done);
    grp_randombytes_fu_454->ap_idle(grp_randombytes_fu_454_ap_idle);
    grp_randombytes_fu_454->ap_ready(grp_randombytes_fu_454_ap_ready);
    grp_randombytes_fu_454->x_address0(grp_randombytes_fu_454_x_address0);
    grp_randombytes_fu_454->x_ce0(grp_randombytes_fu_454_x_ce0);
    grp_randombytes_fu_454->x_we0(grp_randombytes_fu_454_x_we0);
    grp_randombytes_fu_454->x_d0(grp_randombytes_fu_454_x_d0);
    grp_randombytes_fu_454->DRBG_ctx_V_address0(grp_randombytes_fu_454_DRBG_ctx_V_address0);
    grp_randombytes_fu_454->DRBG_ctx_V_ce0(grp_randombytes_fu_454_DRBG_ctx_V_ce0);
    grp_randombytes_fu_454->DRBG_ctx_V_we0(grp_randombytes_fu_454_DRBG_ctx_V_we0);
    grp_randombytes_fu_454->DRBG_ctx_V_d0(grp_randombytes_fu_454_DRBG_ctx_V_d0);
    grp_randombytes_fu_454->DRBG_ctx_V_q0(DRBG_ctx_V_q0);
    grp_randombytes_fu_454->DRBG_ctx_V_address1(grp_randombytes_fu_454_DRBG_ctx_V_address1);
    grp_randombytes_fu_454->DRBG_ctx_V_ce1(grp_randombytes_fu_454_DRBG_ctx_V_ce1);
    grp_randombytes_fu_454->DRBG_ctx_V_q1(DRBG_ctx_V_q1);
    grp_randombytes_fu_454->DRBG_ctx_Key_address0(grp_randombytes_fu_454_DRBG_ctx_Key_address0);
    grp_randombytes_fu_454->DRBG_ctx_Key_ce0(grp_randombytes_fu_454_DRBG_ctx_Key_ce0);
    grp_randombytes_fu_454->DRBG_ctx_Key_we0(grp_randombytes_fu_454_DRBG_ctx_Key_we0);
    grp_randombytes_fu_454->DRBG_ctx_Key_d0(grp_randombytes_fu_454_DRBG_ctx_Key_d0);
    grp_randombytes_fu_454->DRBG_ctx_Key_q0(DRBG_ctx_Key_q0);
    grp_randombytes_fu_454->DRBG_ctx_Key_address1(grp_randombytes_fu_454_DRBG_ctx_Key_address1);
    grp_randombytes_fu_454->DRBG_ctx_Key_ce1(grp_randombytes_fu_454_DRBG_ctx_Key_ce1);
    grp_randombytes_fu_454->DRBG_ctx_Key_q1(DRBG_ctx_Key_q1);
    grp_randombytes_fu_454->DRBG_ctx_reseed_counter_i(DRBG_ctx_reseed_counter_i);
    grp_randombytes_fu_454->DRBG_ctx_reseed_counter_o(grp_randombytes_fu_454_DRBG_ctx_reseed_counter_o);
    grp_randombytes_fu_454->DRBG_ctx_reseed_counter_o_ap_vld(grp_randombytes_fu_454_DRBG_ctx_reseed_counter_o_ap_vld);
    grp_LowMCEnc_fu_471 = new LowMCEnc("grp_LowMCEnc_fu_471");
    grp_LowMCEnc_fu_471->ap_clk(ap_clk);
    grp_LowMCEnc_fu_471->ap_rst(ap_rst);
    grp_LowMCEnc_fu_471->ap_start(grp_LowMCEnc_fu_471_ap_start);
    grp_LowMCEnc_fu_471->ap_done(grp_LowMCEnc_fu_471_ap_done);
    grp_LowMCEnc_fu_471->ap_idle(grp_LowMCEnc_fu_471_ap_idle);
    grp_LowMCEnc_fu_471->ap_ready(grp_LowMCEnc_fu_471_ap_ready);
    grp_LowMCEnc_fu_471->plaintext_address0(grp_LowMCEnc_fu_471_plaintext_address0);
    grp_LowMCEnc_fu_471->plaintext_ce0(grp_LowMCEnc_fu_471_plaintext_ce0);
    grp_LowMCEnc_fu_471->plaintext_q0(temp2_q0);
    grp_LowMCEnc_fu_471->output_r_address0(grp_LowMCEnc_fu_471_output_r_address0);
    grp_LowMCEnc_fu_471->output_r_ce0(grp_LowMCEnc_fu_471_output_r_ce0);
    grp_LowMCEnc_fu_471->output_r_we0(grp_LowMCEnc_fu_471_output_r_we0);
    grp_LowMCEnc_fu_471->output_r_d0(grp_LowMCEnc_fu_471_output_r_d0);
    grp_LowMCEnc_fu_471->output_r_q0(temp_q0);
    grp_LowMCEnc_fu_471->key_address0(grp_LowMCEnc_fu_471_key_address0);
    grp_LowMCEnc_fu_471->key_ce0(grp_LowMCEnc_fu_471_key_ce0);
    grp_LowMCEnc_fu_471->key_q0(temp3_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_DRBG_ctx_Key_address0);
    sensitive << ( grp_randombytes_fu_454_DRBG_ctx_Key_address0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_DRBG_ctx_Key_address1);
    sensitive << ( grp_randombytes_fu_454_DRBG_ctx_Key_address1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_DRBG_ctx_Key_ce0);
    sensitive << ( grp_randombytes_fu_454_DRBG_ctx_Key_ce0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_DRBG_ctx_Key_ce1);
    sensitive << ( grp_randombytes_fu_454_DRBG_ctx_Key_ce1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_DRBG_ctx_Key_d0);
    sensitive << ( grp_randombytes_fu_454_DRBG_ctx_Key_d0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_DRBG_ctx_Key_we0);
    sensitive << ( grp_randombytes_fu_454_DRBG_ctx_Key_we0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_DRBG_ctx_V_address0);
    sensitive << ( grp_randombytes_fu_454_DRBG_ctx_V_address0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_DRBG_ctx_V_address1);
    sensitive << ( grp_randombytes_fu_454_DRBG_ctx_V_address1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_DRBG_ctx_V_ce0);
    sensitive << ( grp_randombytes_fu_454_DRBG_ctx_V_ce0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_DRBG_ctx_V_ce1);
    sensitive << ( grp_randombytes_fu_454_DRBG_ctx_V_ce1 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_DRBG_ctx_V_d0);
    sensitive << ( grp_randombytes_fu_454_DRBG_ctx_V_d0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_DRBG_ctx_V_we0);
    sensitive << ( grp_randombytes_fu_454_DRBG_ctx_V_we0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_DRBG_ctx_reseed_counter_o);
    sensitive << ( DRBG_ctx_reseed_counter_i );
    sensitive << ( grp_randombytes_fu_454_DRBG_ctx_reseed_counter_o );
    sensitive << ( grp_randombytes_fu_454_DRBG_ctx_reseed_counter_o_ap_vld );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_DRBG_ctx_reseed_counter_o_ap_vld);
    sensitive << ( grp_randombytes_fu_454_DRBG_ctx_reseed_counter_o_ap_vld );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_add_ln210_1_fu_579_p2);
    sensitive << ( phi_ln210_1_reg_385 );

    SC_METHOD(thread_add_ln210_2_fu_596_p2);
    sensitive << ( phi_ln210_2_reg_396 );

    SC_METHOD(thread_add_ln210_fu_562_p2);
    sensitive << ( phi_ln210_reg_374 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state13);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state15);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state16);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state16 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( select_ln166_fu_794_p3 );
    sensitive << ( ap_return_0_preg );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( parameters );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_return_1_preg );

    SC_METHOD(thread_ap_return_2);
    sensitive << ( parameters );
    sensitive << ( ap_CS_fsm_state16 );
    sensitive << ( ap_return_2_preg );

    SC_METHOD(thread_empty_19_fu_490_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( parameters );

    SC_METHOD(thread_empty_20_fu_496_p2);
    sensitive << ( empty_19_fu_490_p2 );
    sensitive << ( empty_fu_484_p2 );

    SC_METHOD(thread_empty_21_fu_502_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( parameters );

    SC_METHOD(thread_empty_22_fu_508_p2);
    sensitive << ( empty_21_fu_502_p2 );
    sensitive << ( empty_20_fu_496_p2 );

    SC_METHOD(thread_empty_23_fu_514_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( parameters );

    SC_METHOD(thread_empty_24_fu_520_p2);
    sensitive << ( empty_23_fu_514_p2 );
    sensitive << ( empty_22_fu_508_p2 );

    SC_METHOD(thread_empty_25_fu_526_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( parameters );

    SC_METHOD(thread_empty_26_fu_532_p2);
    sensitive << ( empty_25_fu_526_p2 );
    sensitive << ( empty_24_fu_520_p2 );

    SC_METHOD(thread_empty_27_fu_538_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( parameters );

    SC_METHOD(thread_empty_28_fu_544_p2);
    sensitive << ( empty_27_fu_538_p2 );
    sensitive << ( empty_26_fu_532_p2 );

    SC_METHOD(thread_empty_29_fu_550_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( parameters );

    SC_METHOD(thread_empty_30_fu_556_p2);
    sensitive << ( empty_29_fu_550_p2 );
    sensitive << ( empty_28_fu_544_p2 );

    SC_METHOD(thread_empty_fu_484_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( parameters );

    SC_METHOD(thread_grp_LowMCEnc_fu_471_ap_start);
    sensitive << ( grp_LowMCEnc_fu_471_ap_start_reg );

    SC_METHOD(thread_grp_randombytes_fu_454_ap_start);
    sensitive << ( grp_randombytes_fu_454_ap_start_reg );

    SC_METHOD(thread_icmp_ln210_1_fu_590_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( phi_ln210_1_reg_385 );

    SC_METHOD(thread_icmp_ln210_2_fu_607_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( phi_ln210_2_reg_396 );

    SC_METHOD(thread_icmp_ln210_fu_573_p2);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( phi_ln210_reg_374 );

    SC_METHOD(thread_icmp_ln221_fu_724_p2);
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( loop_1_reg_418 );

    SC_METHOD(thread_icmp_ln230_fu_776_p2);
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( loop_2_reg_430 );

    SC_METHOD(thread_loop_3_fu_730_p2);
    sensitive << ( loop_1_reg_418 );

    SC_METHOD(thread_loop_4_fu_782_p2);
    sensitive << ( loop_2_reg_430 );

    SC_METHOD(thread_loop_fu_655_p2);
    sensitive << ( loop_0_reg_407 );

    SC_METHOD(thread_lshr_ln_fu_761_p4);
    sensitive << ( temp_q0 );

    SC_METHOD(thread_or_ln212_1_fu_661_p2);
    sensitive << ( trunc_ln211_reg_859 );

    SC_METHOD(thread_or_ln212_2_fu_673_p2);
    sensitive << ( trunc_ln211_reg_859 );

    SC_METHOD(thread_or_ln212_5_fu_685_p5);
    sensitive << ( pk_ciphertext_q0 );
    sensitive << ( pk_ciphertext_q1 );
    sensitive << ( pk_ciphertext_load_reg_900 );
    sensitive << ( pk_ciphertext_load_1_reg_905 );

    SC_METHOD(thread_or_ln212_fu_632_p2);
    sensitive << ( trunc_ln211_fu_628_p1 );

    SC_METHOD(thread_or_ln213_2_fu_702_p5);
    sensitive << ( pk_plaintext_q0 );
    sensitive << ( pk_plaintext_q1 );
    sensitive << ( pk_plaintext_load_reg_920 );
    sensitive << ( pk_plaintext_load_1_reg_925 );

    SC_METHOD(thread_or_ln214_2_fu_713_p5);
    sensitive << ( sk_data_q0 );
    sensitive << ( sk_data_q1 );
    sensitive << ( sk_data_load_reg_940 );
    sensitive << ( sk_data_load_1_reg_945 );

    SC_METHOD(thread_pk_ciphertext_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( zext_ln212_fu_621_p1 );
    sensitive << ( zext_ln212_2_fu_666_p1 );
    sensitive << ( zext_ln222_1_fu_756_p1 );

    SC_METHOD(thread_pk_ciphertext_address1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( zext_ln231_fu_788_p1 );
    sensitive << ( zext_ln212_1_fu_638_p1 );
    sensitive << ( zext_ln212_3_fu_678_p1 );

    SC_METHOD(thread_pk_ciphertext_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_pk_ciphertext_ce1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_pk_ciphertext_d0);
    sensitive << ( temp_q0 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_pk_ciphertext_we0);
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_pk_plaintext_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( zext_ln231_fu_788_p1 );
    sensitive << ( grp_randombytes_fu_454_x_address0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln212_fu_621_p1 );
    sensitive << ( zext_ln212_2_fu_666_p1 );

    SC_METHOD(thread_pk_plaintext_address1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln212_1_fu_638_p1 );
    sensitive << ( zext_ln212_3_fu_678_p1 );

    SC_METHOD(thread_pk_plaintext_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( grp_randombytes_fu_454_x_ce0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_pk_plaintext_ce1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_pk_plaintext_d0);
    sensitive << ( grp_randombytes_fu_454_x_d0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_pk_plaintext_we0);
    sensitive << ( grp_randombytes_fu_454_x_we0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_select_ln166_fu_794_p3);
    sensitive << ( p_0_reg_441 );

    SC_METHOD(thread_sk_data_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( grp_randombytes_fu_454_x_address0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln212_fu_621_p1 );
    sensitive << ( zext_ln212_2_fu_666_p1 );

    SC_METHOD(thread_sk_data_address1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln212_1_fu_638_p1 );
    sensitive << ( zext_ln212_3_fu_678_p1 );

    SC_METHOD(thread_sk_data_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( grp_randombytes_fu_454_x_ce0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sk_data_ce1);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_sk_data_d0);
    sensitive << ( grp_randombytes_fu_454_x_d0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sk_data_we0);
    sensitive << ( grp_randombytes_fu_454_x_we0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_sk_pk_ciphertext_address0);
    sensitive << ( zext_ln231_reg_981 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_sk_pk_ciphertext_ce0);
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_sk_pk_ciphertext_d0);
    sensitive << ( pk_ciphertext_q1 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_sk_pk_ciphertext_we0);
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_sk_pk_plaintext_address0);
    sensitive << ( zext_ln231_reg_981 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_sk_pk_plaintext_ce0);
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_sk_pk_plaintext_d0);
    sensitive << ( pk_plaintext_q0 );
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_sk_pk_plaintext_we0);
    sensitive << ( ap_CS_fsm_state15 );

    SC_METHOD(thread_temp2_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_LowMCEnc_fu_471_plaintext_address0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( zext_ln210_1_fu_585_p1 );
    sensitive << ( zext_ln212_4_fu_696_p1 );

    SC_METHOD(thread_temp2_ce0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( grp_LowMCEnc_fu_471_plaintext_ce0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_temp2_d0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( or_ln213_2_fu_702_p5 );

    SC_METHOD(thread_temp2_we0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_temp3_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_LowMCEnc_fu_471_key_address0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( zext_ln210_2_fu_602_p1 );
    sensitive << ( zext_ln212_4_fu_696_p1 );

    SC_METHOD(thread_temp3_ce0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( grp_LowMCEnc_fu_471_key_ce0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_temp3_d0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( or_ln214_2_fu_713_p5 );

    SC_METHOD(thread_temp3_we0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_temp_address0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( temp_addr_2_reg_968 );
    sensitive << ( grp_LowMCEnc_fu_471_output_r_address0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( zext_ln210_fu_568_p1 );
    sensitive << ( zext_ln212_4_fu_696_p1 );
    sensitive << ( zext_ln222_fu_746_p1 );

    SC_METHOD(thread_temp_ce0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( grp_LowMCEnc_fu_471_output_r_ce0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_temp_d0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_LowMCEnc_fu_471_output_r_d0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );
    sensitive << ( or_ln212_5_fu_685_p5 );
    sensitive << ( zext_ln223_fu_771_p1 );

    SC_METHOD(thread_temp_we0);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( grp_LowMCEnc_fu_471_output_r_we0 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state13 );

    SC_METHOD(thread_tmp_fu_613_p3);
    sensitive << ( loop_0_reg_407 );

    SC_METHOD(thread_trunc_ln211_fu_628_p1);
    sensitive << ( loop_0_reg_407 );

    SC_METHOD(thread_trunc_ln222_2_fu_736_p4);
    sensitive << ( loop_1_reg_418 );

    SC_METHOD(thread_zext_ln210_1_fu_585_p1);
    sensitive << ( phi_ln210_1_reg_385 );

    SC_METHOD(thread_zext_ln210_2_fu_602_p1);
    sensitive << ( phi_ln210_2_reg_396 );

    SC_METHOD(thread_zext_ln210_fu_568_p1);
    sensitive << ( phi_ln210_reg_374 );

    SC_METHOD(thread_zext_ln212_1_fu_638_p1);
    sensitive << ( or_ln212_fu_632_p2 );

    SC_METHOD(thread_zext_ln212_2_fu_666_p1);
    sensitive << ( or_ln212_1_fu_661_p2 );

    SC_METHOD(thread_zext_ln212_3_fu_678_p1);
    sensitive << ( or_ln212_2_fu_673_p2 );

    SC_METHOD(thread_zext_ln212_4_fu_696_p1);
    sensitive << ( trunc_ln212_1_reg_870 );

    SC_METHOD(thread_zext_ln212_fu_621_p1);
    sensitive << ( loop_0_reg_407 );

    SC_METHOD(thread_zext_ln222_1_fu_756_p1);
    sensitive << ( loop_1_reg_418 );

    SC_METHOD(thread_zext_ln222_fu_746_p1);
    sensitive << ( trunc_ln222_2_fu_736_p4 );

    SC_METHOD(thread_zext_ln223_fu_771_p1);
    sensitive << ( lshr_ln_fu_761_p4 );

    SC_METHOD(thread_zext_ln231_fu_788_p1);
    sensitive << ( loop_2_reg_430 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( tmp_fu_613_p3 );
    sensitive << ( ap_CS_fsm_state12 );
    sensitive << ( icmp_ln221_fu_724_p2 );
    sensitive << ( ap_CS_fsm_state14 );
    sensitive << ( icmp_ln230_fu_776_p2 );
    sensitive << ( grp_randombytes_fu_454_ap_done );
    sensitive << ( grp_LowMCEnc_fu_471_ap_done );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln210_fu_573_p2 );
    sensitive << ( icmp_ln210_1_fu_590_p2 );
    sensitive << ( icmp_ln210_2_fu_607_p2 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( empty_30_fu_556_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    ap_CS_fsm = "0000000000000001";
    grp_randombytes_fu_454_ap_start_reg = SC_LOGIC_0;
    grp_LowMCEnc_fu_471_ap_start_reg = SC_LOGIC_0;
    ap_return_0_preg = "00000000000000000000000000000000";
    ap_return_1_preg = "0000";
    ap_return_2_preg = "0000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "picnic_keygen_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, parameters, "(port)parameters");
    sc_trace(mVcdFile, pk_plaintext_address0, "(port)pk_plaintext_address0");
    sc_trace(mVcdFile, pk_plaintext_ce0, "(port)pk_plaintext_ce0");
    sc_trace(mVcdFile, pk_plaintext_we0, "(port)pk_plaintext_we0");
    sc_trace(mVcdFile, pk_plaintext_d0, "(port)pk_plaintext_d0");
    sc_trace(mVcdFile, pk_plaintext_q0, "(port)pk_plaintext_q0");
    sc_trace(mVcdFile, pk_plaintext_address1, "(port)pk_plaintext_address1");
    sc_trace(mVcdFile, pk_plaintext_ce1, "(port)pk_plaintext_ce1");
    sc_trace(mVcdFile, pk_plaintext_q1, "(port)pk_plaintext_q1");
    sc_trace(mVcdFile, pk_ciphertext_address0, "(port)pk_ciphertext_address0");
    sc_trace(mVcdFile, pk_ciphertext_ce0, "(port)pk_ciphertext_ce0");
    sc_trace(mVcdFile, pk_ciphertext_we0, "(port)pk_ciphertext_we0");
    sc_trace(mVcdFile, pk_ciphertext_d0, "(port)pk_ciphertext_d0");
    sc_trace(mVcdFile, pk_ciphertext_q0, "(port)pk_ciphertext_q0");
    sc_trace(mVcdFile, pk_ciphertext_address1, "(port)pk_ciphertext_address1");
    sc_trace(mVcdFile, pk_ciphertext_ce1, "(port)pk_ciphertext_ce1");
    sc_trace(mVcdFile, pk_ciphertext_q1, "(port)pk_ciphertext_q1");
    sc_trace(mVcdFile, sk_data_address0, "(port)sk_data_address0");
    sc_trace(mVcdFile, sk_data_ce0, "(port)sk_data_ce0");
    sc_trace(mVcdFile, sk_data_we0, "(port)sk_data_we0");
    sc_trace(mVcdFile, sk_data_d0, "(port)sk_data_d0");
    sc_trace(mVcdFile, sk_data_q0, "(port)sk_data_q0");
    sc_trace(mVcdFile, sk_data_address1, "(port)sk_data_address1");
    sc_trace(mVcdFile, sk_data_ce1, "(port)sk_data_ce1");
    sc_trace(mVcdFile, sk_data_q1, "(port)sk_data_q1");
    sc_trace(mVcdFile, sk_pk_plaintext_address0, "(port)sk_pk_plaintext_address0");
    sc_trace(mVcdFile, sk_pk_plaintext_ce0, "(port)sk_pk_plaintext_ce0");
    sc_trace(mVcdFile, sk_pk_plaintext_we0, "(port)sk_pk_plaintext_we0");
    sc_trace(mVcdFile, sk_pk_plaintext_d0, "(port)sk_pk_plaintext_d0");
    sc_trace(mVcdFile, sk_pk_ciphertext_address0, "(port)sk_pk_ciphertext_address0");
    sc_trace(mVcdFile, sk_pk_ciphertext_ce0, "(port)sk_pk_ciphertext_ce0");
    sc_trace(mVcdFile, sk_pk_ciphertext_we0, "(port)sk_pk_ciphertext_we0");
    sc_trace(mVcdFile, sk_pk_ciphertext_d0, "(port)sk_pk_ciphertext_d0");
    sc_trace(mVcdFile, DRBG_ctx_V_address0, "(port)DRBG_ctx_V_address0");
    sc_trace(mVcdFile, DRBG_ctx_V_ce0, "(port)DRBG_ctx_V_ce0");
    sc_trace(mVcdFile, DRBG_ctx_V_we0, "(port)DRBG_ctx_V_we0");
    sc_trace(mVcdFile, DRBG_ctx_V_d0, "(port)DRBG_ctx_V_d0");
    sc_trace(mVcdFile, DRBG_ctx_V_q0, "(port)DRBG_ctx_V_q0");
    sc_trace(mVcdFile, DRBG_ctx_V_address1, "(port)DRBG_ctx_V_address1");
    sc_trace(mVcdFile, DRBG_ctx_V_ce1, "(port)DRBG_ctx_V_ce1");
    sc_trace(mVcdFile, DRBG_ctx_V_q1, "(port)DRBG_ctx_V_q1");
    sc_trace(mVcdFile, DRBG_ctx_Key_address0, "(port)DRBG_ctx_Key_address0");
    sc_trace(mVcdFile, DRBG_ctx_Key_ce0, "(port)DRBG_ctx_Key_ce0");
    sc_trace(mVcdFile, DRBG_ctx_Key_we0, "(port)DRBG_ctx_Key_we0");
    sc_trace(mVcdFile, DRBG_ctx_Key_d0, "(port)DRBG_ctx_Key_d0");
    sc_trace(mVcdFile, DRBG_ctx_Key_q0, "(port)DRBG_ctx_Key_q0");
    sc_trace(mVcdFile, DRBG_ctx_Key_address1, "(port)DRBG_ctx_Key_address1");
    sc_trace(mVcdFile, DRBG_ctx_Key_ce1, "(port)DRBG_ctx_Key_ce1");
    sc_trace(mVcdFile, DRBG_ctx_Key_q1, "(port)DRBG_ctx_Key_q1");
    sc_trace(mVcdFile, DRBG_ctx_reseed_counter_i, "(port)DRBG_ctx_reseed_counter_i");
    sc_trace(mVcdFile, DRBG_ctx_reseed_counter_o, "(port)DRBG_ctx_reseed_counter_o");
    sc_trace(mVcdFile, DRBG_ctx_reseed_counter_o_ap_vld, "(port)DRBG_ctx_reseed_counter_o_ap_vld");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
    sc_trace(mVcdFile, ap_return_2, "(port)ap_return_2");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, add_ln210_fu_562_p2, "add_ln210_fu_562_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, add_ln210_1_fu_579_p2, "add_ln210_1_fu_579_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, add_ln210_2_fu_596_p2, "add_ln210_2_fu_596_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, tmp_fu_613_p3, "tmp_fu_613_p3");
    sc_trace(mVcdFile, trunc_ln211_fu_628_p1, "trunc_ln211_fu_628_p1");
    sc_trace(mVcdFile, trunc_ln211_reg_859, "trunc_ln211_reg_859");
    sc_trace(mVcdFile, trunc_ln212_1_reg_870, "trunc_ln212_1_reg_870");
    sc_trace(mVcdFile, loop_fu_655_p2, "loop_fu_655_p2");
    sc_trace(mVcdFile, loop_reg_895, "loop_reg_895");
    sc_trace(mVcdFile, pk_ciphertext_load_reg_900, "pk_ciphertext_load_reg_900");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, pk_ciphertext_load_1_reg_905, "pk_ciphertext_load_1_reg_905");
    sc_trace(mVcdFile, pk_plaintext_load_reg_920, "pk_plaintext_load_reg_920");
    sc_trace(mVcdFile, pk_plaintext_load_1_reg_925, "pk_plaintext_load_1_reg_925");
    sc_trace(mVcdFile, sk_data_load_reg_940, "sk_data_load_reg_940");
    sc_trace(mVcdFile, sk_data_load_1_reg_945, "sk_data_load_1_reg_945");
    sc_trace(mVcdFile, loop_3_fu_730_p2, "loop_3_fu_730_p2");
    sc_trace(mVcdFile, loop_3_reg_963, "loop_3_reg_963");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, temp_addr_2_reg_968, "temp_addr_2_reg_968");
    sc_trace(mVcdFile, icmp_ln221_fu_724_p2, "icmp_ln221_fu_724_p2");
    sc_trace(mVcdFile, loop_4_fu_782_p2, "loop_4_fu_782_p2");
    sc_trace(mVcdFile, loop_4_reg_976, "loop_4_reg_976");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, zext_ln231_fu_788_p1, "zext_ln231_fu_788_p1");
    sc_trace(mVcdFile, zext_ln231_reg_981, "zext_ln231_reg_981");
    sc_trace(mVcdFile, icmp_ln230_fu_776_p2, "icmp_ln230_fu_776_p2");
    sc_trace(mVcdFile, temp_address0, "temp_address0");
    sc_trace(mVcdFile, temp_ce0, "temp_ce0");
    sc_trace(mVcdFile, temp_we0, "temp_we0");
    sc_trace(mVcdFile, temp_d0, "temp_d0");
    sc_trace(mVcdFile, temp_q0, "temp_q0");
    sc_trace(mVcdFile, temp2_address0, "temp2_address0");
    sc_trace(mVcdFile, temp2_ce0, "temp2_ce0");
    sc_trace(mVcdFile, temp2_we0, "temp2_we0");
    sc_trace(mVcdFile, temp2_d0, "temp2_d0");
    sc_trace(mVcdFile, temp2_q0, "temp2_q0");
    sc_trace(mVcdFile, temp3_address0, "temp3_address0");
    sc_trace(mVcdFile, temp3_ce0, "temp3_ce0");
    sc_trace(mVcdFile, temp3_we0, "temp3_we0");
    sc_trace(mVcdFile, temp3_d0, "temp3_d0");
    sc_trace(mVcdFile, temp3_q0, "temp3_q0");
    sc_trace(mVcdFile, grp_randombytes_fu_454_ap_start, "grp_randombytes_fu_454_ap_start");
    sc_trace(mVcdFile, grp_randombytes_fu_454_ap_done, "grp_randombytes_fu_454_ap_done");
    sc_trace(mVcdFile, grp_randombytes_fu_454_ap_idle, "grp_randombytes_fu_454_ap_idle");
    sc_trace(mVcdFile, grp_randombytes_fu_454_ap_ready, "grp_randombytes_fu_454_ap_ready");
    sc_trace(mVcdFile, grp_randombytes_fu_454_x_address0, "grp_randombytes_fu_454_x_address0");
    sc_trace(mVcdFile, grp_randombytes_fu_454_x_ce0, "grp_randombytes_fu_454_x_ce0");
    sc_trace(mVcdFile, grp_randombytes_fu_454_x_we0, "grp_randombytes_fu_454_x_we0");
    sc_trace(mVcdFile, grp_randombytes_fu_454_x_d0, "grp_randombytes_fu_454_x_d0");
    sc_trace(mVcdFile, grp_randombytes_fu_454_DRBG_ctx_V_address0, "grp_randombytes_fu_454_DRBG_ctx_V_address0");
    sc_trace(mVcdFile, grp_randombytes_fu_454_DRBG_ctx_V_ce0, "grp_randombytes_fu_454_DRBG_ctx_V_ce0");
    sc_trace(mVcdFile, grp_randombytes_fu_454_DRBG_ctx_V_we0, "grp_randombytes_fu_454_DRBG_ctx_V_we0");
    sc_trace(mVcdFile, grp_randombytes_fu_454_DRBG_ctx_V_d0, "grp_randombytes_fu_454_DRBG_ctx_V_d0");
    sc_trace(mVcdFile, grp_randombytes_fu_454_DRBG_ctx_V_address1, "grp_randombytes_fu_454_DRBG_ctx_V_address1");
    sc_trace(mVcdFile, grp_randombytes_fu_454_DRBG_ctx_V_ce1, "grp_randombytes_fu_454_DRBG_ctx_V_ce1");
    sc_trace(mVcdFile, grp_randombytes_fu_454_DRBG_ctx_Key_address0, "grp_randombytes_fu_454_DRBG_ctx_Key_address0");
    sc_trace(mVcdFile, grp_randombytes_fu_454_DRBG_ctx_Key_ce0, "grp_randombytes_fu_454_DRBG_ctx_Key_ce0");
    sc_trace(mVcdFile, grp_randombytes_fu_454_DRBG_ctx_Key_we0, "grp_randombytes_fu_454_DRBG_ctx_Key_we0");
    sc_trace(mVcdFile, grp_randombytes_fu_454_DRBG_ctx_Key_d0, "grp_randombytes_fu_454_DRBG_ctx_Key_d0");
    sc_trace(mVcdFile, grp_randombytes_fu_454_DRBG_ctx_Key_address1, "grp_randombytes_fu_454_DRBG_ctx_Key_address1");
    sc_trace(mVcdFile, grp_randombytes_fu_454_DRBG_ctx_Key_ce1, "grp_randombytes_fu_454_DRBG_ctx_Key_ce1");
    sc_trace(mVcdFile, grp_randombytes_fu_454_DRBG_ctx_reseed_counter_o, "grp_randombytes_fu_454_DRBG_ctx_reseed_counter_o");
    sc_trace(mVcdFile, grp_randombytes_fu_454_DRBG_ctx_reseed_counter_o_ap_vld, "grp_randombytes_fu_454_DRBG_ctx_reseed_counter_o_ap_vld");
    sc_trace(mVcdFile, grp_LowMCEnc_fu_471_ap_start, "grp_LowMCEnc_fu_471_ap_start");
    sc_trace(mVcdFile, grp_LowMCEnc_fu_471_ap_done, "grp_LowMCEnc_fu_471_ap_done");
    sc_trace(mVcdFile, grp_LowMCEnc_fu_471_ap_idle, "grp_LowMCEnc_fu_471_ap_idle");
    sc_trace(mVcdFile, grp_LowMCEnc_fu_471_ap_ready, "grp_LowMCEnc_fu_471_ap_ready");
    sc_trace(mVcdFile, grp_LowMCEnc_fu_471_plaintext_address0, "grp_LowMCEnc_fu_471_plaintext_address0");
    sc_trace(mVcdFile, grp_LowMCEnc_fu_471_plaintext_ce0, "grp_LowMCEnc_fu_471_plaintext_ce0");
    sc_trace(mVcdFile, grp_LowMCEnc_fu_471_output_r_address0, "grp_LowMCEnc_fu_471_output_r_address0");
    sc_trace(mVcdFile, grp_LowMCEnc_fu_471_output_r_ce0, "grp_LowMCEnc_fu_471_output_r_ce0");
    sc_trace(mVcdFile, grp_LowMCEnc_fu_471_output_r_we0, "grp_LowMCEnc_fu_471_output_r_we0");
    sc_trace(mVcdFile, grp_LowMCEnc_fu_471_output_r_d0, "grp_LowMCEnc_fu_471_output_r_d0");
    sc_trace(mVcdFile, grp_LowMCEnc_fu_471_key_address0, "grp_LowMCEnc_fu_471_key_address0");
    sc_trace(mVcdFile, grp_LowMCEnc_fu_471_key_ce0, "grp_LowMCEnc_fu_471_key_ce0");
    sc_trace(mVcdFile, phi_ln210_reg_374, "phi_ln210_reg_374");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln210_fu_573_p2, "icmp_ln210_fu_573_p2");
    sc_trace(mVcdFile, phi_ln210_1_reg_385, "phi_ln210_1_reg_385");
    sc_trace(mVcdFile, icmp_ln210_1_fu_590_p2, "icmp_ln210_1_fu_590_p2");
    sc_trace(mVcdFile, phi_ln210_2_reg_396, "phi_ln210_2_reg_396");
    sc_trace(mVcdFile, icmp_ln210_2_fu_607_p2, "icmp_ln210_2_fu_607_p2");
    sc_trace(mVcdFile, loop_0_reg_407, "loop_0_reg_407");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, loop_1_reg_418, "loop_1_reg_418");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state13, "ap_CS_fsm_state13");
    sc_trace(mVcdFile, loop_2_reg_430, "loop_2_reg_430");
    sc_trace(mVcdFile, ap_CS_fsm_state15, "ap_CS_fsm_state15");
    sc_trace(mVcdFile, p_0_reg_441, "p_0_reg_441");
    sc_trace(mVcdFile, empty_30_fu_556_p2, "empty_30_fu_556_p2");
    sc_trace(mVcdFile, grp_randombytes_fu_454_ap_start_reg, "grp_randombytes_fu_454_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, grp_LowMCEnc_fu_471_ap_start_reg, "grp_LowMCEnc_fu_471_ap_start_reg");
    sc_trace(mVcdFile, zext_ln210_fu_568_p1, "zext_ln210_fu_568_p1");
    sc_trace(mVcdFile, zext_ln210_1_fu_585_p1, "zext_ln210_1_fu_585_p1");
    sc_trace(mVcdFile, zext_ln210_2_fu_602_p1, "zext_ln210_2_fu_602_p1");
    sc_trace(mVcdFile, zext_ln212_fu_621_p1, "zext_ln212_fu_621_p1");
    sc_trace(mVcdFile, zext_ln212_1_fu_638_p1, "zext_ln212_1_fu_638_p1");
    sc_trace(mVcdFile, zext_ln212_2_fu_666_p1, "zext_ln212_2_fu_666_p1");
    sc_trace(mVcdFile, zext_ln212_3_fu_678_p1, "zext_ln212_3_fu_678_p1");
    sc_trace(mVcdFile, zext_ln212_4_fu_696_p1, "zext_ln212_4_fu_696_p1");
    sc_trace(mVcdFile, zext_ln222_fu_746_p1, "zext_ln222_fu_746_p1");
    sc_trace(mVcdFile, zext_ln222_1_fu_756_p1, "zext_ln222_1_fu_756_p1");
    sc_trace(mVcdFile, or_ln212_5_fu_685_p5, "or_ln212_5_fu_685_p5");
    sc_trace(mVcdFile, zext_ln223_fu_771_p1, "zext_ln223_fu_771_p1");
    sc_trace(mVcdFile, or_ln213_2_fu_702_p5, "or_ln213_2_fu_702_p5");
    sc_trace(mVcdFile, or_ln214_2_fu_713_p5, "or_ln214_2_fu_713_p5");
    sc_trace(mVcdFile, empty_19_fu_490_p2, "empty_19_fu_490_p2");
    sc_trace(mVcdFile, empty_fu_484_p2, "empty_fu_484_p2");
    sc_trace(mVcdFile, empty_21_fu_502_p2, "empty_21_fu_502_p2");
    sc_trace(mVcdFile, empty_20_fu_496_p2, "empty_20_fu_496_p2");
    sc_trace(mVcdFile, empty_23_fu_514_p2, "empty_23_fu_514_p2");
    sc_trace(mVcdFile, empty_22_fu_508_p2, "empty_22_fu_508_p2");
    sc_trace(mVcdFile, empty_25_fu_526_p2, "empty_25_fu_526_p2");
    sc_trace(mVcdFile, empty_24_fu_520_p2, "empty_24_fu_520_p2");
    sc_trace(mVcdFile, empty_27_fu_538_p2, "empty_27_fu_538_p2");
    sc_trace(mVcdFile, empty_26_fu_532_p2, "empty_26_fu_532_p2");
    sc_trace(mVcdFile, empty_29_fu_550_p2, "empty_29_fu_550_p2");
    sc_trace(mVcdFile, empty_28_fu_544_p2, "empty_28_fu_544_p2");
    sc_trace(mVcdFile, or_ln212_fu_632_p2, "or_ln212_fu_632_p2");
    sc_trace(mVcdFile, or_ln212_1_fu_661_p2, "or_ln212_1_fu_661_p2");
    sc_trace(mVcdFile, or_ln212_2_fu_673_p2, "or_ln212_2_fu_673_p2");
    sc_trace(mVcdFile, trunc_ln222_2_fu_736_p4, "trunc_ln222_2_fu_736_p4");
    sc_trace(mVcdFile, lshr_ln_fu_761_p4, "lshr_ln_fu_761_p4");
    sc_trace(mVcdFile, ap_CS_fsm_state16, "ap_CS_fsm_state16");
    sc_trace(mVcdFile, select_ln166_fu_794_p3, "select_ln166_fu_794_p3");
    sc_trace(mVcdFile, ap_return_0_preg, "ap_return_0_preg");
    sc_trace(mVcdFile, ap_return_1_preg, "ap_return_1_preg");
    sc_trace(mVcdFile, ap_return_2_preg, "ap_return_2_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

picnic_keygen::~picnic_keygen() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete temp_U;
    delete temp2_U;
    delete temp3_U;
    delete grp_randombytes_fu_454;
    delete grp_LowMCEnc_fu_471;
}

void picnic_keygen::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_0_preg = ap_const_lv32_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
            ap_return_0_preg = select_ln166_fu_794_p3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_1_preg = ap_const_lv4_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
            ap_return_1_preg = parameters.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_2_preg = ap_const_lv4_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
            ap_return_2_preg = parameters.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_LowMCEnc_fu_471_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
             esl_seteq<1,1,1>(tmp_fu_613_p3.read(), ap_const_lv1_1))) {
            grp_LowMCEnc_fu_471_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_LowMCEnc_fu_471_ap_ready.read())) {
            grp_LowMCEnc_fu_471_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_randombytes_fu_454_ap_start_reg = ap_const_logic_0;
    } else {
        if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
              esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
              esl_seteq<1,1,1>(ap_const_lv1_0, empty_30_fu_556_p2.read())) || 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()))) {
            grp_randombytes_fu_454_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_randombytes_fu_454_ap_ready.read())) {
            grp_randombytes_fu_454_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln210_2_fu_607_p2.read()))) {
        loop_0_reg_407 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        loop_0_reg_407 = loop_reg_895.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        loop_1_reg_418 = loop_3_reg_963.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
                esl_seteq<1,1,1>(grp_LowMCEnc_fu_471_ap_done.read(), ap_const_logic_1))) {
        loop_1_reg_418 = ap_const_lv6_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && 
         esl_seteq<1,1,1>(icmp_ln221_fu_724_p2.read(), ap_const_lv1_1))) {
        loop_2_reg_430 = ap_const_lv6_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        loop_2_reg_430 = loop_4_reg_976.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && 
         esl_seteq<1,1,1>(icmp_ln230_fu_776_p2.read(), ap_const_lv1_1))) {
        p_0_reg_441 = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, empty_30_fu_556_p2.read()))) {
        p_0_reg_441 = ap_const_lv1_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(icmp_ln210_fu_573_p2.read(), ap_const_lv1_1))) {
        phi_ln210_1_reg_385 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln210_1_fu_590_p2.read()))) {
        phi_ln210_1_reg_385 = add_ln210_1_fu_579_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(icmp_ln210_1_fu_590_p2.read(), ap_const_lv1_1))) {
        phi_ln210_2_reg_396 = ap_const_lv3_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln210_2_fu_607_p2.read()))) {
        phi_ln210_2_reg_396 = add_ln210_2_fu_596_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln210_fu_573_p2.read()))) {
        phi_ln210_reg_374 = add_ln210_fu_562_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(grp_randombytes_fu_454_ap_done.read(), ap_const_logic_1))) {
        phi_ln210_reg_374 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        loop_3_reg_963 = loop_3_fu_730_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        loop_4_reg_976 = loop_4_fu_782_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(tmp_fu_613_p3.read(), ap_const_lv1_0))) {
        loop_reg_895 = loop_fu_655_p2.read();
        trunc_ln211_reg_859 = trunc_ln211_fu_628_p1.read();
        trunc_ln212_1_reg_870 = loop_0_reg_407.read().range(4, 2);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        pk_ciphertext_load_1_reg_905 = pk_ciphertext_q1.read();
        pk_ciphertext_load_reg_900 = pk_ciphertext_q0.read();
        pk_plaintext_load_1_reg_925 = pk_plaintext_q1.read();
        pk_plaintext_load_reg_920 = pk_plaintext_q0.read();
        sk_data_load_1_reg_945 = sk_data_q1.read();
        sk_data_load_reg_940 = sk_data_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln221_fu_724_p2.read()))) {
        temp_addr_2_reg_968 =  (sc_lv<3>) (zext_ln222_fu_746_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln230_fu_776_p2.read()))) {
        zext_ln231_reg_981 = zext_ln231_fu_788_p1.read();
    }
}

void picnic_keygen::thread_DRBG_ctx_Key_address0() {
    DRBG_ctx_Key_address0 = grp_randombytes_fu_454_DRBG_ctx_Key_address0.read();
}

void picnic_keygen::thread_DRBG_ctx_Key_address1() {
    DRBG_ctx_Key_address1 = grp_randombytes_fu_454_DRBG_ctx_Key_address1.read();
}

void picnic_keygen::thread_DRBG_ctx_Key_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        DRBG_ctx_Key_ce0 = grp_randombytes_fu_454_DRBG_ctx_Key_ce0.read();
    } else {
        DRBG_ctx_Key_ce0 = ap_const_logic_0;
    }
}

void picnic_keygen::thread_DRBG_ctx_Key_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        DRBG_ctx_Key_ce1 = grp_randombytes_fu_454_DRBG_ctx_Key_ce1.read();
    } else {
        DRBG_ctx_Key_ce1 = ap_const_logic_0;
    }
}

void picnic_keygen::thread_DRBG_ctx_Key_d0() {
    DRBG_ctx_Key_d0 = grp_randombytes_fu_454_DRBG_ctx_Key_d0.read();
}

void picnic_keygen::thread_DRBG_ctx_Key_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        DRBG_ctx_Key_we0 = grp_randombytes_fu_454_DRBG_ctx_Key_we0.read();
    } else {
        DRBG_ctx_Key_we0 = ap_const_logic_0;
    }
}

void picnic_keygen::thread_DRBG_ctx_V_address0() {
    DRBG_ctx_V_address0 = grp_randombytes_fu_454_DRBG_ctx_V_address0.read();
}

void picnic_keygen::thread_DRBG_ctx_V_address1() {
    DRBG_ctx_V_address1 = grp_randombytes_fu_454_DRBG_ctx_V_address1.read();
}

void picnic_keygen::thread_DRBG_ctx_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        DRBG_ctx_V_ce0 = grp_randombytes_fu_454_DRBG_ctx_V_ce0.read();
    } else {
        DRBG_ctx_V_ce0 = ap_const_logic_0;
    }
}

void picnic_keygen::thread_DRBG_ctx_V_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        DRBG_ctx_V_ce1 = grp_randombytes_fu_454_DRBG_ctx_V_ce1.read();
    } else {
        DRBG_ctx_V_ce1 = ap_const_logic_0;
    }
}

void picnic_keygen::thread_DRBG_ctx_V_d0() {
    DRBG_ctx_V_d0 = grp_randombytes_fu_454_DRBG_ctx_V_d0.read();
}

void picnic_keygen::thread_DRBG_ctx_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        DRBG_ctx_V_we0 = grp_randombytes_fu_454_DRBG_ctx_V_we0.read();
    } else {
        DRBG_ctx_V_we0 = ap_const_logic_0;
    }
}

void picnic_keygen::thread_DRBG_ctx_reseed_counter_o() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_randombytes_fu_454_DRBG_ctx_reseed_counter_o_ap_vld.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, grp_randombytes_fu_454_DRBG_ctx_reseed_counter_o_ap_vld.read())))) {
        DRBG_ctx_reseed_counter_o = grp_randombytes_fu_454_DRBG_ctx_reseed_counter_o.read();
    } else {
        DRBG_ctx_reseed_counter_o = DRBG_ctx_reseed_counter_i.read();
    }
}

void picnic_keygen::thread_DRBG_ctx_reseed_counter_o_ap_vld() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
        DRBG_ctx_reseed_counter_o_ap_vld = grp_randombytes_fu_454_DRBG_ctx_reseed_counter_o_ap_vld.read();
    } else {
        DRBG_ctx_reseed_counter_o_ap_vld = ap_const_logic_0;
    }
}

void picnic_keygen::thread_add_ln210_1_fu_579_p2() {
    add_ln210_1_fu_579_p2 = (!phi_ln210_1_reg_385.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(phi_ln210_1_reg_385.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void picnic_keygen::thread_add_ln210_2_fu_596_p2() {
    add_ln210_2_fu_596_p2 = (!phi_ln210_2_reg_396.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(phi_ln210_2_reg_396.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void picnic_keygen::thread_add_ln210_fu_562_p2() {
    add_ln210_fu_562_p2 = (!phi_ln210_reg_374.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(phi_ln210_reg_374.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void picnic_keygen::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void picnic_keygen::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void picnic_keygen::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void picnic_keygen::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void picnic_keygen::thread_ap_CS_fsm_state13() {
    ap_CS_fsm_state13 = ap_CS_fsm.read()[12];
}

void picnic_keygen::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[13];
}

void picnic_keygen::thread_ap_CS_fsm_state15() {
    ap_CS_fsm_state15 = ap_CS_fsm.read()[14];
}

void picnic_keygen::thread_ap_CS_fsm_state16() {
    ap_CS_fsm_state16 = ap_CS_fsm.read()[15];
}

void picnic_keygen::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void picnic_keygen::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void picnic_keygen::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void picnic_keygen::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void picnic_keygen::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void picnic_keygen::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void picnic_keygen::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void picnic_keygen::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void picnic_keygen::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void picnic_keygen::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void picnic_keygen::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void picnic_keygen::thread_ap_return_0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        ap_return_0 = select_ln166_fu_794_p3.read();
    } else {
        ap_return_0 = ap_return_0_preg.read();
    }
}

void picnic_keygen::thread_ap_return_1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        ap_return_1 = parameters.read();
    } else {
        ap_return_1 = ap_return_1_preg.read();
    }
}

void picnic_keygen::thread_ap_return_2() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state16.read())) {
        ap_return_2 = parameters.read();
    } else {
        ap_return_2 = ap_return_2_preg.read();
    }
}

void picnic_keygen::thread_empty_19_fu_490_p2() {
    empty_19_fu_490_p2 = (!parameters.read().is_01() || !ap_const_lv4_E.is_01())? sc_lv<1>(): sc_lv<1>(parameters.read() == ap_const_lv4_E);
}

void picnic_keygen::thread_empty_20_fu_496_p2() {
    empty_20_fu_496_p2 = (empty_19_fu_490_p2.read() | empty_fu_484_p2.read());
}

void picnic_keygen::thread_empty_21_fu_502_p2() {
    empty_21_fu_502_p2 = (!parameters.read().is_01() || !ap_const_lv4_D.is_01())? sc_lv<1>(): sc_lv<1>(parameters.read() == ap_const_lv4_D);
}

void picnic_keygen::thread_empty_22_fu_508_p2() {
    empty_22_fu_508_p2 = (empty_21_fu_502_p2.read() | empty_20_fu_496_p2.read());
}

void picnic_keygen::thread_empty_23_fu_514_p2() {
    empty_23_fu_514_p2 = (!parameters.read().is_01() || !ap_const_lv4_C.is_01())? sc_lv<1>(): sc_lv<1>(parameters.read() == ap_const_lv4_C);
}

void picnic_keygen::thread_empty_24_fu_520_p2() {
    empty_24_fu_520_p2 = (empty_23_fu_514_p2.read() | empty_22_fu_508_p2.read());
}

void picnic_keygen::thread_empty_25_fu_526_p2() {
    empty_25_fu_526_p2 = (!parameters.read().is_01() || !ap_const_lv4_B.is_01())? sc_lv<1>(): sc_lv<1>(parameters.read() == ap_const_lv4_B);
}

void picnic_keygen::thread_empty_26_fu_532_p2() {
    empty_26_fu_532_p2 = (empty_25_fu_526_p2.read() | empty_24_fu_520_p2.read());
}

void picnic_keygen::thread_empty_27_fu_538_p2() {
    empty_27_fu_538_p2 = (!parameters.read().is_01() || !ap_const_lv4_A.is_01())? sc_lv<1>(): sc_lv<1>(parameters.read() == ap_const_lv4_A);
}

void picnic_keygen::thread_empty_28_fu_544_p2() {
    empty_28_fu_544_p2 = (empty_27_fu_538_p2.read() | empty_26_fu_532_p2.read());
}

void picnic_keygen::thread_empty_29_fu_550_p2() {
    empty_29_fu_550_p2 = (!parameters.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(parameters.read() == ap_const_lv4_0);
}

void picnic_keygen::thread_empty_30_fu_556_p2() {
    empty_30_fu_556_p2 = (empty_29_fu_550_p2.read() | empty_28_fu_544_p2.read());
}

void picnic_keygen::thread_empty_fu_484_p2() {
    empty_fu_484_p2 = (!parameters.read().is_01() || !ap_const_lv4_F.is_01())? sc_lv<1>(): sc_lv<1>(parameters.read() == ap_const_lv4_F);
}

void picnic_keygen::thread_grp_LowMCEnc_fu_471_ap_start() {
    grp_LowMCEnc_fu_471_ap_start = grp_LowMCEnc_fu_471_ap_start_reg.read();
}

void picnic_keygen::thread_grp_randombytes_fu_454_ap_start() {
    grp_randombytes_fu_454_ap_start = grp_randombytes_fu_454_ap_start_reg.read();
}

void picnic_keygen::thread_icmp_ln210_1_fu_590_p2() {
    icmp_ln210_1_fu_590_p2 = (!phi_ln210_1_reg_385.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln210_1_reg_385.read() == ap_const_lv3_7);
}

void picnic_keygen::thread_icmp_ln210_2_fu_607_p2() {
    icmp_ln210_2_fu_607_p2 = (!phi_ln210_2_reg_396.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln210_2_reg_396.read() == ap_const_lv3_7);
}

void picnic_keygen::thread_icmp_ln210_fu_573_p2() {
    icmp_ln210_fu_573_p2 = (!phi_ln210_reg_374.read().is_01() || !ap_const_lv3_7.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln210_reg_374.read() == ap_const_lv3_7);
}

void picnic_keygen::thread_icmp_ln221_fu_724_p2() {
    icmp_ln221_fu_724_p2 = (!loop_1_reg_418.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(loop_1_reg_418.read() == ap_const_lv6_20);
}

void picnic_keygen::thread_icmp_ln230_fu_776_p2() {
    icmp_ln230_fu_776_p2 = (!loop_2_reg_430.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(loop_2_reg_430.read() == ap_const_lv6_20);
}

void picnic_keygen::thread_loop_3_fu_730_p2() {
    loop_3_fu_730_p2 = (!loop_1_reg_418.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(loop_1_reg_418.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void picnic_keygen::thread_loop_4_fu_782_p2() {
    loop_4_fu_782_p2 = (!loop_2_reg_430.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(loop_2_reg_430.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void picnic_keygen::thread_loop_fu_655_p2() {
    loop_fu_655_p2 = (!ap_const_lv6_4.is_01() || !loop_0_reg_407.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_4) + sc_biguint<6>(loop_0_reg_407.read()));
}

void picnic_keygen::thread_lshr_ln_fu_761_p4() {
    lshr_ln_fu_761_p4 = temp_q0.read().range(31, 8);
}

void picnic_keygen::thread_or_ln212_1_fu_661_p2() {
    or_ln212_1_fu_661_p2 = (trunc_ln211_reg_859.read() | ap_const_lv5_2);
}

void picnic_keygen::thread_or_ln212_2_fu_673_p2() {
    or_ln212_2_fu_673_p2 = (trunc_ln211_reg_859.read() | ap_const_lv5_3);
}

void picnic_keygen::thread_or_ln212_5_fu_685_p5() {
    or_ln212_5_fu_685_p5 = esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(pk_ciphertext_q1.read(), pk_ciphertext_q0.read()), pk_ciphertext_load_1_reg_905.read()), pk_ciphertext_load_reg_900.read());
}

void picnic_keygen::thread_or_ln212_fu_632_p2() {
    or_ln212_fu_632_p2 = (trunc_ln211_fu_628_p1.read() | ap_const_lv5_1);
}

void picnic_keygen::thread_or_ln213_2_fu_702_p5() {
    or_ln213_2_fu_702_p5 = esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(pk_plaintext_q1.read(), pk_plaintext_q0.read()), pk_plaintext_load_1_reg_925.read()), pk_plaintext_load_reg_920.read());
}

void picnic_keygen::thread_or_ln214_2_fu_713_p5() {
    or_ln214_2_fu_713_p5 = esl_concat<24,8>(esl_concat<16,8>(esl_concat<8,8>(sk_data_q1.read(), sk_data_q0.read()), sk_data_load_1_reg_945.read()), sk_data_load_reg_940.read());
}

void picnic_keygen::thread_pk_ciphertext_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        pk_ciphertext_address0 =  (sc_lv<5>) (zext_ln222_1_fu_756_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        pk_ciphertext_address0 =  (sc_lv<5>) (zext_ln212_2_fu_666_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        pk_ciphertext_address0 =  (sc_lv<5>) (zext_ln212_fu_621_p1.read());
    } else {
        pk_ciphertext_address0 = "XXXXX";
    }
}

void picnic_keygen::thread_pk_ciphertext_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        pk_ciphertext_address1 =  (sc_lv<5>) (zext_ln231_fu_788_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        pk_ciphertext_address1 =  (sc_lv<5>) (zext_ln212_3_fu_678_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        pk_ciphertext_address1 =  (sc_lv<5>) (zext_ln212_1_fu_638_p1.read());
    } else {
        pk_ciphertext_address1 = "XXXXX";
    }
}

void picnic_keygen::thread_pk_ciphertext_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        pk_ciphertext_ce0 = ap_const_logic_1;
    } else {
        pk_ciphertext_ce0 = ap_const_logic_0;
    }
}

void picnic_keygen::thread_pk_ciphertext_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        pk_ciphertext_ce1 = ap_const_logic_1;
    } else {
        pk_ciphertext_ce1 = ap_const_logic_0;
    }
}

void picnic_keygen::thread_pk_ciphertext_d0() {
    pk_ciphertext_d0 = temp_q0.read().range(8-1, 0);
}

void picnic_keygen::thread_pk_ciphertext_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        pk_ciphertext_we0 = ap_const_logic_1;
    } else {
        pk_ciphertext_we0 = ap_const_logic_0;
    }
}

void picnic_keygen::thread_pk_plaintext_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        pk_plaintext_address0 =  (sc_lv<5>) (zext_ln231_fu_788_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        pk_plaintext_address0 =  (sc_lv<5>) (zext_ln212_2_fu_666_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        pk_plaintext_address0 =  (sc_lv<5>) (zext_ln212_fu_621_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        pk_plaintext_address0 = grp_randombytes_fu_454_x_address0.read();
    } else {
        pk_plaintext_address0 = "XXXXX";
    }
}

void picnic_keygen::thread_pk_plaintext_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        pk_plaintext_address1 =  (sc_lv<5>) (zext_ln212_3_fu_678_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        pk_plaintext_address1 =  (sc_lv<5>) (zext_ln212_1_fu_638_p1.read());
    } else {
        pk_plaintext_address1 = "XXXXX";
    }
}

void picnic_keygen::thread_pk_plaintext_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        pk_plaintext_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        pk_plaintext_ce0 = grp_randombytes_fu_454_x_ce0.read();
    } else {
        pk_plaintext_ce0 = ap_const_logic_0;
    }
}

void picnic_keygen::thread_pk_plaintext_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        pk_plaintext_ce1 = ap_const_logic_1;
    } else {
        pk_plaintext_ce1 = ap_const_logic_0;
    }
}

void picnic_keygen::thread_pk_plaintext_d0() {
    pk_plaintext_d0 = grp_randombytes_fu_454_x_d0.read();
}

void picnic_keygen::thread_pk_plaintext_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        pk_plaintext_we0 = grp_randombytes_fu_454_x_we0.read();
    } else {
        pk_plaintext_we0 = ap_const_logic_0;
    }
}

void picnic_keygen::thread_select_ln166_fu_794_p3() {
    select_ln166_fu_794_p3 = (!p_0_reg_441.read()[0].is_01())? sc_lv<32>(): ((p_0_reg_441.read()[0].to_bool())? ap_const_lv32_FFFFFFFF: ap_const_lv32_0);
}

void picnic_keygen::thread_sk_data_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        sk_data_address0 =  (sc_lv<5>) (zext_ln212_2_fu_666_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sk_data_address0 =  (sc_lv<5>) (zext_ln212_fu_621_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sk_data_address0 = grp_randombytes_fu_454_x_address0.read();
    } else {
        sk_data_address0 = "XXXXX";
    }
}

void picnic_keygen::thread_sk_data_address1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        sk_data_address1 =  (sc_lv<5>) (zext_ln212_3_fu_678_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sk_data_address1 =  (sc_lv<5>) (zext_ln212_1_fu_638_p1.read());
    } else {
        sk_data_address1 = "XXXXX";
    }
}

void picnic_keygen::thread_sk_data_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        sk_data_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sk_data_ce0 = grp_randombytes_fu_454_x_ce0.read();
    } else {
        sk_data_ce0 = ap_const_logic_0;
    }
}

void picnic_keygen::thread_sk_data_ce1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        sk_data_ce1 = ap_const_logic_1;
    } else {
        sk_data_ce1 = ap_const_logic_0;
    }
}

void picnic_keygen::thread_sk_data_d0() {
    sk_data_d0 = grp_randombytes_fu_454_x_d0.read();
}

void picnic_keygen::thread_sk_data_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        sk_data_we0 = grp_randombytes_fu_454_x_we0.read();
    } else {
        sk_data_we0 = ap_const_logic_0;
    }
}

void picnic_keygen::thread_sk_pk_ciphertext_address0() {
    sk_pk_ciphertext_address0 =  (sc_lv<5>) (zext_ln231_reg_981.read());
}

void picnic_keygen::thread_sk_pk_ciphertext_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        sk_pk_ciphertext_ce0 = ap_const_logic_1;
    } else {
        sk_pk_ciphertext_ce0 = ap_const_logic_0;
    }
}

void picnic_keygen::thread_sk_pk_ciphertext_d0() {
    sk_pk_ciphertext_d0 = pk_ciphertext_q1.read();
}

void picnic_keygen::thread_sk_pk_ciphertext_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        sk_pk_ciphertext_we0 = ap_const_logic_1;
    } else {
        sk_pk_ciphertext_we0 = ap_const_logic_0;
    }
}

void picnic_keygen::thread_sk_pk_plaintext_address0() {
    sk_pk_plaintext_address0 =  (sc_lv<5>) (zext_ln231_reg_981.read());
}

void picnic_keygen::thread_sk_pk_plaintext_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        sk_pk_plaintext_ce0 = ap_const_logic_1;
    } else {
        sk_pk_plaintext_ce0 = ap_const_logic_0;
    }
}

void picnic_keygen::thread_sk_pk_plaintext_d0() {
    sk_pk_plaintext_d0 = pk_plaintext_q0.read();
}

void picnic_keygen::thread_sk_pk_plaintext_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state15.read())) {
        sk_pk_plaintext_we0 = ap_const_logic_1;
    } else {
        sk_pk_plaintext_we0 = ap_const_logic_0;
    }
}

void picnic_keygen::thread_temp2_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        temp2_address0 =  (sc_lv<3>) (zext_ln212_4_fu_696_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        temp2_address0 =  (sc_lv<3>) (zext_ln210_1_fu_585_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        temp2_address0 = grp_LowMCEnc_fu_471_plaintext_address0.read();
    } else {
        temp2_address0 =  (sc_lv<3>) ("XXX");
    }
}

void picnic_keygen::thread_temp2_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        temp2_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        temp2_ce0 = grp_LowMCEnc_fu_471_plaintext_ce0.read();
    } else {
        temp2_ce0 = ap_const_logic_0;
    }
}

void picnic_keygen::thread_temp2_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        temp2_d0 = or_ln213_2_fu_702_p5.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        temp2_d0 = ap_const_lv32_0;
    } else {
        temp2_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void picnic_keygen::thread_temp2_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        temp2_we0 = ap_const_logic_1;
    } else {
        temp2_we0 = ap_const_logic_0;
    }
}

void picnic_keygen::thread_temp3_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        temp3_address0 =  (sc_lv<3>) (zext_ln212_4_fu_696_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        temp3_address0 =  (sc_lv<3>) (zext_ln210_2_fu_602_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        temp3_address0 = grp_LowMCEnc_fu_471_key_address0.read();
    } else {
        temp3_address0 =  (sc_lv<3>) ("XXX");
    }
}

void picnic_keygen::thread_temp3_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        temp3_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        temp3_ce0 = grp_LowMCEnc_fu_471_key_ce0.read();
    } else {
        temp3_ce0 = ap_const_logic_0;
    }
}

void picnic_keygen::thread_temp3_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        temp3_d0 = or_ln214_2_fu_713_p5.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        temp3_d0 = ap_const_lv32_0;
    } else {
        temp3_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void picnic_keygen::thread_temp3_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        temp3_we0 = ap_const_logic_1;
    } else {
        temp3_we0 = ap_const_logic_0;
    }
}

void picnic_keygen::thread_temp_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        temp_address0 = temp_addr_2_reg_968.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        temp_address0 =  (sc_lv<3>) (zext_ln222_fu_746_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        temp_address0 =  (sc_lv<3>) (zext_ln212_4_fu_696_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        temp_address0 =  (sc_lv<3>) (zext_ln210_fu_568_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        temp_address0 = grp_LowMCEnc_fu_471_output_r_address0.read();
    } else {
        temp_address0 =  (sc_lv<3>) ("XXX");
    }
}

void picnic_keygen::thread_temp_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        temp_ce0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        temp_ce0 = grp_LowMCEnc_fu_471_output_r_ce0.read();
    } else {
        temp_ce0 = ap_const_logic_0;
    }
}

void picnic_keygen::thread_temp_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read())) {
        temp_d0 = zext_ln223_fu_771_p1.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        temp_d0 = or_ln212_5_fu_685_p5.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        temp_d0 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        temp_d0 = grp_LowMCEnc_fu_471_output_r_d0.read();
    } else {
        temp_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void picnic_keygen::thread_temp_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state13.read()))) {
        temp_we0 = ap_const_logic_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        temp_we0 = grp_LowMCEnc_fu_471_output_r_we0.read();
    } else {
        temp_we0 = ap_const_logic_0;
    }
}

void picnic_keygen::thread_tmp_fu_613_p3() {
    tmp_fu_613_p3 = loop_0_reg_407.read().range(5, 5);
}

void picnic_keygen::thread_trunc_ln211_fu_628_p1() {
    trunc_ln211_fu_628_p1 = loop_0_reg_407.read().range(5-1, 0);
}

void picnic_keygen::thread_trunc_ln222_2_fu_736_p4() {
    trunc_ln222_2_fu_736_p4 = loop_1_reg_418.read().range(4, 2);
}

void picnic_keygen::thread_zext_ln210_1_fu_585_p1() {
    zext_ln210_1_fu_585_p1 = esl_zext<64,3>(phi_ln210_1_reg_385.read());
}

void picnic_keygen::thread_zext_ln210_2_fu_602_p1() {
    zext_ln210_2_fu_602_p1 = esl_zext<64,3>(phi_ln210_2_reg_396.read());
}

void picnic_keygen::thread_zext_ln210_fu_568_p1() {
    zext_ln210_fu_568_p1 = esl_zext<64,3>(phi_ln210_reg_374.read());
}

void picnic_keygen::thread_zext_ln212_1_fu_638_p1() {
    zext_ln212_1_fu_638_p1 = esl_zext<64,5>(or_ln212_fu_632_p2.read());
}

void picnic_keygen::thread_zext_ln212_2_fu_666_p1() {
    zext_ln212_2_fu_666_p1 = esl_zext<64,5>(or_ln212_1_fu_661_p2.read());
}

void picnic_keygen::thread_zext_ln212_3_fu_678_p1() {
    zext_ln212_3_fu_678_p1 = esl_zext<64,5>(or_ln212_2_fu_673_p2.read());
}

void picnic_keygen::thread_zext_ln212_4_fu_696_p1() {
    zext_ln212_4_fu_696_p1 = esl_zext<64,3>(trunc_ln212_1_reg_870.read());
}

void picnic_keygen::thread_zext_ln212_fu_621_p1() {
    zext_ln212_fu_621_p1 = esl_zext<64,6>(loop_0_reg_407.read());
}

void picnic_keygen::thread_zext_ln222_1_fu_756_p1() {
    zext_ln222_1_fu_756_p1 = esl_zext<64,6>(loop_1_reg_418.read());
}

void picnic_keygen::thread_zext_ln222_fu_746_p1() {
    zext_ln222_fu_746_p1 = esl_zext<64,3>(trunc_ln222_2_fu_736_p4.read());
}

void picnic_keygen::thread_zext_ln223_fu_771_p1() {
    zext_ln223_fu_771_p1 = esl_zext<32,24>(lshr_ln_fu_761_p4.read());
}

void picnic_keygen::thread_zext_ln231_fu_788_p1() {
    zext_ln231_fu_788_p1 = esl_zext<64,6>(loop_2_reg_430.read());
}

void picnic_keygen::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_1, empty_30_fu_556_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_lv1_0, empty_30_fu_556_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(grp_randombytes_fu_454_ap_done.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(grp_randombytes_fu_454_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(icmp_ln210_fu_573_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(icmp_ln210_1_fu_590_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln210_2_fu_607_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(tmp_fu_613_p3.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state9;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(grp_LowMCEnc_fu_471_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state12;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 2048 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()) && esl_seteq<1,1,1>(icmp_ln221_fu_724_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_state13;
            }
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 8192 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()) && esl_seteq<1,1,1>(icmp_ln230_fu_776_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state16;
            } else {
                ap_NS_fsm = ap_ST_fsm_state15;
            }
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
            break;
    }
}

}


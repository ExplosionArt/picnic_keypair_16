// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "matrix_mul.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic matrix_mul::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic matrix_mul::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<12> matrix_mul::ap_ST_fsm_state1 = "1";
const sc_lv<12> matrix_mul::ap_ST_fsm_state2 = "10";
const sc_lv<12> matrix_mul::ap_ST_fsm_state3 = "100";
const sc_lv<12> matrix_mul::ap_ST_fsm_state4 = "1000";
const sc_lv<12> matrix_mul::ap_ST_fsm_state5 = "10000";
const sc_lv<12> matrix_mul::ap_ST_fsm_state6 = "100000";
const sc_lv<12> matrix_mul::ap_ST_fsm_state7 = "1000000";
const sc_lv<12> matrix_mul::ap_ST_fsm_state8 = "10000000";
const sc_lv<12> matrix_mul::ap_ST_fsm_state9 = "100000000";
const sc_lv<12> matrix_mul::ap_ST_fsm_state10 = "1000000000";
const sc_lv<12> matrix_mul::ap_ST_fsm_state11 = "10000000000";
const sc_lv<12> matrix_mul::ap_ST_fsm_state12 = "100000000000";
const sc_lv<32> matrix_mul::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> matrix_mul::ap_const_lv32_1 = "1";
const sc_lv<32> matrix_mul::ap_const_lv32_2 = "10";
const sc_lv<32> matrix_mul::ap_const_lv32_3 = "11";
const sc_lv<32> matrix_mul::ap_const_lv32_4 = "100";
const sc_lv<32> matrix_mul::ap_const_lv32_5 = "101";
const sc_lv<32> matrix_mul::ap_const_lv32_6 = "110";
const sc_lv<1> matrix_mul::ap_const_lv1_0 = "0";
const sc_lv<1> matrix_mul::ap_const_lv1_1 = "1";
const sc_lv<32> matrix_mul::ap_const_lv32_7 = "111";
const sc_lv<32> matrix_mul::ap_const_lv32_8 = "1000";
const sc_lv<32> matrix_mul::ap_const_lv32_A = "1010";
const sc_lv<7> matrix_mul::ap_const_lv7_0 = "0000000";
const sc_lv<32> matrix_mul::ap_const_lv32_9 = "1001";
const sc_lv<2> matrix_mul::ap_const_lv2_0 = "00";
const sc_lv<3> matrix_mul::ap_const_lv3_1 = "1";
const sc_lv<32> matrix_mul::ap_const_lv32_B = "1011";
const sc_lv<3> matrix_mul::ap_const_lv3_0 = "000";
const sc_lv<64> matrix_mul::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<4> matrix_mul::ap_const_lv4_0 = "0000";
const sc_lv<7> matrix_mul::ap_const_lv7_1 = "1";
const sc_lv<2> matrix_mul::ap_const_lv2_3 = "11";
const sc_lv<2> matrix_mul::ap_const_lv2_1 = "1";
const sc_lv<3> matrix_mul::ap_const_lv3_4 = "100";
const sc_lv<7> matrix_mul::ap_const_lv7_7F = "1111111";
const sc_lv<32> matrix_mul::ap_const_lv32_1F = "11111";
const sc_lv<32> matrix_mul::ap_const_lv32_18 = "11000";
const sc_lv<32> matrix_mul::ap_const_lv32_19 = "11001";
const sc_lv<32> matrix_mul::ap_const_lv32_1B = "11011";
const sc_lv<32> matrix_mul::ap_const_lv32_10 = "10000";
const sc_lv<6> matrix_mul::ap_const_lv6_7 = "111";
const sc_lv<6> matrix_mul::ap_const_lv6_1F = "11111";
const sc_lv<32> matrix_mul::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<3> matrix_mul::ap_const_lv3_7 = "111";
const sc_lv<8> matrix_mul::ap_const_lv8_1 = "1";
const sc_lv<8> matrix_mul::ap_const_lv8_FF = "11111111";
const sc_lv<4> matrix_mul::ap_const_lv4_1 = "1";
const bool matrix_mul::ap_const_boolean_1 = true;

matrix_mul::matrix_mul(sc_module_name name) : sc_module(name), mVcdFile(0) {
    temp_matrix2_U = new matrix_mul_temp_mfYi("temp_matrix2_U");
    temp_matrix2_U->clk(ap_clk);
    temp_matrix2_U->reset(ap_rst);
    temp_matrix2_U->address0(temp_matrix2_address0);
    temp_matrix2_U->ce0(temp_matrix2_ce0);
    temp_matrix2_U->q0(temp_matrix2_q0);
    prod_U = new matrix_mul_1_prod("prod_U");
    prod_U->clk(ap_clk);
    prod_U->reset(ap_rst);
    prod_U->address0(prod_address0);
    prod_U->ce0(prod_ce0);
    prod_U->we0(prod_we0);
    prod_U->d0(prod_d0);
    prod_U->q0(prod_q0);
    temp_U = new matrix_mul_1_temp("temp_U");
    temp_U->clk(ap_clk);
    temp_U->reset(ap_rst);
    temp_U->address0(temp_address0);
    temp_U->ce0(temp_ce0);
    temp_U->we0(temp_we0);
    temp_U->d0(temp_d0);
    temp_U->q0(temp_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln133_fu_287_p2);
    sensitive << ( shl_ln_fu_279_p3 );
    sensitive << ( zext_ln130_fu_275_p1 );

    SC_METHOD(thread_add_ln134_fu_302_p2);
    sensitive << ( matrix_offset );
    sensitive << ( zext_ln133_fu_293_p1 );

    SC_METHOD(thread_add_ln68_fu_610_p2);
    sensitive << ( zext_ln68_fu_602_p1 );

    SC_METHOD(thread_and_ln68_4_fu_708_p2);
    sensitive << ( lshr_ln68_fu_696_p2 );
    sensitive << ( lshr_ln68_3_fu_702_p2 );

    SC_METHOD(thread_and_ln68_5_fu_847_p2);
    sensitive << ( shl_ln68_6_fu_835_p2 );
    sensitive << ( lshr_ln68_4_fu_841_p2 );

    SC_METHOD(thread_and_ln68_fu_745_p2);
    sensitive << ( trunc_ln68_fu_714_p1 );
    sensitive << ( xor_ln68_2_fu_733_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( icmp_ln140_fu_870_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( icmp_ln140_fu_870_p2 );

    SC_METHOD(thread_i_6_fu_342_p2);
    sensitive << ( i_0_i_reg_247 );

    SC_METHOD(thread_i_fu_269_p2);
    sensitive << ( bitNumber_assign105_reg_213 );

    SC_METHOD(thread_icmp_ln128_fu_377_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln87_fu_336_p2 );
    sensitive << ( bitNumber_assign105_reg_213 );

    SC_METHOD(thread_icmp_ln130_fu_312_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0104_reg_225 );

    SC_METHOD(thread_icmp_ln140_fu_870_p2);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( loop_0_reg_258 );

    SC_METHOD(thread_icmp_ln68_2_fu_757_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln68_14_fu_606_p1 );
    sensitive << ( zext_ln68_16_fu_616_p1 );

    SC_METHOD(thread_icmp_ln68_fu_620_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln68_14_fu_606_p1 );
    sensitive << ( zext_ln68_16_fu_616_p1 );

    SC_METHOD(thread_icmp_ln87_fu_336_p2);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( i_0_i_reg_247 );

    SC_METHOD(thread_j_fu_325_p2);
    sensitive << ( j_0104_reg_225 );

    SC_METHOD(thread_loop_fu_876_p2);
    sensitive << ( loop_0_reg_258 );

    SC_METHOD(thread_lshr_ln5_fu_435_p4);
    sensitive << ( y_fu_429_p2 );

    SC_METHOD(thread_lshr_ln68_3_fu_702_p2);
    sensitive << ( zext_ln68_19_fu_692_p1 );

    SC_METHOD(thread_lshr_ln68_4_fu_841_p2);
    sensitive << ( zext_ln68_24_fu_808_p1 );

    SC_METHOD(thread_lshr_ln68_fu_696_p2);
    sensitive << ( select_ln68_7_fu_666_p3 );
    sensitive << ( zext_ln68_18_fu_688_p1 );

    SC_METHOD(thread_lshr_ln6_fu_479_p4);
    sensitive << ( y_4_fu_473_p2 );

    SC_METHOD(thread_lshr_ln_fu_389_p4);
    sensitive << ( x_0_i_reg_237 );

    SC_METHOD(thread_or_ln68_fu_751_p2);
    sensitive << ( and_ln68_fu_745_p2 );
    sensitive << ( shl_ln68_2_fu_739_p2 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( zext_ln134_fu_297_p1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln141_reg_1001 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( temp_q0 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_prod_address0);
    sensitive << ( zext_ln134_reg_897 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( zext_ln87_fu_331_p1 );

    SC_METHOD(thread_prod_ce0);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state7 );

    SC_METHOD(thread_prod_d0);
    sensitive << ( output_r_q0 );
    sensitive << ( temp_matrix2_q0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_prod_we0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_select_ln68_10_fu_781_p3);
    sensitive << ( add_ln68_reg_974 );
    sensitive << ( icmp_ln68_2_reg_985 );
    sensitive << ( zext_ln68_20_fu_763_p1 );

    SC_METHOD(thread_select_ln68_11_fu_787_p3);
    sensitive << ( icmp_ln68_2_reg_985 );
    sensitive << ( zext_ln68_20_fu_763_p1 );
    sensitive << ( xor_ln68_5_fu_769_p2 );

    SC_METHOD(thread_select_ln68_12_fu_828_p3);
    sensitive << ( icmp_ln68_2_reg_985 );
    sensitive << ( shl_ln68_5_fu_812_p2 );
    sensitive << ( tmp_20_fu_818_p4 );

    SC_METHOD(thread_select_ln68_7_fu_666_p3);
    sensitive << ( temp_q0 );
    sensitive << ( icmp_ln68_fu_620_p2 );
    sensitive << ( tmp_19_fu_630_p4 );

    SC_METHOD(thread_select_ln68_8_fu_674_p3);
    sensitive << ( zext_ln68_17_fu_626_p1 );
    sensitive << ( icmp_ln68_fu_620_p2 );
    sensitive << ( xor_ln68_4_fu_646_p2 );

    SC_METHOD(thread_select_ln68_9_fu_775_p3);
    sensitive << ( add_ln68_reg_974 );
    sensitive << ( icmp_ln68_2_reg_985 );
    sensitive << ( zext_ln68_20_fu_763_p1 );

    SC_METHOD(thread_select_ln68_fu_658_p3);
    sensitive << ( icmp_ln68_fu_620_p2 );
    sensitive << ( sub_ln68_fu_640_p2 );
    sensitive << ( sub_ln68_4_fu_652_p2 );

    SC_METHOD(thread_shl_ln68_2_fu_739_p2);
    sensitive << ( zext_ln68_2_fu_723_p1 );
    sensitive << ( zext_ln101_fu_591_p1 );

    SC_METHOD(thread_shl_ln68_5_fu_812_p2);
    sensitive << ( zext_ln68_21_fu_766_p1 );
    sensitive << ( zext_ln68_22_fu_800_p1 );

    SC_METHOD(thread_shl_ln68_6_fu_835_p2);
    sensitive << ( zext_ln68_23_fu_804_p1 );

    SC_METHOD(thread_shl_ln68_7_fu_863_p2);
    sensitive << ( zext_ln68_25_fu_860_p1 );

    SC_METHOD(thread_shl_ln68_fu_727_p2);
    sensitive << ( zext_ln68_2_fu_723_p1 );

    SC_METHOD(thread_shl_ln_fu_279_p3);
    sensitive << ( bitNumber_assign105_reg_213 );

    SC_METHOD(thread_sub_ln68_4_fu_652_p2);
    sensitive << ( add_ln68_fu_610_p2 );
    sensitive << ( zext_ln68_17_fu_626_p1 );

    SC_METHOD(thread_sub_ln68_5_fu_682_p2);
    sensitive << ( select_ln68_fu_658_p3 );

    SC_METHOD(thread_sub_ln68_6_fu_794_p2);
    sensitive << ( select_ln68_9_fu_775_p3 );

    SC_METHOD(thread_sub_ln68_fu_640_p2);
    sensitive << ( add_ln68_fu_610_p2 );
    sensitive << ( zext_ln68_17_fu_626_p1 );

    SC_METHOD(thread_temp_address0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( temp_addr_5_reg_950 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( zext_ln141_fu_882_p1 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( zext_ln68_15_fu_368_p1 );

    SC_METHOD(thread_temp_ce0);
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_temp_d0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( select_ln68_12_fu_828_p3 );
    sensitive << ( and_ln68_5_fu_847_p2 );

    SC_METHOD(thread_temp_matrix2_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln134_2_fu_307_p1 );

    SC_METHOD(thread_temp_matrix2_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_temp_we0);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( shl_ln68_7_fu_863_p2 );

    SC_METHOD(thread_tmp_12_fu_407_p3);
    sensitive << ( x_0_i_reg_237 );

    SC_METHOD(thread_tmp_13_fu_449_p3);
    sensitive << ( y_fu_429_p2 );

    SC_METHOD(thread_tmp_14_fu_493_p3);
    sensitive << ( y_4_fu_473_p2 );

    SC_METHOD(thread_tmp_15_fu_539_p3);
    sensitive << ( y_5_fu_517_p2 );

    SC_METHOD(thread_tmp_16_fu_553_p3);
    sensitive << ( y_6_fu_547_p2 );

    SC_METHOD(thread_tmp_18_fu_358_p4);
    sensitive << ( bitNumber_assign105_reg_213 );

    SC_METHOD(thread_tmp_19_fu_630_p4);
    sensitive << ( temp_q0 );

    SC_METHOD(thread_tmp_20_fu_818_p4);
    sensitive << ( shl_ln68_5_fu_812_p2 );

    SC_METHOD(thread_trunc_ln128_fu_373_p1);
    sensitive << ( bitNumber_assign105_reg_213 );

    SC_METHOD(thread_trunc_ln68_fu_714_p1);
    sensitive << ( and_ln68_4_fu_708_p2 );

    SC_METHOD(thread_trunc_ln96_2_fu_415_p1);
    sensitive << ( x_0_i_reg_237 );

    SC_METHOD(thread_trunc_ln96_6_fu_419_p4);
    sensitive << ( x_0_i_reg_237 );

    SC_METHOD(thread_trunc_ln96_fu_403_p1);
    sensitive << ( x_0_i_reg_237 );

    SC_METHOD(thread_trunc_ln97_2_fu_463_p4);
    sensitive << ( y_fu_429_p2 );

    SC_METHOD(thread_trunc_ln98_2_fu_507_p4);
    sensitive << ( y_4_fu_473_p2 );

    SC_METHOD(thread_trunc_ln_fu_529_p4);
    sensitive << ( y_5_fu_517_p2 );

    SC_METHOD(thread_x_2_fu_383_p2);
    sensitive << ( prod_q0 );
    sensitive << ( x_0_i_reg_237 );

    SC_METHOD(thread_xor_ln101_5_fu_567_p2);
    sensitive << ( xor_ln101_fu_561_p2 );
    sensitive << ( tmp_12_fu_407_p3 );

    SC_METHOD(thread_xor_ln101_6_fu_573_p2);
    sensitive << ( tmp_15_fu_539_p3 );
    sensitive << ( tmp_16_fu_553_p3 );

    SC_METHOD(thread_xor_ln101_7_fu_579_p2);
    sensitive << ( xor_ln101_6_fu_573_p2 );
    sensitive << ( tmp_14_fu_493_p3 );

    SC_METHOD(thread_xor_ln101_8_fu_585_p2);
    sensitive << ( xor_ln101_7_fu_579_p2 );
    sensitive << ( xor_ln101_5_fu_567_p2 );

    SC_METHOD(thread_xor_ln101_fu_561_p2);
    sensitive << ( trunc_ln96_fu_403_p1 );
    sensitive << ( tmp_13_fu_449_p3 );

    SC_METHOD(thread_xor_ln68_2_fu_733_p2);
    sensitive << ( shl_ln68_fu_727_p2 );

    SC_METHOD(thread_xor_ln68_4_fu_646_p2);
    sensitive << ( zext_ln68_17_fu_626_p1 );

    SC_METHOD(thread_xor_ln68_5_fu_769_p2);
    sensitive << ( zext_ln68_20_fu_763_p1 );

    SC_METHOD(thread_xor_ln68_fu_718_p2);
    sensitive << ( trunc_ln128_reg_955 );

    SC_METHOD(thread_xor_ln97_fu_457_p2);
    sensitive << ( trunc_ln96_6_fu_419_p4 );
    sensitive << ( trunc_ln96_2_fu_415_p1 );

    SC_METHOD(thread_xor_ln98_4_fu_523_p2);
    sensitive << ( trunc_ln98_2_fu_507_p4 );
    sensitive << ( xor_ln98_fu_501_p2 );

    SC_METHOD(thread_xor_ln98_fu_501_p2);
    sensitive << ( trunc_ln97_2_fu_463_p4 );
    sensitive << ( xor_ln97_fu_457_p2 );

    SC_METHOD(thread_y_4_fu_473_p2);
    sensitive << ( y_fu_429_p2 );
    sensitive << ( zext_ln97_fu_445_p1 );

    SC_METHOD(thread_y_5_fu_517_p2);
    sensitive << ( y_4_fu_473_p2 );
    sensitive << ( zext_ln98_fu_489_p1 );

    SC_METHOD(thread_y_6_fu_547_p2);
    sensitive << ( trunc_ln_fu_529_p4 );
    sensitive << ( xor_ln98_4_fu_523_p2 );

    SC_METHOD(thread_y_fu_429_p2);
    sensitive << ( x_0_i_reg_237 );
    sensitive << ( zext_ln96_fu_399_p1 );

    SC_METHOD(thread_zext_ln101_fu_591_p1);
    sensitive << ( xor_ln101_8_fu_585_p2 );

    SC_METHOD(thread_zext_ln130_fu_275_p1);
    sensitive << ( j_0104_reg_225 );

    SC_METHOD(thread_zext_ln133_fu_293_p1);
    sensitive << ( add_ln133_fu_287_p2 );

    SC_METHOD(thread_zext_ln134_2_fu_307_p1);
    sensitive << ( add_ln134_fu_302_p2 );

    SC_METHOD(thread_zext_ln134_fu_297_p1);
    sensitive << ( j_0104_reg_225 );

    SC_METHOD(thread_zext_ln141_fu_882_p1);
    sensitive << ( loop_0_reg_258 );

    SC_METHOD(thread_zext_ln68_14_fu_606_p1);
    sensitive << ( zext_ln68_cast_fu_595_p3 );

    SC_METHOD(thread_zext_ln68_15_fu_368_p1);
    sensitive << ( tmp_18_fu_358_p4 );

    SC_METHOD(thread_zext_ln68_16_fu_616_p1);
    sensitive << ( add_ln68_fu_610_p2 );

    SC_METHOD(thread_zext_ln68_17_fu_626_p1);
    sensitive << ( zext_ln68_cast_fu_595_p3 );

    SC_METHOD(thread_zext_ln68_18_fu_688_p1);
    sensitive << ( select_ln68_8_fu_674_p3 );

    SC_METHOD(thread_zext_ln68_19_fu_692_p1);
    sensitive << ( sub_ln68_5_fu_682_p2 );

    SC_METHOD(thread_zext_ln68_20_fu_763_p1);
    sensitive << ( zext_ln68_cast_reg_969 );

    SC_METHOD(thread_zext_ln68_21_fu_766_p1);
    sensitive << ( or_ln68_reg_980 );

    SC_METHOD(thread_zext_ln68_22_fu_800_p1);
    sensitive << ( select_ln68_11_fu_787_p3 );

    SC_METHOD(thread_zext_ln68_23_fu_804_p1);
    sensitive << ( select_ln68_10_fu_781_p3 );

    SC_METHOD(thread_zext_ln68_24_fu_808_p1);
    sensitive << ( sub_ln68_6_fu_794_p2 );

    SC_METHOD(thread_zext_ln68_25_fu_860_p1);
    sensitive << ( tmp_17_reg_944 );

    SC_METHOD(thread_zext_ln68_2_fu_723_p1);
    sensitive << ( xor_ln68_fu_718_p2 );

    SC_METHOD(thread_zext_ln68_cast_fu_595_p3);
    sensitive << ( tmp_17_reg_944 );

    SC_METHOD(thread_zext_ln68_fu_602_p1);
    sensitive << ( zext_ln68_cast_fu_595_p3 );

    SC_METHOD(thread_zext_ln87_fu_331_p1);
    sensitive << ( i_0_i_reg_247 );

    SC_METHOD(thread_zext_ln96_fu_399_p1);
    sensitive << ( lshr_ln_fu_389_p4 );

    SC_METHOD(thread_zext_ln97_fu_445_p1);
    sensitive << ( lshr_ln5_fu_435_p4 );

    SC_METHOD(thread_zext_ln98_fu_489_p1);
    sensitive << ( lshr_ln6_fu_479_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln130_reg_912 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state7 );
    sensitive << ( icmp_ln87_fu_336_p2 );
    sensitive << ( icmp_ln128_reg_960 );
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( icmp_ln140_fu_870_p2 );
    sensitive << ( ap_CS_fsm_state10 );

    ap_CS_fsm = "000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "matrix_mul_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
    sc_trace(mVcdFile, output_r_q0, "(port)output_r_q0");
    sc_trace(mVcdFile, matrix_offset, "(port)matrix_offset");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, temp_matrix2_address0, "temp_matrix2_address0");
    sc_trace(mVcdFile, temp_matrix2_ce0, "temp_matrix2_ce0");
    sc_trace(mVcdFile, temp_matrix2_q0, "temp_matrix2_q0");
    sc_trace(mVcdFile, i_fu_269_p2, "i_fu_269_p2");
    sc_trace(mVcdFile, i_reg_892, "i_reg_892");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, zext_ln134_fu_297_p1, "zext_ln134_fu_297_p1");
    sc_trace(mVcdFile, zext_ln134_reg_897, "zext_ln134_reg_897");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln130_fu_312_p2, "icmp_ln130_fu_312_p2");
    sc_trace(mVcdFile, icmp_ln130_reg_912, "icmp_ln130_reg_912");
    sc_trace(mVcdFile, j_fu_325_p2, "j_fu_325_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, prod_q0, "prod_q0");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, icmp_ln87_fu_336_p2, "icmp_ln87_fu_336_p2");
    sc_trace(mVcdFile, i_6_fu_342_p2, "i_6_fu_342_p2");
    sc_trace(mVcdFile, i_6_reg_939, "i_6_reg_939");
    sc_trace(mVcdFile, tmp_17_reg_944, "tmp_17_reg_944");
    sc_trace(mVcdFile, temp_addr_5_reg_950, "temp_addr_5_reg_950");
    sc_trace(mVcdFile, trunc_ln128_fu_373_p1, "trunc_ln128_fu_373_p1");
    sc_trace(mVcdFile, trunc_ln128_reg_955, "trunc_ln128_reg_955");
    sc_trace(mVcdFile, icmp_ln128_fu_377_p2, "icmp_ln128_fu_377_p2");
    sc_trace(mVcdFile, icmp_ln128_reg_960, "icmp_ln128_reg_960");
    sc_trace(mVcdFile, x_2_fu_383_p2, "x_2_fu_383_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, zext_ln68_cast_fu_595_p3, "zext_ln68_cast_fu_595_p3");
    sc_trace(mVcdFile, zext_ln68_cast_reg_969, "zext_ln68_cast_reg_969");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, add_ln68_fu_610_p2, "add_ln68_fu_610_p2");
    sc_trace(mVcdFile, add_ln68_reg_974, "add_ln68_reg_974");
    sc_trace(mVcdFile, or_ln68_fu_751_p2, "or_ln68_fu_751_p2");
    sc_trace(mVcdFile, or_ln68_reg_980, "or_ln68_reg_980");
    sc_trace(mVcdFile, icmp_ln68_2_fu_757_p2, "icmp_ln68_2_fu_757_p2");
    sc_trace(mVcdFile, icmp_ln68_2_reg_985, "icmp_ln68_2_reg_985");
    sc_trace(mVcdFile, loop_fu_876_p2, "loop_fu_876_p2");
    sc_trace(mVcdFile, loop_reg_996, "loop_reg_996");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, zext_ln141_fu_882_p1, "zext_ln141_fu_882_p1");
    sc_trace(mVcdFile, zext_ln141_reg_1001, "zext_ln141_reg_1001");
    sc_trace(mVcdFile, icmp_ln140_fu_870_p2, "icmp_ln140_fu_870_p2");
    sc_trace(mVcdFile, prod_address0, "prod_address0");
    sc_trace(mVcdFile, prod_ce0, "prod_ce0");
    sc_trace(mVcdFile, prod_we0, "prod_we0");
    sc_trace(mVcdFile, prod_d0, "prod_d0");
    sc_trace(mVcdFile, temp_address0, "temp_address0");
    sc_trace(mVcdFile, temp_ce0, "temp_ce0");
    sc_trace(mVcdFile, temp_we0, "temp_we0");
    sc_trace(mVcdFile, temp_d0, "temp_d0");
    sc_trace(mVcdFile, temp_q0, "temp_q0");
    sc_trace(mVcdFile, bitNumber_assign105_reg_213, "bitNumber_assign105_reg_213");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, j_0104_reg_225, "j_0104_reg_225");
    sc_trace(mVcdFile, x_0_i_reg_237, "x_0_i_reg_237");
    sc_trace(mVcdFile, i_0_i_reg_247, "i_0_i_reg_247");
    sc_trace(mVcdFile, loop_0_reg_258, "loop_0_reg_258");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, zext_ln134_2_fu_307_p1, "zext_ln134_2_fu_307_p1");
    sc_trace(mVcdFile, zext_ln87_fu_331_p1, "zext_ln87_fu_331_p1");
    sc_trace(mVcdFile, zext_ln68_15_fu_368_p1, "zext_ln68_15_fu_368_p1");
    sc_trace(mVcdFile, shl_ln68_7_fu_863_p2, "shl_ln68_7_fu_863_p2");
    sc_trace(mVcdFile, shl_ln_fu_279_p3, "shl_ln_fu_279_p3");
    sc_trace(mVcdFile, zext_ln130_fu_275_p1, "zext_ln130_fu_275_p1");
    sc_trace(mVcdFile, add_ln133_fu_287_p2, "add_ln133_fu_287_p2");
    sc_trace(mVcdFile, zext_ln133_fu_293_p1, "zext_ln133_fu_293_p1");
    sc_trace(mVcdFile, add_ln134_fu_302_p2, "add_ln134_fu_302_p2");
    sc_trace(mVcdFile, tmp_18_fu_358_p4, "tmp_18_fu_358_p4");
    sc_trace(mVcdFile, lshr_ln_fu_389_p4, "lshr_ln_fu_389_p4");
    sc_trace(mVcdFile, zext_ln96_fu_399_p1, "zext_ln96_fu_399_p1");
    sc_trace(mVcdFile, y_fu_429_p2, "y_fu_429_p2");
    sc_trace(mVcdFile, lshr_ln5_fu_435_p4, "lshr_ln5_fu_435_p4");
    sc_trace(mVcdFile, trunc_ln96_6_fu_419_p4, "trunc_ln96_6_fu_419_p4");
    sc_trace(mVcdFile, trunc_ln96_2_fu_415_p1, "trunc_ln96_2_fu_415_p1");
    sc_trace(mVcdFile, zext_ln97_fu_445_p1, "zext_ln97_fu_445_p1");
    sc_trace(mVcdFile, y_4_fu_473_p2, "y_4_fu_473_p2");
    sc_trace(mVcdFile, lshr_ln6_fu_479_p4, "lshr_ln6_fu_479_p4");
    sc_trace(mVcdFile, trunc_ln97_2_fu_463_p4, "trunc_ln97_2_fu_463_p4");
    sc_trace(mVcdFile, xor_ln97_fu_457_p2, "xor_ln97_fu_457_p2");
    sc_trace(mVcdFile, zext_ln98_fu_489_p1, "zext_ln98_fu_489_p1");
    sc_trace(mVcdFile, trunc_ln98_2_fu_507_p4, "trunc_ln98_2_fu_507_p4");
    sc_trace(mVcdFile, xor_ln98_fu_501_p2, "xor_ln98_fu_501_p2");
    sc_trace(mVcdFile, y_5_fu_517_p2, "y_5_fu_517_p2");
    sc_trace(mVcdFile, trunc_ln_fu_529_p4, "trunc_ln_fu_529_p4");
    sc_trace(mVcdFile, xor_ln98_4_fu_523_p2, "xor_ln98_4_fu_523_p2");
    sc_trace(mVcdFile, y_6_fu_547_p2, "y_6_fu_547_p2");
    sc_trace(mVcdFile, trunc_ln96_fu_403_p1, "trunc_ln96_fu_403_p1");
    sc_trace(mVcdFile, tmp_13_fu_449_p3, "tmp_13_fu_449_p3");
    sc_trace(mVcdFile, xor_ln101_fu_561_p2, "xor_ln101_fu_561_p2");
    sc_trace(mVcdFile, tmp_12_fu_407_p3, "tmp_12_fu_407_p3");
    sc_trace(mVcdFile, tmp_15_fu_539_p3, "tmp_15_fu_539_p3");
    sc_trace(mVcdFile, tmp_16_fu_553_p3, "tmp_16_fu_553_p3");
    sc_trace(mVcdFile, xor_ln101_6_fu_573_p2, "xor_ln101_6_fu_573_p2");
    sc_trace(mVcdFile, tmp_14_fu_493_p3, "tmp_14_fu_493_p3");
    sc_trace(mVcdFile, xor_ln101_7_fu_579_p2, "xor_ln101_7_fu_579_p2");
    sc_trace(mVcdFile, xor_ln101_5_fu_567_p2, "xor_ln101_5_fu_567_p2");
    sc_trace(mVcdFile, xor_ln101_8_fu_585_p2, "xor_ln101_8_fu_585_p2");
    sc_trace(mVcdFile, zext_ln68_fu_602_p1, "zext_ln68_fu_602_p1");
    sc_trace(mVcdFile, zext_ln68_14_fu_606_p1, "zext_ln68_14_fu_606_p1");
    sc_trace(mVcdFile, zext_ln68_16_fu_616_p1, "zext_ln68_16_fu_616_p1");
    sc_trace(mVcdFile, zext_ln68_17_fu_626_p1, "zext_ln68_17_fu_626_p1");
    sc_trace(mVcdFile, icmp_ln68_fu_620_p2, "icmp_ln68_fu_620_p2");
    sc_trace(mVcdFile, sub_ln68_fu_640_p2, "sub_ln68_fu_640_p2");
    sc_trace(mVcdFile, sub_ln68_4_fu_652_p2, "sub_ln68_4_fu_652_p2");
    sc_trace(mVcdFile, tmp_19_fu_630_p4, "tmp_19_fu_630_p4");
    sc_trace(mVcdFile, xor_ln68_4_fu_646_p2, "xor_ln68_4_fu_646_p2");
    sc_trace(mVcdFile, select_ln68_fu_658_p3, "select_ln68_fu_658_p3");
    sc_trace(mVcdFile, select_ln68_8_fu_674_p3, "select_ln68_8_fu_674_p3");
    sc_trace(mVcdFile, sub_ln68_5_fu_682_p2, "sub_ln68_5_fu_682_p2");
    sc_trace(mVcdFile, select_ln68_7_fu_666_p3, "select_ln68_7_fu_666_p3");
    sc_trace(mVcdFile, zext_ln68_18_fu_688_p1, "zext_ln68_18_fu_688_p1");
    sc_trace(mVcdFile, zext_ln68_19_fu_692_p1, "zext_ln68_19_fu_692_p1");
    sc_trace(mVcdFile, lshr_ln68_fu_696_p2, "lshr_ln68_fu_696_p2");
    sc_trace(mVcdFile, lshr_ln68_3_fu_702_p2, "lshr_ln68_3_fu_702_p2");
    sc_trace(mVcdFile, and_ln68_4_fu_708_p2, "and_ln68_4_fu_708_p2");
    sc_trace(mVcdFile, xor_ln68_fu_718_p2, "xor_ln68_fu_718_p2");
    sc_trace(mVcdFile, zext_ln68_2_fu_723_p1, "zext_ln68_2_fu_723_p1");
    sc_trace(mVcdFile, shl_ln68_fu_727_p2, "shl_ln68_fu_727_p2");
    sc_trace(mVcdFile, zext_ln101_fu_591_p1, "zext_ln101_fu_591_p1");
    sc_trace(mVcdFile, trunc_ln68_fu_714_p1, "trunc_ln68_fu_714_p1");
    sc_trace(mVcdFile, xor_ln68_2_fu_733_p2, "xor_ln68_2_fu_733_p2");
    sc_trace(mVcdFile, and_ln68_fu_745_p2, "and_ln68_fu_745_p2");
    sc_trace(mVcdFile, shl_ln68_2_fu_739_p2, "shl_ln68_2_fu_739_p2");
    sc_trace(mVcdFile, zext_ln68_20_fu_763_p1, "zext_ln68_20_fu_763_p1");
    sc_trace(mVcdFile, xor_ln68_5_fu_769_p2, "xor_ln68_5_fu_769_p2");
    sc_trace(mVcdFile, select_ln68_9_fu_775_p3, "select_ln68_9_fu_775_p3");
    sc_trace(mVcdFile, select_ln68_11_fu_787_p3, "select_ln68_11_fu_787_p3");
    sc_trace(mVcdFile, select_ln68_10_fu_781_p3, "select_ln68_10_fu_781_p3");
    sc_trace(mVcdFile, sub_ln68_6_fu_794_p2, "sub_ln68_6_fu_794_p2");
    sc_trace(mVcdFile, zext_ln68_21_fu_766_p1, "zext_ln68_21_fu_766_p1");
    sc_trace(mVcdFile, zext_ln68_22_fu_800_p1, "zext_ln68_22_fu_800_p1");
    sc_trace(mVcdFile, shl_ln68_5_fu_812_p2, "shl_ln68_5_fu_812_p2");
    sc_trace(mVcdFile, tmp_20_fu_818_p4, "tmp_20_fu_818_p4");
    sc_trace(mVcdFile, zext_ln68_23_fu_804_p1, "zext_ln68_23_fu_804_p1");
    sc_trace(mVcdFile, zext_ln68_24_fu_808_p1, "zext_ln68_24_fu_808_p1");
    sc_trace(mVcdFile, shl_ln68_6_fu_835_p2, "shl_ln68_6_fu_835_p2");
    sc_trace(mVcdFile, lshr_ln68_4_fu_841_p2, "lshr_ln68_4_fu_841_p2");
    sc_trace(mVcdFile, select_ln68_12_fu_828_p3, "select_ln68_12_fu_828_p3");
    sc_trace(mVcdFile, and_ln68_5_fu_847_p2, "and_ln68_5_fu_847_p2");
    sc_trace(mVcdFile, zext_ln68_25_fu_860_p1, "zext_ln68_25_fu_860_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

matrix_mul::~matrix_mul() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete temp_matrix2_U;
    delete prod_U;
    delete temp_U;
}

void matrix_mul::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln128_reg_960.read()))) {
        bitNumber_assign105_reg_213 = i_reg_892.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        bitNumber_assign105_reg_213 = ap_const_lv7_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i_0_i_reg_247 = i_6_reg_939.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        i_0_i_reg_247 = ap_const_lv3_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(icmp_ln130_reg_912.read(), ap_const_lv1_0))) {
        j_0104_reg_225 = j_fu_325_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        j_0104_reg_225 = ap_const_lv2_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln128_reg_960.read()))) {
        loop_0_reg_258 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        loop_0_reg_258 = loop_reg_996.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        x_0_i_reg_237 = x_2_fu_383_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        x_0_i_reg_237 = prod_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        add_ln68_reg_974 = add_ln68_fu_610_p2.read();
        icmp_ln68_2_reg_985 = icmp_ln68_2_fu_757_p2.read();
        or_ln68_reg_980 = or_ln68_fu_751_p2.read();
        zext_ln68_cast_reg_969 = zext_ln68_cast_fu_595_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(icmp_ln87_fu_336_p2.read(), ap_const_lv1_0))) {
        i_6_reg_939 = i_6_fu_342_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_892 = i_fu_269_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(icmp_ln87_fu_336_p2.read(), ap_const_lv1_1))) {
        icmp_ln128_reg_960 = icmp_ln128_fu_377_p2.read();
        temp_addr_5_reg_950 =  (sc_lv<6>) (zext_ln68_15_fu_368_p1.read());
        tmp_17_reg_944 = bitNumber_assign105_reg_213.read().range(4, 3);
        trunc_ln128_reg_955 = trunc_ln128_fu_373_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        icmp_ln130_reg_912 = icmp_ln130_fu_312_p2.read();
        zext_ln134_reg_897 = zext_ln134_fu_297_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        loop_reg_996 = loop_fu_876_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln140_fu_870_p2.read()))) {
        zext_ln141_reg_1001 = zext_ln141_fu_882_p1.read();
    }
}

void matrix_mul::thread_add_ln133_fu_287_p2() {
    add_ln133_fu_287_p2 = (!shl_ln_fu_279_p3.read().is_01() || !zext_ln130_fu_275_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(shl_ln_fu_279_p3.read()) + sc_biguint<9>(zext_ln130_fu_275_p1.read()));
}

void matrix_mul::thread_add_ln134_fu_302_p2() {
    add_ln134_fu_302_p2 = (!zext_ln133_fu_293_p1.read().is_01() || !matrix_offset.read().is_01())? sc_lv<14>(): (sc_biguint<14>(zext_ln133_fu_293_p1.read()) + sc_biguint<14>(matrix_offset.read()));
}

void matrix_mul::thread_add_ln68_fu_610_p2() {
    add_ln68_fu_610_p2 = (!ap_const_lv6_7.is_01() || !zext_ln68_fu_602_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_7) + sc_biguint<6>(zext_ln68_fu_602_p1.read()));
}

void matrix_mul::thread_and_ln68_4_fu_708_p2() {
    and_ln68_4_fu_708_p2 = (lshr_ln68_fu_696_p2.read() & lshr_ln68_3_fu_702_p2.read());
}

void matrix_mul::thread_and_ln68_5_fu_847_p2() {
    and_ln68_5_fu_847_p2 = (shl_ln68_6_fu_835_p2.read() & lshr_ln68_4_fu_841_p2.read());
}

void matrix_mul::thread_and_ln68_fu_745_p2() {
    and_ln68_fu_745_p2 = (trunc_ln68_fu_714_p1.read() & xor_ln68_2_fu_733_p2.read());
}

void matrix_mul::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void matrix_mul::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void matrix_mul::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void matrix_mul::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[11];
}

void matrix_mul::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void matrix_mul::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void matrix_mul::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void matrix_mul::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void matrix_mul::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void matrix_mul::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void matrix_mul::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void matrix_mul::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void matrix_mul::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln140_fu_870_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void matrix_mul::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void matrix_mul::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln140_fu_870_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void matrix_mul::thread_i_6_fu_342_p2() {
    i_6_fu_342_p2 = (!i_0_i_reg_247.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_0_i_reg_247.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void matrix_mul::thread_i_fu_269_p2() {
    i_fu_269_p2 = (!bitNumber_assign105_reg_213.read().is_01() || !ap_const_lv7_1.is_01())? sc_lv<7>(): (sc_biguint<7>(bitNumber_assign105_reg_213.read()) + sc_biguint<7>(ap_const_lv7_1));
}

void matrix_mul::thread_icmp_ln128_fu_377_p2() {
    icmp_ln128_fu_377_p2 = (!bitNumber_assign105_reg_213.read().is_01() || !ap_const_lv7_7F.is_01())? sc_lv<1>(): sc_lv<1>(bitNumber_assign105_reg_213.read() == ap_const_lv7_7F);
}

void matrix_mul::thread_icmp_ln130_fu_312_p2() {
    icmp_ln130_fu_312_p2 = (!j_0104_reg_225.read().is_01() || !ap_const_lv2_3.is_01())? sc_lv<1>(): sc_lv<1>(j_0104_reg_225.read() == ap_const_lv2_3);
}

void matrix_mul::thread_icmp_ln140_fu_870_p2() {
    icmp_ln140_fu_870_p2 = (!loop_0_reg_258.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(loop_0_reg_258.read() == ap_const_lv3_4);
}

void matrix_mul::thread_icmp_ln68_2_fu_757_p2() {
    icmp_ln68_2_fu_757_p2 = (!zext_ln68_14_fu_606_p1.read().is_01() || !zext_ln68_16_fu_616_p1.read().is_01())? sc_lv<1>(): (sc_biguint<64>(zext_ln68_14_fu_606_p1.read()) > sc_biguint<64>(zext_ln68_16_fu_616_p1.read()));
}

void matrix_mul::thread_icmp_ln68_fu_620_p2() {
    icmp_ln68_fu_620_p2 = (!zext_ln68_14_fu_606_p1.read().is_01() || !zext_ln68_16_fu_616_p1.read().is_01())? sc_lv<1>(): (sc_biguint<64>(zext_ln68_14_fu_606_p1.read()) > sc_biguint<64>(zext_ln68_16_fu_616_p1.read()));
}

void matrix_mul::thread_icmp_ln87_fu_336_p2() {
    icmp_ln87_fu_336_p2 = (!i_0_i_reg_247.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_reg_247.read() == ap_const_lv3_4);
}

void matrix_mul::thread_j_fu_325_p2() {
    j_fu_325_p2 = (!j_0104_reg_225.read().is_01() || !ap_const_lv2_1.is_01())? sc_lv<2>(): (sc_biguint<2>(j_0104_reg_225.read()) + sc_biguint<2>(ap_const_lv2_1));
}

void matrix_mul::thread_loop_fu_876_p2() {
    loop_fu_876_p2 = (!loop_0_reg_258.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(loop_0_reg_258.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void matrix_mul::thread_lshr_ln5_fu_435_p4() {
    lshr_ln5_fu_435_p4 = y_fu_429_p2.read().range(31, 2);
}

void matrix_mul::thread_lshr_ln68_3_fu_702_p2() {
    lshr_ln68_3_fu_702_p2 = (!zext_ln68_19_fu_692_p1.read().is_01())? sc_lv<32>(): ap_const_lv32_FFFFFFFF >> (unsigned short)zext_ln68_19_fu_692_p1.read().to_uint();
}

void matrix_mul::thread_lshr_ln68_4_fu_841_p2() {
    lshr_ln68_4_fu_841_p2 = (!zext_ln68_24_fu_808_p1.read().is_01())? sc_lv<32>(): ap_const_lv32_FFFFFFFF >> (unsigned short)zext_ln68_24_fu_808_p1.read().to_uint();
}

void matrix_mul::thread_lshr_ln68_fu_696_p2() {
    lshr_ln68_fu_696_p2 = (!zext_ln68_18_fu_688_p1.read().is_01())? sc_lv<32>(): select_ln68_7_fu_666_p3.read() >> (unsigned short)zext_ln68_18_fu_688_p1.read().to_uint();
}

void matrix_mul::thread_lshr_ln6_fu_479_p4() {
    lshr_ln6_fu_479_p4 = y_4_fu_473_p2.read().range(31, 4);
}

void matrix_mul::thread_lshr_ln_fu_389_p4() {
    lshr_ln_fu_389_p4 = x_0_i_reg_237.read().range(31, 1);
}

void matrix_mul::thread_or_ln68_fu_751_p2() {
    or_ln68_fu_751_p2 = (and_ln68_fu_745_p2.read() | shl_ln68_2_fu_739_p2.read());
}

void matrix_mul::thread_output_r_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        output_r_address0 =  (sc_lv<3>) (zext_ln141_reg_1001.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        output_r_address0 =  (sc_lv<3>) (zext_ln134_fu_297_p1.read());
    } else {
        output_r_address0 = "XXX";
    }
}

void matrix_mul::thread_output_r_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void matrix_mul::thread_output_r_d0() {
    output_r_d0 = temp_q0.read();
}

void matrix_mul::thread_output_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void matrix_mul::thread_prod_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        prod_address0 =  (sc_lv<6>) (zext_ln87_fu_331_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        prod_address0 =  (sc_lv<6>) (ap_const_lv64_0);
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        prod_address0 =  (sc_lv<6>) (zext_ln134_reg_897.read());
    } else {
        prod_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void matrix_mul::thread_prod_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()))) {
        prod_ce0 = ap_const_logic_1;
    } else {
        prod_ce0 = ap_const_logic_0;
    }
}

void matrix_mul::thread_prod_d0() {
    prod_d0 = (temp_matrix2_q0.read() & output_r_q0.read());
}

void matrix_mul::thread_prod_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        prod_we0 = ap_const_logic_1;
    } else {
        prod_we0 = ap_const_logic_0;
    }
}

void matrix_mul::thread_select_ln68_10_fu_781_p3() {
    select_ln68_10_fu_781_p3 = (!icmp_ln68_2_reg_985.read()[0].is_01())? sc_lv<6>(): ((icmp_ln68_2_reg_985.read()[0].to_bool())? add_ln68_reg_974.read(): zext_ln68_20_fu_763_p1.read());
}

void matrix_mul::thread_select_ln68_11_fu_787_p3() {
    select_ln68_11_fu_787_p3 = (!icmp_ln68_2_reg_985.read()[0].is_01())? sc_lv<6>(): ((icmp_ln68_2_reg_985.read()[0].to_bool())? xor_ln68_5_fu_769_p2.read(): zext_ln68_20_fu_763_p1.read());
}

void matrix_mul::thread_select_ln68_12_fu_828_p3() {
    select_ln68_12_fu_828_p3 = (!icmp_ln68_2_reg_985.read()[0].is_01())? sc_lv<32>(): ((icmp_ln68_2_reg_985.read()[0].to_bool())? tmp_20_fu_818_p4.read(): shl_ln68_5_fu_812_p2.read());
}

void matrix_mul::thread_select_ln68_7_fu_666_p3() {
    select_ln68_7_fu_666_p3 = (!icmp_ln68_fu_620_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln68_fu_620_p2.read()[0].to_bool())? tmp_19_fu_630_p4.read(): temp_q0.read());
}

void matrix_mul::thread_select_ln68_8_fu_674_p3() {
    select_ln68_8_fu_674_p3 = (!icmp_ln68_fu_620_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln68_fu_620_p2.read()[0].to_bool())? xor_ln68_4_fu_646_p2.read(): zext_ln68_17_fu_626_p1.read());
}

void matrix_mul::thread_select_ln68_9_fu_775_p3() {
    select_ln68_9_fu_775_p3 = (!icmp_ln68_2_reg_985.read()[0].is_01())? sc_lv<6>(): ((icmp_ln68_2_reg_985.read()[0].to_bool())? zext_ln68_20_fu_763_p1.read(): add_ln68_reg_974.read());
}

void matrix_mul::thread_select_ln68_fu_658_p3() {
    select_ln68_fu_658_p3 = (!icmp_ln68_fu_620_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln68_fu_620_p2.read()[0].to_bool())? sub_ln68_fu_640_p2.read(): sub_ln68_4_fu_652_p2.read());
}

void matrix_mul::thread_shl_ln68_2_fu_739_p2() {
    shl_ln68_2_fu_739_p2 = (!zext_ln68_2_fu_723_p1.read().is_01())? sc_lv<8>(): zext_ln101_fu_591_p1.read() << (unsigned short)zext_ln68_2_fu_723_p1.read().to_uint();
}

void matrix_mul::thread_shl_ln68_5_fu_812_p2() {
    shl_ln68_5_fu_812_p2 = (!zext_ln68_22_fu_800_p1.read().is_01())? sc_lv<32>(): zext_ln68_21_fu_766_p1.read() << (unsigned short)zext_ln68_22_fu_800_p1.read().to_uint();
}

void matrix_mul::thread_shl_ln68_6_fu_835_p2() {
    shl_ln68_6_fu_835_p2 = (!zext_ln68_23_fu_804_p1.read().is_01())? sc_lv<32>(): ap_const_lv32_FFFFFFFF << (unsigned short)zext_ln68_23_fu_804_p1.read().to_uint();
}

void matrix_mul::thread_shl_ln68_7_fu_863_p2() {
    shl_ln68_7_fu_863_p2 = (!zext_ln68_25_fu_860_p1.read().is_01())? sc_lv<4>(): ap_const_lv4_1 << (unsigned short)zext_ln68_25_fu_860_p1.read().to_uint();
}

void matrix_mul::thread_shl_ln68_fu_727_p2() {
    shl_ln68_fu_727_p2 = (!zext_ln68_2_fu_723_p1.read().is_01())? sc_lv<8>(): ap_const_lv8_1 << (unsigned short)zext_ln68_2_fu_723_p1.read().to_uint();
}

void matrix_mul::thread_shl_ln_fu_279_p3() {
    shl_ln_fu_279_p3 = esl_concat<7,2>(bitNumber_assign105_reg_213.read(), ap_const_lv2_0);
}

void matrix_mul::thread_sub_ln68_4_fu_652_p2() {
    sub_ln68_4_fu_652_p2 = (!add_ln68_fu_610_p2.read().is_01() || !zext_ln68_17_fu_626_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(add_ln68_fu_610_p2.read()) - sc_biguint<6>(zext_ln68_17_fu_626_p1.read()));
}

void matrix_mul::thread_sub_ln68_5_fu_682_p2() {
    sub_ln68_5_fu_682_p2 = (!ap_const_lv6_1F.is_01() || !select_ln68_fu_658_p3.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1F) - sc_biguint<6>(select_ln68_fu_658_p3.read()));
}

void matrix_mul::thread_sub_ln68_6_fu_794_p2() {
    sub_ln68_6_fu_794_p2 = (!ap_const_lv6_1F.is_01() || !select_ln68_9_fu_775_p3.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1F) - sc_biguint<6>(select_ln68_9_fu_775_p3.read()));
}

void matrix_mul::thread_sub_ln68_fu_640_p2() {
    sub_ln68_fu_640_p2 = (!zext_ln68_17_fu_626_p1.read().is_01() || !add_ln68_fu_610_p2.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln68_17_fu_626_p1.read()) - sc_biguint<6>(add_ln68_fu_610_p2.read()));
}

void matrix_mul::thread_temp_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        temp_address0 =  (sc_lv<6>) (zext_ln141_fu_882_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        temp_address0 = temp_addr_5_reg_950.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        temp_address0 =  (sc_lv<6>) (zext_ln68_15_fu_368_p1.read());
    } else {
        temp_address0 =  (sc_lv<6>) ("XXXXXX");
    }
}

void matrix_mul::thread_temp_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()))) {
        temp_ce0 = ap_const_logic_1;
    } else {
        temp_ce0 = ap_const_logic_0;
    }
}

void matrix_mul::thread_temp_d0() {
    temp_d0 = (select_ln68_12_fu_828_p3.read() & and_ln68_5_fu_847_p2.read());
}

void matrix_mul::thread_temp_matrix2_address0() {
    temp_matrix2_address0 =  (sc_lv<14>) (zext_ln134_2_fu_307_p1.read());
}

void matrix_mul::thread_temp_matrix2_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        temp_matrix2_ce0 = ap_const_logic_1;
    } else {
        temp_matrix2_ce0 = ap_const_logic_0;
    }
}

void matrix_mul::thread_temp_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        temp_we0 = shl_ln68_7_fu_863_p2.read();
    } else {
        temp_we0 = ap_const_lv4_0;
    }
}

void matrix_mul::thread_tmp_12_fu_407_p3() {
    tmp_12_fu_407_p3 = x_0_i_reg_237.read().range(1, 1);
}

void matrix_mul::thread_tmp_13_fu_449_p3() {
    tmp_13_fu_449_p3 = y_fu_429_p2.read().range(2, 2);
}

void matrix_mul::thread_tmp_14_fu_493_p3() {
    tmp_14_fu_493_p3 = y_4_fu_473_p2.read().range(4, 4);
}

void matrix_mul::thread_tmp_15_fu_539_p3() {
    tmp_15_fu_539_p3 = y_5_fu_517_p2.read().range(8, 8);
}

void matrix_mul::thread_tmp_16_fu_553_p3() {
    tmp_16_fu_553_p3 = y_6_fu_547_p2.read().range(16, 16);
}

void matrix_mul::thread_tmp_18_fu_358_p4() {
    tmp_18_fu_358_p4 = bitNumber_assign105_reg_213.read().range(6, 5);
}

void matrix_mul::thread_tmp_19_fu_630_p4() {
    tmp_19_fu_630_p4 = temp_q0.read().range(0, 31);
}

void matrix_mul::thread_tmp_20_fu_818_p4() {
    tmp_20_fu_818_p4 = shl_ln68_5_fu_812_p2.read().range(0, 31);
}

void matrix_mul::thread_trunc_ln128_fu_373_p1() {
    trunc_ln128_fu_373_p1 = bitNumber_assign105_reg_213.read().range(3-1, 0);
}

void matrix_mul::thread_trunc_ln68_fu_714_p1() {
    trunc_ln68_fu_714_p1 = and_ln68_4_fu_708_p2.read().range(8-1, 0);
}

void matrix_mul::thread_trunc_ln96_2_fu_415_p1() {
    trunc_ln96_2_fu_415_p1 = x_0_i_reg_237.read().range(24-1, 0);
}

void matrix_mul::thread_trunc_ln96_6_fu_419_p4() {
    trunc_ln96_6_fu_419_p4 = x_0_i_reg_237.read().range(24, 1);
}

void matrix_mul::thread_trunc_ln96_fu_403_p1() {
    trunc_ln96_fu_403_p1 = x_0_i_reg_237.read().range(1-1, 0);
}

void matrix_mul::thread_trunc_ln97_2_fu_463_p4() {
    trunc_ln97_2_fu_463_p4 = y_fu_429_p2.read().range(25, 2);
}

void matrix_mul::thread_trunc_ln98_2_fu_507_p4() {
    trunc_ln98_2_fu_507_p4 = y_4_fu_473_p2.read().range(27, 4);
}

void matrix_mul::thread_trunc_ln_fu_529_p4() {
    trunc_ln_fu_529_p4 = y_5_fu_517_p2.read().range(31, 8);
}

void matrix_mul::thread_x_2_fu_383_p2() {
    x_2_fu_383_p2 = (prod_q0.read() ^ x_0_i_reg_237.read());
}

void matrix_mul::thread_xor_ln101_5_fu_567_p2() {
    xor_ln101_5_fu_567_p2 = (xor_ln101_fu_561_p2.read() ^ tmp_12_fu_407_p3.read());
}

void matrix_mul::thread_xor_ln101_6_fu_573_p2() {
    xor_ln101_6_fu_573_p2 = (tmp_15_fu_539_p3.read() ^ tmp_16_fu_553_p3.read());
}

void matrix_mul::thread_xor_ln101_7_fu_579_p2() {
    xor_ln101_7_fu_579_p2 = (xor_ln101_6_fu_573_p2.read() ^ tmp_14_fu_493_p3.read());
}

void matrix_mul::thread_xor_ln101_8_fu_585_p2() {
    xor_ln101_8_fu_585_p2 = (xor_ln101_7_fu_579_p2.read() ^ xor_ln101_5_fu_567_p2.read());
}

void matrix_mul::thread_xor_ln101_fu_561_p2() {
    xor_ln101_fu_561_p2 = (trunc_ln96_fu_403_p1.read() ^ tmp_13_fu_449_p3.read());
}

void matrix_mul::thread_xor_ln68_2_fu_733_p2() {
    xor_ln68_2_fu_733_p2 = (shl_ln68_fu_727_p2.read() ^ ap_const_lv8_FF);
}

void matrix_mul::thread_xor_ln68_4_fu_646_p2() {
    xor_ln68_4_fu_646_p2 = (zext_ln68_17_fu_626_p1.read() ^ ap_const_lv6_1F);
}

void matrix_mul::thread_xor_ln68_5_fu_769_p2() {
    xor_ln68_5_fu_769_p2 = (zext_ln68_20_fu_763_p1.read() ^ ap_const_lv6_1F);
}

void matrix_mul::thread_xor_ln68_fu_718_p2() {
    xor_ln68_fu_718_p2 = (trunc_ln128_reg_955.read() ^ ap_const_lv3_7);
}

void matrix_mul::thread_xor_ln97_fu_457_p2() {
    xor_ln97_fu_457_p2 = (trunc_ln96_6_fu_419_p4.read() ^ trunc_ln96_2_fu_415_p1.read());
}

void matrix_mul::thread_xor_ln98_4_fu_523_p2() {
    xor_ln98_4_fu_523_p2 = (trunc_ln98_2_fu_507_p4.read() ^ xor_ln98_fu_501_p2.read());
}

void matrix_mul::thread_xor_ln98_fu_501_p2() {
    xor_ln98_fu_501_p2 = (trunc_ln97_2_fu_463_p4.read() ^ xor_ln97_fu_457_p2.read());
}

void matrix_mul::thread_y_4_fu_473_p2() {
    y_4_fu_473_p2 = (zext_ln97_fu_445_p1.read() ^ y_fu_429_p2.read());
}

void matrix_mul::thread_y_5_fu_517_p2() {
    y_5_fu_517_p2 = (zext_ln98_fu_489_p1.read() ^ y_4_fu_473_p2.read());
}

void matrix_mul::thread_y_6_fu_547_p2() {
    y_6_fu_547_p2 = (trunc_ln_fu_529_p4.read() ^ xor_ln98_4_fu_523_p2.read());
}

void matrix_mul::thread_y_fu_429_p2() {
    y_fu_429_p2 = (zext_ln96_fu_399_p1.read() ^ x_0_i_reg_237.read());
}

void matrix_mul::thread_zext_ln101_fu_591_p1() {
    zext_ln101_fu_591_p1 = esl_zext<8,1>(xor_ln101_8_fu_585_p2.read());
}

void matrix_mul::thread_zext_ln130_fu_275_p1() {
    zext_ln130_fu_275_p1 = esl_zext<9,2>(j_0104_reg_225.read());
}

void matrix_mul::thread_zext_ln133_fu_293_p1() {
    zext_ln133_fu_293_p1 = esl_zext<14,9>(add_ln133_fu_287_p2.read());
}

void matrix_mul::thread_zext_ln134_2_fu_307_p1() {
    zext_ln134_2_fu_307_p1 = esl_zext<64,14>(add_ln134_fu_302_p2.read());
}

void matrix_mul::thread_zext_ln134_fu_297_p1() {
    zext_ln134_fu_297_p1 = esl_zext<64,2>(j_0104_reg_225.read());
}

void matrix_mul::thread_zext_ln141_fu_882_p1() {
    zext_ln141_fu_882_p1 = esl_zext<64,3>(loop_0_reg_258.read());
}

void matrix_mul::thread_zext_ln68_14_fu_606_p1() {
    zext_ln68_14_fu_606_p1 = esl_zext<64,5>(zext_ln68_cast_fu_595_p3.read());
}

void matrix_mul::thread_zext_ln68_15_fu_368_p1() {
    zext_ln68_15_fu_368_p1 = esl_zext<64,2>(tmp_18_fu_358_p4.read());
}

void matrix_mul::thread_zext_ln68_16_fu_616_p1() {
    zext_ln68_16_fu_616_p1 = esl_zext<64,6>(add_ln68_fu_610_p2.read());
}

void matrix_mul::thread_zext_ln68_17_fu_626_p1() {
    zext_ln68_17_fu_626_p1 = esl_zext<6,5>(zext_ln68_cast_fu_595_p3.read());
}

void matrix_mul::thread_zext_ln68_18_fu_688_p1() {
    zext_ln68_18_fu_688_p1 = esl_zext<32,6>(select_ln68_8_fu_674_p3.read());
}

void matrix_mul::thread_zext_ln68_19_fu_692_p1() {
    zext_ln68_19_fu_692_p1 = esl_zext<32,6>(sub_ln68_5_fu_682_p2.read());
}

void matrix_mul::thread_zext_ln68_20_fu_763_p1() {
    zext_ln68_20_fu_763_p1 = esl_zext<6,5>(zext_ln68_cast_reg_969.read());
}

void matrix_mul::thread_zext_ln68_21_fu_766_p1() {
    zext_ln68_21_fu_766_p1 = esl_zext<32,8>(or_ln68_reg_980.read());
}

void matrix_mul::thread_zext_ln68_22_fu_800_p1() {
    zext_ln68_22_fu_800_p1 = esl_zext<32,6>(select_ln68_11_fu_787_p3.read());
}

void matrix_mul::thread_zext_ln68_23_fu_804_p1() {
    zext_ln68_23_fu_804_p1 = esl_zext<32,6>(select_ln68_10_fu_781_p3.read());
}

void matrix_mul::thread_zext_ln68_24_fu_808_p1() {
    zext_ln68_24_fu_808_p1 = esl_zext<32,6>(sub_ln68_6_fu_794_p2.read());
}

void matrix_mul::thread_zext_ln68_25_fu_860_p1() {
    zext_ln68_25_fu_860_p1 = esl_zext<4,2>(tmp_17_reg_944.read());
}

void matrix_mul::thread_zext_ln68_2_fu_723_p1() {
    zext_ln68_2_fu_723_p1 = esl_zext<8,3>(xor_ln68_fu_718_p2.read());
}

void matrix_mul::thread_zext_ln68_cast_fu_595_p3() {
    zext_ln68_cast_fu_595_p3 = esl_concat<2,3>(tmp_17_reg_944.read(), ap_const_lv3_0);
}

void matrix_mul::thread_zext_ln68_fu_602_p1() {
    zext_ln68_fu_602_p1 = esl_zext<6,5>(zext_ln68_cast_fu_595_p3.read());
}

void matrix_mul::thread_zext_ln87_fu_331_p1() {
    zext_ln87_fu_331_p1 = esl_zext<64,3>(i_0_i_reg_247.read());
}

void matrix_mul::thread_zext_ln96_fu_399_p1() {
    zext_ln96_fu_399_p1 = esl_zext<32,31>(lshr_ln_fu_389_p4.read());
}

void matrix_mul::thread_zext_ln97_fu_445_p1() {
    zext_ln97_fu_445_p1 = esl_zext<32,30>(lshr_ln5_fu_435_p4.read());
}

void matrix_mul::thread_zext_ln98_fu_489_p1() {
    zext_ln98_fu_489_p1 = esl_zext<32,28>(lshr_ln6_fu_479_p4.read());
}

void matrix_mul::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(icmp_ln130_reg_912.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read()) && esl_seteq<1,1,1>(icmp_ln87_fu_336_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln128_reg_960.read()))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 1024 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln140_fu_870_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state12;
            }
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<12>) ("XXXXXXXXXXXX");
            break;
    }
}

}


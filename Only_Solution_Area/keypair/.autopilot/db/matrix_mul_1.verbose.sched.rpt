

================================================================
== Vivado HLS Report for 'matrix_mul_1'
================================================================
* Date:           Thu May 14 22:22:18 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        picnic1
* Solution:       keypair
* Product family: artix7
* Target device:  xc7a200t-fbg676-2


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.366 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+------+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |   Interval  | Pipeline|
    |   min   |   max   |    min    |    max    |  min |  max |   Type  |
    +---------+---------+-----------+-----------+------+------+---------+
    |     2569|     2569| 25.690 us | 25.690 us |  2569|  2569|   none  |
    +---------+---------+-----------+-----------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                        |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |        Loop Name       |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- matrix_mul_label6     |     2559|     2559|        20|          -|          -|   128|    no    |
        | + matrix_mul_label5    |        7|        7|         2|          2|          2|     4|    yes   |
        | + matrix_mul_label6.2  |        6|        6|         2|          -|          -|     3|    no    |
        |- matrix_mul_label7     |        8|        8|         2|          -|          -|     4|    no    |
        +------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 1
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 12
* Pipeline : 1
  Pipeline-0 : II = 2, D = 2, States = { 3 4 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 
3 --> 4 
4 --> 5 3 
5 --> 6 
6 --> 7 
7 --> 8 9 
8 --> 7 
9 --> 10 
10 --> 2 11 
11 --> 12 
12 --> 11 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.35>
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%matrix_offset_read = call i14 @_ssdm_op_Read.ap_auto.i14(i14 %matrix_offset)"   --->   Operation 13 'read' 'matrix_offset_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%prod = alloca [64 x i32], align 16" [picnic_impl.c:125]   --->   Operation 14 'alloca' 'prod' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%temp = alloca [64 x i32], align 16" [picnic_impl.c:126]   --->   Operation 15 'alloca' 'temp' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 0)"   --->   Operation 16 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 17 [1/1] (1.35ns)   --->   "br label %matrix_mul_label6_begin" [picnic_impl.c:128]   --->   Operation 17 'br' <Predicate = true> <Delay = 1.35>

State 2 <SV = 1> <Delay = 1.66>
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%bitNumber_assign105 = phi i7 [ 0, %0 ], [ %i, %matrix_mul_label6_end ]"   --->   Operation 18 'phi' 'bitNumber_assign105' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([18 x i8]* @p_str988) nounwind" [picnic_impl.c:129]   --->   Operation 19 'specloopname' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([18 x i8]* @p_str988)" [picnic_impl.c:129]   --->   Operation 20 'specregionbegin' 'tmp' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%empty_37 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 128)"   --->   Operation 21 'speclooptripcount' 'empty_37' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (1.66ns)   --->   "%i = add i7 %bitNumber_assign105, 1" [picnic_impl.c:128]   --->   Operation 22 'add' 'i' <Predicate = true> <Delay = 1.66> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (1.35ns)   --->   "br label %matrix_mul_label5" [picnic_impl.c:130]   --->   Operation 23 'br' <Predicate = true> <Delay = 1.35>

State 3 <SV = 2> <Delay = 6.31>
ST_3 : Operation 24 [1/1] (0.00ns)   --->   "%j_0104 = phi i2 [ 0, %matrix_mul_label6_begin ], [ %j, %matrix_mul_label5 ]"   --->   Operation 24 'phi' 'j_0104' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 25 [1/1] (0.00ns)   --->   "%zext_ln130 = zext i2 %j_0104 to i9" [picnic_impl.c:130]   --->   Operation 25 'zext' 'zext_ln130' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 26 [1/1] (0.00ns)   --->   "%shl_ln = call i9 @_ssdm_op_BitConcatenate.i9.i7.i2(i7 %bitNumber_assign105, i2 0)" [picnic_impl.c:133]   --->   Operation 26 'bitconcatenate' 'shl_ln' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 27 [1/1] (1.73ns)   --->   "%add_ln133 = add i9 %shl_ln, %zext_ln130" [picnic_impl.c:133]   --->   Operation 27 'add' 'add_ln133' <Predicate = true> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%zext_ln133 = zext i9 %add_ln133 to i14" [picnic_impl.c:133]   --->   Operation 28 'zext' 'zext_ln133' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%zext_ln134 = zext i2 %j_0104 to i64" [picnic_impl.c:134]   --->   Operation 29 'zext' 'zext_ln134' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (0.00ns)   --->   "%state_addr = getelementptr [8 x i32]* %state, i64 0, i64 %zext_ln134" [picnic_impl.c:134]   --->   Operation 30 'getelementptr' 'state_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 31 [2/2] (1.75ns)   --->   "%state_load = load i32* %state_addr, align 4" [picnic_impl.c:134]   --->   Operation 31 'load' 'state_load' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_3 : Operation 32 [1/1] (1.80ns)   --->   "%add_ln134 = add i14 %zext_ln133, %matrix_offset_read" [picnic_impl.c:134]   --->   Operation 32 'add' 'add_ln134' <Predicate = true> <Delay = 1.80> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%zext_ln134_1 = zext i14 %add_ln134 to i64" [picnic_impl.c:134]   --->   Operation 33 'zext' 'zext_ln134_1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%temp_matrix_addr = getelementptr [10752 x i32]* @temp_matrix, i64 0, i64 %zext_ln134_1" [picnic_impl.c:134]   --->   Operation 34 'getelementptr' 'temp_matrix_addr' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 35 [2/2] (2.77ns)   --->   "%temp_matrix_load = load i32* %temp_matrix_addr, align 4" [picnic_impl.c:134]   --->   Operation 35 'load' 'temp_matrix_load' <Predicate = true> <Delay = 2.77> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 10752> <ROM>
ST_3 : Operation 36 [1/1] (0.79ns)   --->   "%icmp_ln130 = icmp eq i2 %j_0104, -1" [picnic_impl.c:130]   --->   Operation 36 'icmp' 'icmp_ln130' <Predicate = true> <Delay = 0.79> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 6.35>
ST_4 : Operation 37 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([18 x i8]* @p_str1089) nounwind" [picnic_impl.c:131]   --->   Operation 37 'specloopname' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 38 [1/1] (0.00ns)   --->   "%tmp_2 = call i32 (...)* @_ssdm_op_SpecRegionBegin([18 x i8]* @p_str1089)" [picnic_impl.c:131]   --->   Operation 38 'specregionbegin' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 39 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 2, i32 1, i32 1, i32 0, [1 x i8]* @p_str1190) nounwind" [picnic_impl.c:132]   --->   Operation 39 'specpipeline' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 40 [1/2] (1.75ns)   --->   "%state_load = load i32* %state_addr, align 4" [picnic_impl.c:134]   --->   Operation 40 'load' 'state_load' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_4 : Operation 41 [1/2] (2.77ns)   --->   "%temp_matrix_load = load i32* %temp_matrix_addr, align 4" [picnic_impl.c:134]   --->   Operation 41 'load' 'temp_matrix_load' <Predicate = true> <Delay = 2.77> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 10752> <ROM>
ST_4 : Operation 42 [1/1] (0.80ns)   --->   "%and_ln134 = and i32 %temp_matrix_load, %state_load" [picnic_impl.c:134]   --->   Operation 42 'and' 'and_ln134' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 43 [1/1] (0.00ns)   --->   "%prod_addr_1 = getelementptr inbounds [64 x i32]* %prod, i64 0, i64 %zext_ln134" [picnic_impl.c:134]   --->   Operation 43 'getelementptr' 'prod_addr_1' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 44 [1/1] (2.77ns)   --->   "store i32 %and_ln134, i32* %prod_addr_1, align 4" [picnic_impl.c:134]   --->   Operation 44 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_4 : Operation 45 [1/1] (0.00ns)   --->   "%empty_38 = call i32 (...)* @_ssdm_op_SpecRegionEnd([18 x i8]* @p_str1089, i32 %tmp_2)" [picnic_impl.c:135]   --->   Operation 45 'specregionend' 'empty_38' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 46 [1/1] (1.20ns)   --->   "%j = add i2 %j_0104, 1" [picnic_impl.c:130]   --->   Operation 46 'add' 'j' <Predicate = true> <Delay = 1.20> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 47 [1/1] (0.00ns)   --->   "%empty_39 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 0)"   --->   Operation 47 'speclooptripcount' 'empty_39' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 48 [1/1] (0.00ns)   --->   "br i1 %icmp_ln130, label %1, label %matrix_mul_label5" [picnic_impl.c:130]   --->   Operation 48 'br' <Predicate = true> <Delay = 0.00>

State 5 <SV = 4> <Delay = 2.77>
ST_5 : Operation 49 [1/1] (0.00ns)   --->   "%prod_addr = getelementptr [64 x i32]* %prod, i64 0, i64 0" [picnic_impl.c:83->picnic_impl.c:136]   --->   Operation 49 'getelementptr' 'prod_addr' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 50 [2/2] (2.77ns)   --->   "%x = load i32* %prod_addr, align 16" [picnic_impl.c:85->picnic_impl.c:136]   --->   Operation 50 'load' 'x' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>

State 6 <SV = 5> <Delay = 2.77>
ST_6 : Operation 51 [1/2] (2.77ns)   --->   "%x = load i32* %prod_addr, align 16" [picnic_impl.c:85->picnic_impl.c:136]   --->   Operation 51 'load' 'x' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_6 : Operation 52 [1/1] (1.35ns)   --->   "br label %2" [picnic_impl.c:87->picnic_impl.c:136]   --->   Operation 52 'br' <Predicate = true> <Delay = 1.35>

State 7 <SV = 6> <Delay = 2.77>
ST_7 : Operation 53 [1/1] (0.00ns)   --->   "%x_0_i = phi i32 [ %x, %1 ], [ %x_1, %3 ]"   --->   Operation 53 'phi' 'x_0_i' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 54 [1/1] (0.00ns)   --->   "%i_0_i = phi i3 [ 1, %1 ], [ %i_5, %3 ]"   --->   Operation 54 'phi' 'i_0_i' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 55 [1/1] (0.00ns)   --->   "%zext_ln87 = zext i3 %i_0_i to i64" [picnic_impl.c:87->picnic_impl.c:136]   --->   Operation 55 'zext' 'zext_ln87' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 56 [1/1] (1.00ns)   --->   "%icmp_ln87 = icmp eq i3 %i_0_i, -4" [picnic_impl.c:87->picnic_impl.c:136]   --->   Operation 56 'icmp' 'icmp_ln87' <Predicate = true> <Delay = 1.00> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 57 [1/1] (0.00ns)   --->   "%empty_40 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)"   --->   Operation 57 'speclooptripcount' 'empty_40' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 58 [1/1] (0.00ns)   --->   "br i1 %icmp_ln87, label %matrix_mul_label6_end, label %3" [picnic_impl.c:87->picnic_impl.c:136]   --->   Operation 58 'br' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 59 [1/1] (0.00ns)   --->   "%prod_addr_2 = getelementptr [64 x i32]* %prod, i64 0, i64 %zext_ln87" [picnic_impl.c:89->picnic_impl.c:136]   --->   Operation 59 'getelementptr' 'prod_addr_2' <Predicate = (!icmp_ln87)> <Delay = 0.00>
ST_7 : Operation 60 [2/2] (2.77ns)   --->   "%prod_load = load i32* %prod_addr_2, align 4" [picnic_impl.c:89->picnic_impl.c:136]   --->   Operation 60 'load' 'prod_load' <Predicate = (!icmp_ln87)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_7 : Operation 61 [1/1] (1.34ns)   --->   "%i_5 = add i3 %i_0_i, 1" [picnic_impl.c:87->picnic_impl.c:136]   --->   Operation 61 'add' 'i_5' <Predicate = (!icmp_ln87)> <Delay = 1.34> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 62 [1/1] (0.00ns)   --->   "%tmp_8 = call i2 @_ssdm_op_PartSelect.i2.i7.i32.i32(i7 %bitNumber_assign105, i32 3, i32 4)" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 62 'partselect' 'tmp_8' <Predicate = (icmp_ln87)> <Delay = 0.00>
ST_7 : Operation 63 [1/1] (0.00ns)   --->   "%tmp_9 = call i2 @_ssdm_op_PartSelect.i2.i7.i32.i32(i7 %bitNumber_assign105, i32 5, i32 6)" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 63 'partselect' 'tmp_9' <Predicate = (icmp_ln87)> <Delay = 0.00>
ST_7 : Operation 64 [1/1] (0.00ns)   --->   "%zext_ln68_3 = zext i2 %tmp_9 to i64" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 64 'zext' 'zext_ln68_3' <Predicate = (icmp_ln87)> <Delay = 0.00>
ST_7 : Operation 65 [1/1] (0.00ns)   --->   "%temp_addr_4 = getelementptr [64 x i32]* %temp, i64 0, i64 %zext_ln68_3" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 65 'getelementptr' 'temp_addr_4' <Predicate = (icmp_ln87)> <Delay = 0.00>
ST_7 : Operation 66 [2/2] (2.77ns)   --->   "%temp_load_2 = load i32* %temp_addr_4, align 4" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 66 'load' 'temp_load_2' <Predicate = (icmp_ln87)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_7 : Operation 67 [1/1] (0.00ns)   --->   "%trunc_ln128 = trunc i7 %bitNumber_assign105 to i3" [picnic_impl.c:128]   --->   Operation 67 'trunc' 'trunc_ln128' <Predicate = (icmp_ln87)> <Delay = 0.00>
ST_7 : Operation 68 [1/1] (1.23ns)   --->   "%icmp_ln128 = icmp eq i7 %bitNumber_assign105, -1" [picnic_impl.c:128]   --->   Operation 68 'icmp' 'icmp_ln128' <Predicate = (icmp_ln87)> <Delay = 1.23> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 7> <Delay = 3.58>
ST_8 : Operation 69 [1/2] (2.77ns)   --->   "%prod_load = load i32* %prod_addr_2, align 4" [picnic_impl.c:89->picnic_impl.c:136]   --->   Operation 69 'load' 'prod_load' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_8 : Operation 70 [1/1] (0.80ns)   --->   "%x_1 = xor i32 %prod_load, %x_0_i" [picnic_impl.c:89->picnic_impl.c:136]   --->   Operation 70 'xor' 'x_1' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 71 [1/1] (0.00ns)   --->   "br label %2" [picnic_impl.c:87->picnic_impl.c:136]   --->   Operation 71 'br' <Predicate = true> <Delay = 0.00>

State 9 <SV = 7> <Delay = 8.36>
ST_9 : Operation 72 [1/1] (0.00ns)   --->   "%lshr_ln = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %x_0_i, i32 1, i32 31)" [picnic_impl.c:96->picnic_impl.c:136]   --->   Operation 72 'partselect' 'lshr_ln' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 73 [1/1] (0.00ns)   --->   "%zext_ln96 = zext i31 %lshr_ln to i32" [picnic_impl.c:96->picnic_impl.c:136]   --->   Operation 73 'zext' 'zext_ln96' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node shl_ln68_1)   --->   "%trunc_ln96 = trunc i32 %x_0_i to i1" [picnic_impl.c:96->picnic_impl.c:136]   --->   Operation 74 'trunc' 'trunc_ln96' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node shl_ln68_1)   --->   "%tmp_3 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %x_0_i, i32 1)" [picnic_impl.c:96->picnic_impl.c:136]   --->   Operation 75 'bitselect' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 76 [1/1] (0.00ns) (grouped into LUT with out node xor_ln101_2)   --->   "%trunc_ln96_1 = trunc i32 %x_0_i to i24" [picnic_impl.c:96->picnic_impl.c:136]   --->   Operation 76 'trunc' 'trunc_ln96_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 77 [1/1] (0.00ns) (grouped into LUT with out node xor_ln101_2)   --->   "%trunc_ln96_3 = call i24 @_ssdm_op_PartSelect.i24.i32.i32.i32(i32 %x_0_i, i32 1, i32 24)" [picnic_impl.c:96->picnic_impl.c:136]   --->   Operation 77 'partselect' 'trunc_ln96_3' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 78 [1/1] (0.80ns)   --->   "%y = xor i32 %zext_ln96, %x_0_i" [picnic_impl.c:96->picnic_impl.c:136]   --->   Operation 78 'xor' 'y' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 79 [1/1] (0.00ns)   --->   "%lshr_ln2 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %y, i32 2, i32 31)" [picnic_impl.c:97->picnic_impl.c:136]   --->   Operation 79 'partselect' 'lshr_ln2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 80 [1/1] (0.00ns)   --->   "%zext_ln97 = zext i30 %lshr_ln2 to i32" [picnic_impl.c:97->picnic_impl.c:136]   --->   Operation 80 'zext' 'zext_ln97' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node shl_ln68_1)   --->   "%tmp_4 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %y, i32 2)" [picnic_impl.c:97->picnic_impl.c:136]   --->   Operation 81 'bitselect' 'tmp_4' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node xor_ln101_2)   --->   "%xor_ln97 = xor i24 %trunc_ln96_3, %trunc_ln96_1" [picnic_impl.c:97->picnic_impl.c:136]   --->   Operation 82 'xor' 'xor_ln97' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node xor_ln101_2)   --->   "%trunc_ln97_1 = call i24 @_ssdm_op_PartSelect.i24.i32.i32.i32(i32 %y, i32 2, i32 25)" [picnic_impl.c:97->picnic_impl.c:136]   --->   Operation 83 'partselect' 'trunc_ln97_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 84 [1/1] (0.80ns)   --->   "%y_1 = xor i32 %zext_ln97, %y" [picnic_impl.c:97->picnic_impl.c:136]   --->   Operation 84 'xor' 'y_1' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 85 [1/1] (0.00ns)   --->   "%lshr_ln3 = call i28 @_ssdm_op_PartSelect.i28.i32.i32.i32(i32 %y_1, i32 4, i32 31)" [picnic_impl.c:98->picnic_impl.c:136]   --->   Operation 85 'partselect' 'lshr_ln3' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 86 [1/1] (0.00ns)   --->   "%zext_ln98 = zext i28 %lshr_ln3 to i32" [picnic_impl.c:98->picnic_impl.c:136]   --->   Operation 86 'zext' 'zext_ln98' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node shl_ln68_1)   --->   "%tmp_5 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %y_1, i32 4)" [picnic_impl.c:98->picnic_impl.c:136]   --->   Operation 87 'bitselect' 'tmp_5' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 88 [1/1] (0.00ns) (grouped into LUT with out node xor_ln101_2)   --->   "%xor_ln98 = xor i24 %trunc_ln97_1, %xor_ln97" [picnic_impl.c:98->picnic_impl.c:136]   --->   Operation 88 'xor' 'xor_ln98' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 89 [1/1] (0.00ns) (grouped into LUT with out node xor_ln101_2)   --->   "%trunc_ln98_1 = call i24 @_ssdm_op_PartSelect.i24.i32.i32.i32(i32 %y_1, i32 4, i32 27)" [picnic_impl.c:98->picnic_impl.c:136]   --->   Operation 89 'partselect' 'trunc_ln98_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 90 [1/1] (0.80ns)   --->   "%y_2 = xor i32 %zext_ln98, %y_1" [picnic_impl.c:98->picnic_impl.c:136]   --->   Operation 90 'xor' 'y_2' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 91 [1/1] (0.00ns) (grouped into LUT with out node xor_ln101_2)   --->   "%xor_ln98_2 = xor i24 %trunc_ln98_1, %xor_ln98" [picnic_impl.c:98->picnic_impl.c:136]   --->   Operation 91 'xor' 'xor_ln98_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 92 [1/1] (0.00ns) (grouped into LUT with out node xor_ln101_2)   --->   "%trunc_ln5 = call i24 @_ssdm_op_PartSelect.i24.i32.i32.i32(i32 %y_2, i32 8, i32 31)" [picnic_impl.c:99->picnic_impl.c:136]   --->   Operation 92 'partselect' 'trunc_ln5' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 93 [1/1] (0.00ns) (grouped into LUT with out node xor_ln101_2)   --->   "%tmp_6 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %y_2, i32 8)" [picnic_impl.c:99->picnic_impl.c:136]   --->   Operation 93 'bitselect' 'tmp_6' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 94 [1/1] (0.00ns) (grouped into LUT with out node xor_ln101_2)   --->   "%y_3 = xor i24 %trunc_ln5, %xor_ln98_2" [picnic_impl.c:99->picnic_impl.c:136]   --->   Operation 94 'xor' 'y_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node xor_ln101_2)   --->   "%tmp_7 = call i1 @_ssdm_op_BitSelect.i1.i24.i32(i24 %y_3, i32 16)" [picnic_impl.c:101->picnic_impl.c:136]   --->   Operation 95 'bitselect' 'tmp_7' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 96 [1/1] (0.00ns) (grouped into LUT with out node shl_ln68_1)   --->   "%xor_ln101 = xor i1 %trunc_ln96, %tmp_4" [picnic_impl.c:101->picnic_impl.c:136]   --->   Operation 96 'xor' 'xor_ln101' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 97 [1/1] (0.00ns) (grouped into LUT with out node shl_ln68_1)   --->   "%xor_ln101_1 = xor i1 %xor_ln101, %tmp_3" [picnic_impl.c:101->picnic_impl.c:136]   --->   Operation 97 'xor' 'xor_ln101_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 98 [1/1] (0.80ns) (out node of the LUT)   --->   "%xor_ln101_2 = xor i1 %tmp_6, %tmp_7" [picnic_impl.c:101->picnic_impl.c:136]   --->   Operation 98 'xor' 'xor_ln101_2' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 99 [1/1] (0.00ns) (grouped into LUT with out node shl_ln68_1)   --->   "%xor_ln101_3 = xor i1 %xor_ln101_2, %tmp_5" [picnic_impl.c:101->picnic_impl.c:136]   --->   Operation 99 'xor' 'xor_ln101_3' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node shl_ln68_1)   --->   "%xor_ln101_4 = xor i1 %xor_ln101_3, %xor_ln101_1" [picnic_impl.c:101->picnic_impl.c:136]   --->   Operation 100 'xor' 'xor_ln101_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node shl_ln68_1)   --->   "%zext_ln101 = zext i1 %xor_ln101_4 to i8" [picnic_impl.c:101->picnic_impl.c:136]   --->   Operation 101 'zext' 'zext_ln101' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 102 [1/1] (0.00ns)   --->   "%zext_ln68_cast = call i5 @_ssdm_op_BitConcatenate.i5.i2.i3(i2 %tmp_8, i3 0)" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 102 'bitconcatenate' 'zext_ln68_cast' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 103 [1/1] (0.00ns)   --->   "%zext_ln68 = zext i5 %zext_ln68_cast to i6" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 103 'zext' 'zext_ln68' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 104 [1/1] (0.00ns)   --->   "%zext_ln68_2 = zext i5 %zext_ln68_cast to i64" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 104 'zext' 'zext_ln68_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 105 [1/2] (2.77ns)   --->   "%temp_load_2 = load i32* %temp_addr_4, align 4" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 105 'load' 'temp_load_2' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_9 : Operation 106 [1/1] (1.54ns)   --->   "%add_ln68 = add i6 7, %zext_ln68" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 106 'add' 'add_ln68' <Predicate = true> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 107 [1/1] (0.00ns)   --->   "%zext_ln68_4 = zext i6 %add_ln68 to i64" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 107 'zext' 'zext_ln68_4' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 108 [1/1] (1.22ns)   --->   "%icmp_ln68 = icmp ugt i64 %zext_ln68_2, %zext_ln68_4" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 108 'icmp' 'icmp_ln68' <Predicate = true> <Delay = 1.22> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 109 [1/1] (0.00ns)   --->   "%zext_ln68_5 = zext i5 %zext_ln68_cast to i6" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 109 'zext' 'zext_ln68_5' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 110 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln68)   --->   "%tmp_10 = call i32 @llvm.part.select.i32(i32 %temp_load_2, i32 31, i32 0)" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 110 'partselect' 'tmp_10' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 111 [1/1] (1.60ns)   --->   "%sub_ln68 = sub i6 %zext_ln68_5, %add_ln68" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 111 'sub' 'sub_ln68' <Predicate = true> <Delay = 1.60> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 112 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln68)   --->   "%xor_ln68_2 = xor i6 %zext_ln68_5, 31" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 112 'xor' 'xor_ln68_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 113 [1/1] (1.60ns)   --->   "%sub_ln68_1 = sub i6 %add_ln68, %zext_ln68_5" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 113 'sub' 'sub_ln68_1' <Predicate = true> <Delay = 1.60> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 114 [1/1] (0.00ns) (grouped into LUT with out node sub_ln68_2)   --->   "%select_ln68 = select i1 %icmp_ln68, i6 %sub_ln68, i6 %sub_ln68_1" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 114 'select' 'select_ln68' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 115 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln68)   --->   "%select_ln68_1 = select i1 %icmp_ln68, i32 %tmp_10, i32 %temp_load_2" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 115 'select' 'select_ln68_1' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 116 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln68)   --->   "%select_ln68_2 = select i1 %icmp_ln68, i6 %xor_ln68_2, i6 %zext_ln68_5" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 116 'select' 'select_ln68_2' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 117 [1/1] (1.60ns) (out node of the LUT)   --->   "%sub_ln68_2 = sub i6 31, %select_ln68" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 117 'sub' 'sub_ln68_2' <Predicate = true> <Delay = 1.60> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 118 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln68)   --->   "%zext_ln68_6 = zext i6 %select_ln68_2 to i32" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 118 'zext' 'zext_ln68_6' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node or_ln68)   --->   "%zext_ln68_7 = zext i6 %sub_ln68_2 to i32" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 119 'zext' 'zext_ln68_7' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 120 [1/1] (3.30ns) (out node of the LUT)   --->   "%lshr_ln68 = lshr i32 %select_ln68_1, %zext_ln68_6" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 120 'lshr' 'lshr_ln68' <Predicate = true> <Delay = 3.30> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node or_ln68)   --->   "%lshr_ln68_1 = lshr i32 -1, %zext_ln68_7" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 121 'lshr' 'lshr_ln68_1' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 122 [1/1] (0.00ns) (grouped into LUT with out node or_ln68)   --->   "%and_ln68_1 = and i32 %lshr_ln68, %lshr_ln68_1" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 122 'and' 'and_ln68_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 123 [1/1] (0.00ns) (grouped into LUT with out node or_ln68)   --->   "%trunc_ln68 = trunc i32 %and_ln68_1 to i8" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 123 'trunc' 'trunc_ln68' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 124 [1/1] (0.80ns)   --->   "%xor_ln68 = xor i3 %trunc_ln128, -1" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 124 'xor' 'xor_ln68' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 125 [1/1] (0.00ns)   --->   "%zext_ln68_1 = zext i3 %xor_ln68 to i8" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 125 'zext' 'zext_ln68_1' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 126 [1/1] (0.00ns) (grouped into LUT with out node or_ln68)   --->   "%shl_ln68 = shl i8 1, %zext_ln68_1" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 126 'shl' 'shl_ln68' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 127 [1/1] (0.00ns) (grouped into LUT with out node or_ln68)   --->   "%xor_ln68_1 = xor i8 %shl_ln68, -1" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 127 'xor' 'xor_ln68_1' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 128 [1/1] (1.68ns) (out node of the LUT)   --->   "%shl_ln68_1 = shl i8 %zext_ln101, %zext_ln68_1" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 128 'shl' 'shl_ln68_1' <Predicate = true> <Delay = 1.68> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 129 [1/1] (0.00ns) (grouped into LUT with out node or_ln68)   --->   "%and_ln68 = and i8 %trunc_ln68, %xor_ln68_1" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 129 'and' 'and_ln68' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 130 [1/1] (2.28ns) (out node of the LUT)   --->   "%or_ln68 = or i8 %and_ln68, %shl_ln68_1" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 130 'or' 'or_ln68' <Predicate = true> <Delay = 2.28> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 131 [1/1] (1.22ns)   --->   "%icmp_ln68_1 = icmp ugt i64 %zext_ln68_2, %zext_ln68_4" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 131 'icmp' 'icmp_ln68_1' <Predicate = true> <Delay = 1.22> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 8> <Delay = 7.46>
ST_10 : Operation 132 [1/1] (0.00ns)   --->   "%zext_ln68_8 = zext i5 %zext_ln68_cast to i6" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 132 'zext' 'zext_ln68_8' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 133 [1/1] (0.00ns) (grouped into LUT with out node shl_ln68_2)   --->   "%zext_ln68_9 = zext i8 %or_ln68 to i32" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 133 'zext' 'zext_ln68_9' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 134 [1/1] (0.00ns) (grouped into LUT with out node shl_ln68_2)   --->   "%xor_ln68_3 = xor i6 %zext_ln68_8, 31" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 134 'xor' 'xor_ln68_3' <Predicate = (icmp_ln68_1)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 135 [1/1] (0.00ns) (grouped into LUT with out node sub_ln68_3)   --->   "%select_ln68_3 = select i1 %icmp_ln68_1, i6 %zext_ln68_8, i6 %add_ln68" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 135 'select' 'select_ln68_3' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 136 [1/1] (0.00ns) (grouped into LUT with out node and_ln68_2)   --->   "%select_ln68_4 = select i1 %icmp_ln68_1, i6 %add_ln68, i6 %zext_ln68_8" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 136 'select' 'select_ln68_4' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 137 [1/1] (0.00ns) (grouped into LUT with out node shl_ln68_2)   --->   "%select_ln68_5 = select i1 %icmp_ln68_1, i6 %xor_ln68_3, i6 %zext_ln68_8" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 137 'select' 'select_ln68_5' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 138 [1/1] (1.60ns) (out node of the LUT)   --->   "%sub_ln68_3 = sub i6 31, %select_ln68_3" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 138 'sub' 'sub_ln68_3' <Predicate = true> <Delay = 1.60> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 139 [1/1] (0.00ns) (grouped into LUT with out node shl_ln68_2)   --->   "%zext_ln68_10 = zext i6 %select_ln68_5 to i32" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 139 'zext' 'zext_ln68_10' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 140 [1/1] (0.00ns) (grouped into LUT with out node and_ln68_2)   --->   "%zext_ln68_11 = zext i6 %select_ln68_4 to i32" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 140 'zext' 'zext_ln68_11' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 141 [1/1] (0.00ns) (grouped into LUT with out node and_ln68_2)   --->   "%zext_ln68_12 = zext i6 %sub_ln68_3 to i32" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 141 'zext' 'zext_ln68_12' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 142 [1/1] (2.42ns) (out node of the LUT)   --->   "%shl_ln68_2 = shl i32 %zext_ln68_9, %zext_ln68_10" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 142 'shl' 'shl_ln68_2' <Predicate = true> <Delay = 2.42> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 143 [1/1] (0.00ns) (grouped into LUT with out node and_ln68_3)   --->   "%tmp_11 = call i32 @llvm.part.select.i32(i32 %shl_ln68_2, i32 31, i32 0)" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 143 'partselect' 'tmp_11' <Predicate = (icmp_ln68_1)> <Delay = 0.00>
ST_10 : Operation 144 [1/1] (0.00ns) (grouped into LUT with out node and_ln68_3)   --->   "%select_ln68_6 = select i1 %icmp_ln68_1, i32 %tmp_11, i32 %shl_ln68_2" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 144 'select' 'select_ln68_6' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 145 [1/1] (0.00ns) (grouped into LUT with out node and_ln68_2)   --->   "%shl_ln68_3 = shl i32 -1, %zext_ln68_11" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 145 'shl' 'shl_ln68_3' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 146 [1/1] (0.00ns) (grouped into LUT with out node and_ln68_2)   --->   "%lshr_ln68_2 = lshr i32 -1, %zext_ln68_12" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 146 'lshr' 'lshr_ln68_2' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 147 [1/1] (2.28ns) (out node of the LUT)   --->   "%and_ln68_2 = and i32 %shl_ln68_3, %lshr_ln68_2" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 147 'and' 'and_ln68_2' <Predicate = true> <Delay = 2.28> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 148 [1/1] (0.80ns) (out node of the LUT)   --->   "%and_ln68_3 = and i32 %select_ln68_6, %and_ln68_2" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 148 'and' 'and_ln68_3' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 149 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBRAMWithByteEnable([64 x i32]* %temp)" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 149 'specbramwithbyteenable' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 150 [1/1] (0.00ns)   --->   "%zext_ln68_13 = zext i2 %tmp_8 to i4" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 150 'zext' 'zext_ln68_13' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 151 [1/1] (1.49ns)   --->   "%shl_ln68_4 = shl i4 1, %zext_ln68_13" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 151 'shl' 'shl_ln68_4' <Predicate = true> <Delay = 1.49> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 152 [1/1] (2.77ns)   --->   "call void @_ssdm_op_Write.bram.i32(i32* %temp_addr_4, i32 %and_ln68_3, i4 %shl_ln68_4)" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 152 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_10 : Operation 153 [1/1] (0.00ns)   --->   "%empty_41 = call i32 (...)* @_ssdm_op_SpecRegionEnd([18 x i8]* @p_str988, i32 %tmp)" [picnic_impl.c:138]   --->   Operation 153 'specregionend' 'empty_41' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 154 [1/1] (0.00ns)   --->   "br i1 %icmp_ln128, label %.preheader.preheader, label %matrix_mul_label6_begin" [picnic_impl.c:128]   --->   Operation 154 'br' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 155 [1/1] (1.35ns)   --->   "br label %.preheader" [picnic_impl.c:140]   --->   Operation 155 'br' <Predicate = (icmp_ln128)> <Delay = 1.35>

State 11 <SV = 9> <Delay = 2.77>
ST_11 : Operation 156 [1/1] (0.00ns)   --->   "%loop_0 = phi i3 [ %loop, %4 ], [ 0, %.preheader.preheader ]"   --->   Operation 156 'phi' 'loop_0' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 157 [1/1] (1.00ns)   --->   "%icmp_ln140 = icmp eq i3 %loop_0, -4" [picnic_impl.c:140]   --->   Operation 157 'icmp' 'icmp_ln140' <Predicate = true> <Delay = 1.00> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.00> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 158 [1/1] (0.00ns)   --->   "%empty_42 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 4, i64 4, i64 0)"   --->   Operation 158 'speclooptripcount' 'empty_42' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 159 [1/1] (1.34ns)   --->   "%loop = add i3 %loop_0, 1" [picnic_impl.c:140]   --->   Operation 159 'add' 'loop' <Predicate = true> <Delay = 1.34> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 160 [1/1] (0.00ns)   --->   "br i1 %icmp_ln140, label %5, label %4" [picnic_impl.c:140]   --->   Operation 160 'br' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 161 [1/1] (0.00ns)   --->   "%zext_ln141 = zext i3 %loop_0 to i64" [picnic_impl.c:141]   --->   Operation 161 'zext' 'zext_ln141' <Predicate = (!icmp_ln140)> <Delay = 0.00>
ST_11 : Operation 162 [1/1] (0.00ns)   --->   "%temp_addr = getelementptr inbounds [64 x i32]* %temp, i64 0, i64 %zext_ln141" [picnic_impl.c:141]   --->   Operation 162 'getelementptr' 'temp_addr' <Predicate = (!icmp_ln140)> <Delay = 0.00>
ST_11 : Operation 163 [2/2] (2.77ns)   --->   "%temp_load = load i32* %temp_addr, align 4" [picnic_impl.c:141]   --->   Operation 163 'load' 'temp_load' <Predicate = (!icmp_ln140)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_11 : Operation 164 [1/1] (0.00ns)   --->   "ret void" [picnic_impl.c:142]   --->   Operation 164 'ret' <Predicate = (icmp_ln140)> <Delay = 0.00>

State 12 <SV = 10> <Delay = 4.52>
ST_12 : Operation 165 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([18 x i8]* @p_str1291) nounwind" [picnic_impl.c:141]   --->   Operation 165 'specloopname' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 166 [1/2] (2.77ns)   --->   "%temp_load = load i32* %temp_addr, align 4" [picnic_impl.c:141]   --->   Operation 166 'load' 'temp_load' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_12 : Operation 167 [1/1] (0.00ns)   --->   "%output_addr = getelementptr [16 x i32]* %output_r, i64 0, i64 %zext_ln141" [picnic_impl.c:141]   --->   Operation 167 'getelementptr' 'output_addr' <Predicate = true> <Delay = 0.00>
ST_12 : Operation 168 [1/1] (1.75ns)   --->   "store i32 %temp_load, i32* %output_addr, align 4" [picnic_impl.c:141]   --->   Operation 168 'store' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 16> <RAM>
ST_12 : Operation 169 [1/1] (0.00ns)   --->   "br label %.preheader" [picnic_impl.c:140]   --->   Operation 169 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.35ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('bitNumber', picnic_impl.c:128) [12]  (1.35 ns)

 <State 2>: 1.66ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('bitNumber', picnic_impl.c:128) [12]  (0 ns)
	'add' operation ('bitNumber', picnic_impl.c:128) [16]  (1.66 ns)

 <State 3>: 6.32ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', picnic_impl.c:130) [19]  (0 ns)
	'add' operation ('add_ln133', picnic_impl.c:133) [25]  (1.73 ns)
	'add' operation ('add_ln134', picnic_impl.c:134) [30]  (1.81 ns)
	'getelementptr' operation ('temp_matrix_addr', picnic_impl.c:134) [32]  (0 ns)
	'load' operation ('temp_matrix_load', picnic_impl.c:134) on array 'temp_matrix' [33]  (2.77 ns)

 <State 4>: 6.35ns
The critical path consists of the following:
	'load' operation ('temp_matrix_load', picnic_impl.c:134) on array 'temp_matrix' [33]  (2.77 ns)
	'and' operation ('and_ln134', picnic_impl.c:134) [34]  (0.809 ns)
	'store' operation ('store_ln134', picnic_impl.c:134) of variable 'and_ln134', picnic_impl.c:134 on array 'prod', picnic_impl.c:125 [36]  (2.77 ns)

 <State 5>: 2.77ns
The critical path consists of the following:
	'getelementptr' operation ('prod_addr', picnic_impl.c:83->picnic_impl.c:136) [43]  (0 ns)
	'load' operation ('x', picnic_impl.c:85->picnic_impl.c:136) on array 'prod', picnic_impl.c:125 [44]  (2.77 ns)

 <State 6>: 2.77ns
The critical path consists of the following:
	'load' operation ('x', picnic_impl.c:85->picnic_impl.c:136) on array 'prod', picnic_impl.c:125 [44]  (2.77 ns)

 <State 7>: 2.77ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', picnic_impl.c:87->picnic_impl.c:136) [48]  (0 ns)
	'getelementptr' operation ('prod_addr_2', picnic_impl.c:89->picnic_impl.c:136) [54]  (0 ns)
	'load' operation ('prod_load', picnic_impl.c:89->picnic_impl.c:136) on array 'prod', picnic_impl.c:125 [55]  (2.77 ns)

 <State 8>: 3.58ns
The critical path consists of the following:
	'load' operation ('prod_load', picnic_impl.c:89->picnic_impl.c:136) on array 'prod', picnic_impl.c:125 [55]  (2.77 ns)
	'xor' operation ('x', picnic_impl.c:89->picnic_impl.c:136) [56]  (0.809 ns)

 <State 9>: 8.37ns
The critical path consists of the following:
	'add' operation ('add_ln68', picnic_impl.c:68->picnic_impl.c:136) [98]  (1.55 ns)
	'icmp' operation ('icmp_ln68', picnic_impl.c:68->picnic_impl.c:136) [100]  (1.23 ns)
	'select' operation ('select_ln68_1', picnic_impl.c:68->picnic_impl.c:136) [107]  (0 ns)
	'lshr' operation ('lshr_ln68', picnic_impl.c:68->picnic_impl.c:136) [112]  (3.31 ns)
	'and' operation ('and_ln68_1', picnic_impl.c:68->picnic_impl.c:136) [114]  (0 ns)
	'and' operation ('and_ln68', picnic_impl.c:68->picnic_impl.c:136) [122]  (0 ns)
	'or' operation ('or_ln68', picnic_impl.c:68->picnic_impl.c:136) [123]  (2.28 ns)

 <State 10>: 7.47ns
The critical path consists of the following:
	'select' operation ('select_ln68_3', picnic_impl.c:68->picnic_impl.c:136) [128]  (0 ns)
	'sub' operation ('sub_ln68_3', picnic_impl.c:68->picnic_impl.c:136) [131]  (1.6 ns)
	'lshr' operation ('lshr_ln68_2', picnic_impl.c:68->picnic_impl.c:136) [139]  (0 ns)
	'and' operation ('and_ln68_2', picnic_impl.c:68->picnic_impl.c:136) [140]  (2.28 ns)
	'and' operation ('and_ln68_3', picnic_impl.c:68->picnic_impl.c:136) [141]  (0.809 ns)
	'store' operation ('store_ln68', picnic_impl.c:68->picnic_impl.c:136) of constant <constant:_ssdm_op_Write.bram.i32> on array 'temp', picnic_impl.c:126 [145]  (2.77 ns)

 <State 11>: 2.77ns
The critical path consists of the following:
	'phi' operation ('loop') with incoming values : ('loop', picnic_impl.c:140) [152]  (0 ns)
	'getelementptr' operation ('temp_addr', picnic_impl.c:141) [160]  (0 ns)
	'load' operation ('temp_load', picnic_impl.c:141) on array 'temp', picnic_impl.c:126 [161]  (2.77 ns)

 <State 12>: 4.53ns
The critical path consists of the following:
	'load' operation ('temp_load', picnic_impl.c:141) on array 'temp', picnic_impl.c:126 [161]  (2.77 ns)
	'store' operation ('store_ln141', picnic_impl.c:141) of variable 'temp_load', picnic_impl.c:141 on array 'output_r' [163]  (1.75 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A

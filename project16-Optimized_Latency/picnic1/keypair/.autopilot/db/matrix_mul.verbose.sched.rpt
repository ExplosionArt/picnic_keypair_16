

================================================================
== Vivado HLS Report for 'matrix_mul'
================================================================
* Date:           Sat May  9 23:49:07 2020

* Version:        2019.2 (Build 2704478 on Wed Nov 06 22:10:23 MST 2019)
* Project:        picnic1
* Solution:       keypair
* Product family: artix7
* Target device:  xc7a200t-fbg676-2


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  | 10.00 ns | 8.366 ns |   1.25 ns  |
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+-----------+-----------+------+------+---------+
    |  Latency (cycles) |   Latency (absolute)  |   Interval  | Pipeline|
    |   min   |   max   |    min    |    max    |  min |  max |   Type  |
    +---------+---------+-----------+-----------+------+------+---------+
    |     1925|     1925| 19.250 us | 19.250 us |  1925|  1925|   none  |
    +---------+---------+-----------+-----------+------+------+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |                        |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        |        Loop Name       |   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +------------------------+---------+---------+----------+-----------+-----------+------+----------+
        |- matrix_mul_label6     |     1920|     1920|        15|          -|          -|   128|    no    |
        | + matrix_mul_label5    |        2|        2|         2|          1|          1|     2|    yes   |
        | + matrix_mul_label6.2  |        6|        6|         2|          -|          -|     3|    no    |
        |- matrix_mul_label7     |        2|        2|         2|          1|          1|     2|    yes   |
        +------------------------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 1
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 2
  * Pipeline-1: initiation interval (II) = 1, depth = 2


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 13
* Pipeline : 2
  Pipeline-0 : II = 1, D = 2, States = { 3 4 }
  Pipeline-1 : II = 1, D = 2, States = { 11 12 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 3 11 
3 --> 5 4 
4 --> 3 
5 --> 6 
6 --> 7 
7 --> 8 9 
8 --> 7 
9 --> 10 
10 --> 2 
11 --> 13 12 
12 --> 11 
13 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.35>
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%matrix_offset_read = call i14 @_ssdm_op_Read.ap_auto.i14(i14 %matrix_offset)"   --->   Operation 14 'read' 'matrix_offset_read' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%prod = alloca [64 x i32], align 16" [picnic_impl.c:126]   --->   Operation 15 'alloca' 'prod' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%temp = alloca [64 x i32], align 16" [picnic_impl.c:127]   --->   Operation 16 'alloca' 'temp' <Predicate = true> <Delay = 0.00> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_1 : Operation 17 [1/1] (0.00ns)   --->   "%prod_addr_2 = getelementptr [64 x i32]* %prod, i64 0, i64 0" [picnic_impl.c:83->picnic_impl.c:136]   --->   Operation 17 'getelementptr' 'prod_addr_2' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 18 [1/1] (1.35ns)   --->   "br label %1" [picnic_impl.c:129]   --->   Operation 18 'br' <Predicate = true> <Delay = 1.35>

State 2 <SV = 1> <Delay = 1.71>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%bitNumber_assign = phi i8 [ 0, %0 ], [ %i, %matrix_mul_label6_end ]"   --->   Operation 19 'phi' 'bitNumber_assign' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (1.24ns)   --->   "%icmp_ln129 = icmp eq i8 %bitNumber_assign, -128" [picnic_impl.c:129]   --->   Operation 20 'icmp' 'icmp_ln129' <Predicate = true> <Delay = 1.24> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.22> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 128, i64 128, i64 0)"   --->   Operation 21 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 22 [1/1] (1.71ns)   --->   "%i = add i8 %bitNumber_assign, 1" [picnic_impl.c:129]   --->   Operation 22 'add' 'i' <Predicate = true> <Delay = 1.71> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "br i1 %icmp_ln129, label %.preheader.0.preheader, label %matrix_mul_label6_begin" [picnic_impl.c:129]   --->   Operation 23 'br' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 24 [1/1] (0.00ns)   --->   "%trunc_ln129 = trunc i8 %bitNumber_assign to i3" [picnic_impl.c:129]   --->   Operation 24 'trunc' 'trunc_ln129' <Predicate = (!icmp_ln129)> <Delay = 0.00>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([18 x i8]* @p_str1137) nounwind" [picnic_impl.c:129]   --->   Operation 25 'specloopname' <Predicate = (!icmp_ln129)> <Delay = 0.00>
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%tmp = call i32 (...)* @_ssdm_op_SpecRegionBegin([18 x i8]* @p_str1137)" [picnic_impl.c:129]   --->   Operation 26 'specregionbegin' 'tmp' <Predicate = (!icmp_ln129)> <Delay = 0.00>
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%trunc_ln133 = trunc i8 %bitNumber_assign to i7" [picnic_impl.c:133]   --->   Operation 27 'trunc' 'trunc_ln133' <Predicate = (!icmp_ln129)> <Delay = 0.00>
ST_2 : Operation 28 [1/1] (0.00ns)   --->   "%shl_ln = call i9 @_ssdm_op_BitConcatenate.i9.i7.i2(i7 %trunc_ln133, i2 0)" [picnic_impl.c:133]   --->   Operation 28 'bitconcatenate' 'shl_ln' <Predicate = (!icmp_ln129)> <Delay = 0.00>
ST_2 : Operation 29 [1/1] (1.35ns)   --->   "br label %2" [picnic_impl.c:130]   --->   Operation 29 'br' <Predicate = (!icmp_ln129)> <Delay = 1.35>
ST_2 : Operation 30 [1/1] (1.35ns)   --->   "br label %.preheader.0" [picnic_impl.c:139]   --->   Operation 30 'br' <Predicate = (icmp_ln129)> <Delay = 1.35>

State 3 <SV = 2> <Delay = 6.31>
ST_3 : Operation 31 [1/1] (0.00ns)   --->   "%j_0_0 = phi i3 [ 0, %matrix_mul_label6_begin ], [ %add_ln130, %matrix_mul_label5 ]" [picnic_impl.c:130]   --->   Operation 31 'phi' 'j_0_0' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 32 [1/1] (1.00ns)   --->   "%icmp_ln130 = icmp eq i3 %j_0_0, -4" [picnic_impl.c:130]   --->   Operation 32 'icmp' 'icmp_ln130' <Predicate = true> <Delay = 1.00> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.22> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 33 [1/1] (0.00ns)   --->   "%empty_35 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2)"   --->   Operation 33 'speclooptripcount' 'empty_35' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "br i1 %icmp_ln130, label %3, label %matrix_mul_label5" [picnic_impl.c:130]   --->   Operation 34 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.00ns)   --->   "%trunc_ln130 = trunc i3 %j_0_0 to i2" [picnic_impl.c:130]   --->   Operation 35 'trunc' 'trunc_ln130' <Predicate = (!icmp_ln130)> <Delay = 0.00>
ST_3 : Operation 36 [1/1] (0.00ns)   --->   "%zext_ln130 = zext i3 %j_0_0 to i9" [picnic_impl.c:130]   --->   Operation 36 'zext' 'zext_ln130' <Predicate = (!icmp_ln130)> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (1.73ns)   --->   "%add_ln133 = add i9 %zext_ln130, %shl_ln" [picnic_impl.c:133]   --->   Operation 37 'add' 'add_ln133' <Predicate = (!icmp_ln130)> <Delay = 1.73> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 38 [1/1] (0.00ns)   --->   "%zext_ln134_6 = zext i9 %add_ln133 to i14" [picnic_impl.c:134]   --->   Operation 38 'zext' 'zext_ln134_6' <Predicate = (!icmp_ln130)> <Delay = 0.00>
ST_3 : Operation 39 [1/1] (0.00ns)   --->   "%zext_ln134 = zext i3 %j_0_0 to i64" [picnic_impl.c:134]   --->   Operation 39 'zext' 'zext_ln134' <Predicate = (!icmp_ln130)> <Delay = 0.00>
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%state_addr_3 = getelementptr [8 x i32]* %output_r, i64 0, i64 %zext_ln134" [picnic_impl.c:134]   --->   Operation 40 'getelementptr' 'state_addr_3' <Predicate = (!icmp_ln130)> <Delay = 0.00>
ST_3 : Operation 41 [2/2] (1.75ns)   --->   "%state_load = load i32* %state_addr_3, align 4" [picnic_impl.c:134]   --->   Operation 41 'load' 'state_load' <Predicate = (!icmp_ln130)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_3 : Operation 42 [1/1] (1.80ns)   --->   "%add_ln134 = add i14 %matrix_offset_read, %zext_ln134_6" [picnic_impl.c:134]   --->   Operation 42 'add' 'add_ln134' <Predicate = (!icmp_ln130)> <Delay = 1.80> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 43 [1/1] (0.00ns)   --->   "%zext_ln134_7 = zext i14 %add_ln134 to i64" [picnic_impl.c:134]   --->   Operation 43 'zext' 'zext_ln134_7' <Predicate = (!icmp_ln130)> <Delay = 0.00>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%temp_matrix2_addr = getelementptr [10240 x i32]* @temp_matrix2, i64 0, i64 %zext_ln134_7" [picnic_impl.c:134]   --->   Operation 44 'getelementptr' 'temp_matrix2_addr' <Predicate = (!icmp_ln130)> <Delay = 0.00>
ST_3 : Operation 45 [2/2] (2.77ns)   --->   "%temp_matrix2_load = load i32* %temp_matrix2_addr, align 4" [picnic_impl.c:134]   --->   Operation 45 'load' 'temp_matrix2_load' <Predicate = (!icmp_ln130)> <Delay = 2.77> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 10240> <ROM>
ST_3 : Operation 46 [1/1] (0.00ns)   --->   "%or_ln130 = or i2 %trunc_ln130, 1" [picnic_impl.c:130]   --->   Operation 46 'or' 'or_ln130' <Predicate = (!icmp_ln130)> <Delay = 0.00>
ST_3 : Operation 47 [1/1] (0.00ns)   --->   "%add_ln133_1 = call i9 @_ssdm_op_BitConcatenate.i9.i7.i2(i7 %trunc_ln133, i2 %or_ln130)" [picnic_impl.c:133]   --->   Operation 47 'bitconcatenate' 'add_ln133_1' <Predicate = (!icmp_ln130)> <Delay = 0.00>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%zext_ln134_8 = zext i9 %add_ln133_1 to i14" [picnic_impl.c:134]   --->   Operation 48 'zext' 'zext_ln134_8' <Predicate = (!icmp_ln130)> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%zext_ln134_1 = zext i2 %or_ln130 to i64" [picnic_impl.c:134]   --->   Operation 49 'zext' 'zext_ln134_1' <Predicate = (!icmp_ln130)> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (0.00ns)   --->   "%state_addr_4 = getelementptr [8 x i32]* %output_r, i64 0, i64 %zext_ln134_1" [picnic_impl.c:134]   --->   Operation 50 'getelementptr' 'state_addr_4' <Predicate = (!icmp_ln130)> <Delay = 0.00>
ST_3 : Operation 51 [2/2] (1.75ns)   --->   "%state_load_1 = load i32* %state_addr_4, align 4" [picnic_impl.c:134]   --->   Operation 51 'load' 'state_load_1' <Predicate = (!icmp_ln130)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_3 : Operation 52 [1/1] (1.80ns)   --->   "%add_ln134_2 = add i14 %matrix_offset_read, %zext_ln134_8" [picnic_impl.c:134]   --->   Operation 52 'add' 'add_ln134_2' <Predicate = (!icmp_ln130)> <Delay = 1.80> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%zext_ln134_9 = zext i14 %add_ln134_2 to i64" [picnic_impl.c:134]   --->   Operation 53 'zext' 'zext_ln134_9' <Predicate = (!icmp_ln130)> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (0.00ns)   --->   "%temp_matrix2_addr_1 = getelementptr [10240 x i32]* @temp_matrix2, i64 0, i64 %zext_ln134_9" [picnic_impl.c:134]   --->   Operation 54 'getelementptr' 'temp_matrix2_addr_1' <Predicate = (!icmp_ln130)> <Delay = 0.00>
ST_3 : Operation 55 [2/2] (2.77ns)   --->   "%temp_matrix2_load_1 = load i32* %temp_matrix2_addr_1, align 4" [picnic_impl.c:134]   --->   Operation 55 'load' 'temp_matrix2_load_1' <Predicate = (!icmp_ln130)> <Delay = 2.77> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 10240> <ROM>
ST_3 : Operation 56 [1/1] (1.34ns)   --->   "%add_ln130 = add i3 2, %j_0_0" [picnic_impl.c:130]   --->   Operation 56 'add' 'add_ln130' <Predicate = (!icmp_ln130)> <Delay = 1.34> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 4 <SV = 3> <Delay = 6.35>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([18 x i8]* @p_str12) nounwind" [picnic_impl.c:130]   --->   Operation 57 'specloopname' <Predicate = (!icmp_ln130)> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%tmp_6 = call i32 (...)* @_ssdm_op_SpecRegionBegin([18 x i8]* @p_str12)" [picnic_impl.c:130]   --->   Operation 58 'specregionbegin' 'tmp_6' <Predicate = (!icmp_ln130)> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str327) nounwind" [picnic_impl.c:132]   --->   Operation 59 'specpipeline' <Predicate = (!icmp_ln130)> <Delay = 0.00>
ST_4 : Operation 60 [1/2] (1.75ns)   --->   "%state_load = load i32* %state_addr_3, align 4" [picnic_impl.c:134]   --->   Operation 60 'load' 'state_load' <Predicate = (!icmp_ln130)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_4 : Operation 61 [1/2] (2.77ns)   --->   "%temp_matrix2_load = load i32* %temp_matrix2_addr, align 4" [picnic_impl.c:134]   --->   Operation 61 'load' 'temp_matrix2_load' <Predicate = (!icmp_ln130)> <Delay = 2.77> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 10240> <ROM>
ST_4 : Operation 62 [1/1] (0.80ns)   --->   "%and_ln134 = and i32 %temp_matrix2_load, %state_load" [picnic_impl.c:134]   --->   Operation 62 'and' 'and_ln134' <Predicate = (!icmp_ln130)> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 63 [1/1] (0.00ns)   --->   "%prod_addr = getelementptr inbounds [64 x i32]* %prod, i64 0, i64 %zext_ln134" [picnic_impl.c:134]   --->   Operation 63 'getelementptr' 'prod_addr' <Predicate = (!icmp_ln130)> <Delay = 0.00>
ST_4 : Operation 64 [1/1] (2.77ns)   --->   "store i32 %and_ln134, i32* %prod_addr, align 8" [picnic_impl.c:134]   --->   Operation 64 'store' <Predicate = (!icmp_ln130)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_4 : Operation 65 [1/1] (0.00ns)   --->   "%empty_36 = call i32 (...)* @_ssdm_op_SpecRegionEnd([18 x i8]* @p_str12, i32 %tmp_6)" [picnic_impl.c:135]   --->   Operation 65 'specregionend' 'empty_36' <Predicate = (!icmp_ln130)> <Delay = 0.00>
ST_4 : Operation 66 [1/2] (1.75ns)   --->   "%state_load_1 = load i32* %state_addr_4, align 4" [picnic_impl.c:134]   --->   Operation 66 'load' 'state_load_1' <Predicate = (!icmp_ln130)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_4 : Operation 67 [1/2] (2.77ns)   --->   "%temp_matrix2_load_1 = load i32* %temp_matrix2_addr_1, align 4" [picnic_impl.c:134]   --->   Operation 67 'load' 'temp_matrix2_load_1' <Predicate = (!icmp_ln130)> <Delay = 2.77> <Core = "ROM_nP">   --->   Core 52 'ROM_nP' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load'> <Ports = 0> <Width = 32> <Depth = 10240> <ROM>
ST_4 : Operation 68 [1/1] (0.80ns)   --->   "%and_ln134_1 = and i32 %temp_matrix2_load_1, %state_load_1" [picnic_impl.c:134]   --->   Operation 68 'and' 'and_ln134_1' <Predicate = (!icmp_ln130)> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 69 [1/1] (0.00ns)   --->   "%prod_addr_4 = getelementptr inbounds [64 x i32]* %prod, i64 0, i64 %zext_ln134_1" [picnic_impl.c:134]   --->   Operation 69 'getelementptr' 'prod_addr_4' <Predicate = (!icmp_ln130)> <Delay = 0.00>
ST_4 : Operation 70 [1/1] (2.77ns)   --->   "store i32 %and_ln134_1, i32* %prod_addr_4, align 4" [picnic_impl.c:134]   --->   Operation 70 'store' <Predicate = (!icmp_ln130)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_4 : Operation 71 [1/1] (0.00ns)   --->   "br label %2" [picnic_impl.c:130]   --->   Operation 71 'br' <Predicate = (!icmp_ln130)> <Delay = 0.00>

State 5 <SV = 3> <Delay = 2.77>
ST_5 : Operation 72 [2/2] (2.77ns)   --->   "%x = load i32* %prod_addr_2, align 16" [picnic_impl.c:85->picnic_impl.c:136]   --->   Operation 72 'load' 'x' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>

State 6 <SV = 4> <Delay = 2.77>
ST_6 : Operation 73 [1/2] (2.77ns)   --->   "%x = load i32* %prod_addr_2, align 16" [picnic_impl.c:85->picnic_impl.c:136]   --->   Operation 73 'load' 'x' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_6 : Operation 74 [1/1] (1.35ns)   --->   "br label %4" [picnic_impl.c:87->picnic_impl.c:136]   --->   Operation 74 'br' <Predicate = true> <Delay = 1.35>

State 7 <SV = 5> <Delay = 2.77>
ST_7 : Operation 75 [1/1] (0.00ns)   --->   "%x_0_i = phi i32 [ %x, %3 ], [ %x_2, %5 ]"   --->   Operation 75 'phi' 'x_0_i' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 76 [1/1] (0.00ns)   --->   "%i_0_i = phi i3 [ 1, %3 ], [ %i_2, %5 ]"   --->   Operation 76 'phi' 'i_0_i' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 77 [1/1] (0.00ns)   --->   "%zext_ln87 = zext i3 %i_0_i to i64" [picnic_impl.c:87->picnic_impl.c:136]   --->   Operation 77 'zext' 'zext_ln87' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 78 [1/1] (1.00ns)   --->   "%icmp_ln87 = icmp eq i3 %i_0_i, -4" [picnic_impl.c:87->picnic_impl.c:136]   --->   Operation 78 'icmp' 'icmp_ln87' <Predicate = true> <Delay = 1.00> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.22> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 79 [1/1] (0.00ns)   --->   "%empty_37 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 3, i64 3, i64 3)"   --->   Operation 79 'speclooptripcount' 'empty_37' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 80 [1/1] (0.00ns)   --->   "br i1 %icmp_ln87, label %matrix_mul_label6_end, label %5" [picnic_impl.c:87->picnic_impl.c:136]   --->   Operation 80 'br' <Predicate = true> <Delay = 0.00>
ST_7 : Operation 81 [1/1] (0.00ns)   --->   "%prod_addr_5 = getelementptr [64 x i32]* %prod, i64 0, i64 %zext_ln87" [picnic_impl.c:88->picnic_impl.c:136]   --->   Operation 81 'getelementptr' 'prod_addr_5' <Predicate = (!icmp_ln87)> <Delay = 0.00>
ST_7 : Operation 82 [2/2] (2.77ns)   --->   "%prod_load = load i32* %prod_addr_5, align 4" [picnic_impl.c:88->picnic_impl.c:136]   --->   Operation 82 'load' 'prod_load' <Predicate = (!icmp_ln87)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_7 : Operation 83 [1/1] (1.34ns)   --->   "%i_2 = add i3 %i_0_i, 1" [picnic_impl.c:87->picnic_impl.c:136]   --->   Operation 83 'add' 'i_2' <Predicate = (!icmp_ln87)> <Delay = 1.34> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_7 : Operation 84 [1/1] (0.00ns)   --->   "%tmp_17 = call i2 @_ssdm_op_PartSelect.i2.i8.i32.i32(i8 %bitNumber_assign, i32 3, i32 4)" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 84 'partselect' 'tmp_17' <Predicate = (icmp_ln87)> <Delay = 0.00>
ST_7 : Operation 85 [1/1] (0.00ns)   --->   "%tmp_18 = call i2 @_ssdm_op_PartSelect.i2.i8.i32.i32(i8 %bitNumber_assign, i32 5, i32 6)" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 85 'partselect' 'tmp_18' <Predicate = (icmp_ln87)> <Delay = 0.00>
ST_7 : Operation 86 [1/1] (0.00ns)   --->   "%zext_ln68_15 = zext i2 %tmp_18 to i64" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 86 'zext' 'zext_ln68_15' <Predicate = (icmp_ln87)> <Delay = 0.00>
ST_7 : Operation 87 [1/1] (0.00ns)   --->   "%temp_addr_10 = getelementptr [64 x i32]* %temp, i64 0, i64 %zext_ln68_15" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 87 'getelementptr' 'temp_addr_10' <Predicate = (icmp_ln87)> <Delay = 0.00>
ST_7 : Operation 88 [2/2] (2.77ns)   --->   "%temp_load_9 = load i32* %temp_addr_10, align 4" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 88 'load' 'temp_load_9' <Predicate = (icmp_ln87)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>

State 8 <SV = 6> <Delay = 3.58>
ST_8 : Operation 89 [1/2] (2.77ns)   --->   "%prod_load = load i32* %prod_addr_5, align 4" [picnic_impl.c:88->picnic_impl.c:136]   --->   Operation 89 'load' 'prod_load' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_8 : Operation 90 [1/1] (0.80ns)   --->   "%x_2 = xor i32 %prod_load, %x_0_i" [picnic_impl.c:88->picnic_impl.c:136]   --->   Operation 90 'xor' 'x_2' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 91 [1/1] (0.00ns)   --->   "br label %4" [picnic_impl.c:87->picnic_impl.c:136]   --->   Operation 91 'br' <Predicate = true> <Delay = 0.00>

State 9 <SV = 6> <Delay = 8.36>
ST_9 : Operation 92 [1/1] (0.00ns)   --->   "%lshr_ln = call i31 @_ssdm_op_PartSelect.i31.i32.i32.i32(i32 %x_0_i, i32 1, i32 31)" [picnic_impl.c:95->picnic_impl.c:136]   --->   Operation 92 'partselect' 'lshr_ln' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 93 [1/1] (0.00ns)   --->   "%zext_ln95 = zext i31 %lshr_ln to i32" [picnic_impl.c:95->picnic_impl.c:136]   --->   Operation 93 'zext' 'zext_ln95' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 94 [1/1] (0.00ns) (grouped into LUT with out node shl_ln68_2)   --->   "%trunc_ln95 = trunc i32 %x_0_i to i1" [picnic_impl.c:95->picnic_impl.c:136]   --->   Operation 94 'trunc' 'trunc_ln95' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node shl_ln68_2)   --->   "%tmp_12 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %x_0_i, i32 1)" [picnic_impl.c:95->picnic_impl.c:136]   --->   Operation 95 'bitselect' 'tmp_12' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 96 [1/1] (0.00ns) (grouped into LUT with out node xor_ln100_6)   --->   "%trunc_ln95_2 = trunc i32 %x_0_i to i24" [picnic_impl.c:95->picnic_impl.c:136]   --->   Operation 96 'trunc' 'trunc_ln95_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 97 [1/1] (0.00ns) (grouped into LUT with out node xor_ln100_6)   --->   "%trunc_ln95_6 = call i24 @_ssdm_op_PartSelect.i24.i32.i32.i32(i32 %x_0_i, i32 1, i32 24)" [picnic_impl.c:95->picnic_impl.c:136]   --->   Operation 97 'partselect' 'trunc_ln95_6' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 98 [1/1] (0.80ns)   --->   "%y = xor i32 %zext_ln95, %x_0_i" [picnic_impl.c:95->picnic_impl.c:136]   --->   Operation 98 'xor' 'y' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 99 [1/1] (0.00ns)   --->   "%lshr_ln4 = call i30 @_ssdm_op_PartSelect.i30.i32.i32.i32(i32 %y, i32 2, i32 31)" [picnic_impl.c:96->picnic_impl.c:136]   --->   Operation 99 'partselect' 'lshr_ln4' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 100 [1/1] (0.00ns)   --->   "%zext_ln96 = zext i30 %lshr_ln4 to i32" [picnic_impl.c:96->picnic_impl.c:136]   --->   Operation 100 'zext' 'zext_ln96' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node shl_ln68_2)   --->   "%tmp_13 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %y, i32 2)" [picnic_impl.c:96->picnic_impl.c:136]   --->   Operation 101 'bitselect' 'tmp_13' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 102 [1/1] (0.00ns) (grouped into LUT with out node xor_ln100_6)   --->   "%xor_ln96 = xor i24 %trunc_ln95_6, %trunc_ln95_2" [picnic_impl.c:96->picnic_impl.c:136]   --->   Operation 102 'xor' 'xor_ln96' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 103 [1/1] (0.00ns) (grouped into LUT with out node xor_ln100_6)   --->   "%trunc_ln96_2 = call i24 @_ssdm_op_PartSelect.i24.i32.i32.i32(i32 %y, i32 2, i32 25)" [picnic_impl.c:96->picnic_impl.c:136]   --->   Operation 103 'partselect' 'trunc_ln96_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 104 [1/1] (0.80ns)   --->   "%y_4 = xor i32 %zext_ln96, %y" [picnic_impl.c:96->picnic_impl.c:136]   --->   Operation 104 'xor' 'y_4' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 105 [1/1] (0.00ns)   --->   "%lshr_ln5 = call i28 @_ssdm_op_PartSelect.i28.i32.i32.i32(i32 %y_4, i32 4, i32 31)" [picnic_impl.c:97->picnic_impl.c:136]   --->   Operation 105 'partselect' 'lshr_ln5' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 106 [1/1] (0.00ns)   --->   "%zext_ln97 = zext i28 %lshr_ln5 to i32" [picnic_impl.c:97->picnic_impl.c:136]   --->   Operation 106 'zext' 'zext_ln97' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 107 [1/1] (0.00ns) (grouped into LUT with out node shl_ln68_2)   --->   "%tmp_14 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %y_4, i32 4)" [picnic_impl.c:97->picnic_impl.c:136]   --->   Operation 107 'bitselect' 'tmp_14' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 108 [1/1] (0.00ns) (grouped into LUT with out node xor_ln100_6)   --->   "%xor_ln97 = xor i24 %trunc_ln96_2, %xor_ln96" [picnic_impl.c:97->picnic_impl.c:136]   --->   Operation 108 'xor' 'xor_ln97' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 109 [1/1] (0.00ns) (grouped into LUT with out node xor_ln100_6)   --->   "%trunc_ln97_2 = call i24 @_ssdm_op_PartSelect.i24.i32.i32.i32(i32 %y_4, i32 4, i32 27)" [picnic_impl.c:97->picnic_impl.c:136]   --->   Operation 109 'partselect' 'trunc_ln97_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 110 [1/1] (0.80ns)   --->   "%y_5 = xor i32 %zext_ln97, %y_4" [picnic_impl.c:97->picnic_impl.c:136]   --->   Operation 110 'xor' 'y_5' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 111 [1/1] (0.00ns) (grouped into LUT with out node xor_ln100_6)   --->   "%xor_ln97_4 = xor i24 %trunc_ln97_2, %xor_ln97" [picnic_impl.c:97->picnic_impl.c:136]   --->   Operation 111 'xor' 'xor_ln97_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 112 [1/1] (0.00ns) (grouped into LUT with out node xor_ln100_6)   --->   "%trunc_ln = call i24 @_ssdm_op_PartSelect.i24.i32.i32.i32(i32 %y_5, i32 8, i32 31)" [picnic_impl.c:98->picnic_impl.c:136]   --->   Operation 112 'partselect' 'trunc_ln' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 113 [1/1] (0.00ns) (grouped into LUT with out node xor_ln100_6)   --->   "%tmp_15 = call i1 @_ssdm_op_BitSelect.i1.i32.i32(i32 %y_5, i32 8)" [picnic_impl.c:98->picnic_impl.c:136]   --->   Operation 113 'bitselect' 'tmp_15' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 114 [1/1] (0.00ns) (grouped into LUT with out node xor_ln100_6)   --->   "%y_6 = xor i24 %trunc_ln, %xor_ln97_4" [picnic_impl.c:98->picnic_impl.c:136]   --->   Operation 114 'xor' 'y_6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 115 [1/1] (0.00ns) (grouped into LUT with out node xor_ln100_6)   --->   "%tmp_16 = call i1 @_ssdm_op_BitSelect.i1.i24.i32(i24 %y_6, i32 16)" [picnic_impl.c:100->picnic_impl.c:136]   --->   Operation 115 'bitselect' 'tmp_16' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 116 [1/1] (0.00ns) (grouped into LUT with out node shl_ln68_2)   --->   "%xor_ln100 = xor i1 %trunc_ln95, %tmp_13" [picnic_impl.c:100->picnic_impl.c:136]   --->   Operation 116 'xor' 'xor_ln100' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 117 [1/1] (0.00ns) (grouped into LUT with out node shl_ln68_2)   --->   "%xor_ln100_5 = xor i1 %xor_ln100, %tmp_12" [picnic_impl.c:100->picnic_impl.c:136]   --->   Operation 117 'xor' 'xor_ln100_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 118 [1/1] (0.80ns) (out node of the LUT)   --->   "%xor_ln100_6 = xor i1 %tmp_15, %tmp_16" [picnic_impl.c:100->picnic_impl.c:136]   --->   Operation 118 'xor' 'xor_ln100_6' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 119 [1/1] (0.00ns) (grouped into LUT with out node shl_ln68_2)   --->   "%xor_ln100_7 = xor i1 %xor_ln100_6, %tmp_14" [picnic_impl.c:100->picnic_impl.c:136]   --->   Operation 119 'xor' 'xor_ln100_7' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 120 [1/1] (0.00ns) (grouped into LUT with out node shl_ln68_2)   --->   "%xor_ln100_8 = xor i1 %xor_ln100_7, %xor_ln100_5" [picnic_impl.c:100->picnic_impl.c:136]   --->   Operation 120 'xor' 'xor_ln100_8' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 121 [1/1] (0.00ns) (grouped into LUT with out node shl_ln68_2)   --->   "%zext_ln100 = zext i1 %xor_ln100_8 to i8" [picnic_impl.c:100->picnic_impl.c:136]   --->   Operation 121 'zext' 'zext_ln100' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 122 [1/1] (0.00ns)   --->   "%zext_ln68_cast = call i5 @_ssdm_op_BitConcatenate.i5.i2.i3(i2 %tmp_17, i3 0)" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 122 'bitconcatenate' 'zext_ln68_cast' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 123 [1/1] (0.00ns)   --->   "%zext_ln68 = zext i5 %zext_ln68_cast to i6" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 123 'zext' 'zext_ln68' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 124 [1/1] (0.00ns)   --->   "%zext_ln68_14 = zext i5 %zext_ln68_cast to i64" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 124 'zext' 'zext_ln68_14' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 125 [1/2] (2.77ns)   --->   "%temp_load_9 = load i32* %temp_addr_10, align 4" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 125 'load' 'temp_load_9' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_9 : Operation 126 [1/1] (1.54ns)   --->   "%add_ln68 = add i6 7, %zext_ln68" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 126 'add' 'add_ln68' <Predicate = true> <Delay = 1.54> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 127 [1/1] (0.00ns)   --->   "%zext_ln68_16 = zext i6 %add_ln68 to i64" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 127 'zext' 'zext_ln68_16' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 128 [1/1] (1.22ns)   --->   "%icmp_ln68 = icmp ugt i64 %zext_ln68_14, %zext_ln68_16" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 128 'icmp' 'icmp_ln68' <Predicate = true> <Delay = 1.22> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.22> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 129 [1/1] (0.00ns)   --->   "%zext_ln68_17 = zext i5 %zext_ln68_cast to i6" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 129 'zext' 'zext_ln68_17' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 130 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln68)   --->   "%tmp_19 = call i32 @llvm.part.select.i32(i32 %temp_load_9, i32 31, i32 0)" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 130 'partselect' 'tmp_19' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 131 [1/1] (1.60ns)   --->   "%sub_ln68 = sub i6 %zext_ln68_17, %add_ln68" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 131 'sub' 'sub_ln68' <Predicate = true> <Delay = 1.60> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 132 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln68)   --->   "%xor_ln68_4 = xor i6 %zext_ln68_17, 31" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 132 'xor' 'xor_ln68_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 133 [1/1] (1.60ns)   --->   "%sub_ln68_4 = sub i6 %add_ln68, %zext_ln68_17" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 133 'sub' 'sub_ln68_4' <Predicate = true> <Delay = 1.60> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 134 [1/1] (0.00ns) (grouped into LUT with out node sub_ln68_5)   --->   "%select_ln68 = select i1 %icmp_ln68, i6 %sub_ln68, i6 %sub_ln68_4" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 134 'select' 'select_ln68' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 135 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln68)   --->   "%select_ln68_7 = select i1 %icmp_ln68, i32 %tmp_19, i32 %temp_load_9" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 135 'select' 'select_ln68_7' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 136 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln68)   --->   "%select_ln68_8 = select i1 %icmp_ln68, i6 %xor_ln68_4, i6 %zext_ln68_17" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 136 'select' 'select_ln68_8' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_9 : Operation 137 [1/1] (1.60ns) (out node of the LUT)   --->   "%sub_ln68_5 = sub i6 31, %select_ln68" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 137 'sub' 'sub_ln68_5' <Predicate = true> <Delay = 1.60> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 138 [1/1] (0.00ns) (grouped into LUT with out node lshr_ln68)   --->   "%zext_ln68_18 = zext i6 %select_ln68_8 to i32" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 138 'zext' 'zext_ln68_18' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 139 [1/1] (0.00ns) (grouped into LUT with out node or_ln68)   --->   "%zext_ln68_19 = zext i6 %sub_ln68_5 to i32" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 139 'zext' 'zext_ln68_19' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 140 [1/1] (3.30ns) (out node of the LUT)   --->   "%lshr_ln68 = lshr i32 %select_ln68_7, %zext_ln68_18" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 140 'lshr' 'lshr_ln68' <Predicate = true> <Delay = 3.30> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 141 [1/1] (0.00ns) (grouped into LUT with out node or_ln68)   --->   "%lshr_ln68_3 = lshr i32 -1, %zext_ln68_19" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 141 'lshr' 'lshr_ln68_3' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 142 [1/1] (0.00ns) (grouped into LUT with out node or_ln68)   --->   "%and_ln68_4 = and i32 %lshr_ln68, %lshr_ln68_3" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 142 'and' 'and_ln68_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 143 [1/1] (0.00ns) (grouped into LUT with out node or_ln68)   --->   "%trunc_ln68 = trunc i32 %and_ln68_4 to i8" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 143 'trunc' 'trunc_ln68' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 144 [1/1] (0.80ns)   --->   "%xor_ln68 = xor i3 %trunc_ln129, -1" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 144 'xor' 'xor_ln68' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 145 [1/1] (0.00ns)   --->   "%zext_ln68_2 = zext i3 %xor_ln68 to i8" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 145 'zext' 'zext_ln68_2' <Predicate = true> <Delay = 0.00>
ST_9 : Operation 146 [1/1] (0.00ns) (grouped into LUT with out node or_ln68)   --->   "%shl_ln68 = shl i8 1, %zext_ln68_2" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 146 'shl' 'shl_ln68' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 147 [1/1] (0.00ns) (grouped into LUT with out node or_ln68)   --->   "%xor_ln68_2 = xor i8 %shl_ln68, -1" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 147 'xor' 'xor_ln68_2' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 148 [1/1] (1.68ns) (out node of the LUT)   --->   "%shl_ln68_2 = shl i8 %zext_ln100, %zext_ln68_2" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 148 'shl' 'shl_ln68_2' <Predicate = true> <Delay = 1.68> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 149 [1/1] (0.00ns) (grouped into LUT with out node or_ln68)   --->   "%and_ln68 = and i8 %trunc_ln68, %xor_ln68_2" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 149 'and' 'and_ln68' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 150 [1/1] (2.28ns) (out node of the LUT)   --->   "%or_ln68 = or i8 %and_ln68, %shl_ln68_2" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 150 'or' 'or_ln68' <Predicate = true> <Delay = 2.28> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_9 : Operation 151 [1/1] (1.22ns)   --->   "%icmp_ln68_2 = icmp ugt i64 %zext_ln68_14, %zext_ln68_16" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 151 'icmp' 'icmp_ln68_2' <Predicate = true> <Delay = 1.22> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.22> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 7> <Delay = 7.46>
ST_10 : Operation 152 [1/1] (0.00ns)   --->   "%zext_ln68_20 = zext i5 %zext_ln68_cast to i6" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 152 'zext' 'zext_ln68_20' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 153 [1/1] (0.00ns) (grouped into LUT with out node shl_ln68_5)   --->   "%zext_ln68_21 = zext i8 %or_ln68 to i32" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 153 'zext' 'zext_ln68_21' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 154 [1/1] (0.00ns) (grouped into LUT with out node shl_ln68_5)   --->   "%xor_ln68_5 = xor i6 %zext_ln68_20, 31" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 154 'xor' 'xor_ln68_5' <Predicate = (icmp_ln68_2)> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 155 [1/1] (0.00ns) (grouped into LUT with out node sub_ln68_6)   --->   "%select_ln68_9 = select i1 %icmp_ln68_2, i6 %zext_ln68_20, i6 %add_ln68" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 155 'select' 'select_ln68_9' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 156 [1/1] (0.00ns) (grouped into LUT with out node and_ln68_5)   --->   "%select_ln68_10 = select i1 %icmp_ln68_2, i6 %add_ln68, i6 %zext_ln68_20" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 156 'select' 'select_ln68_10' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 157 [1/1] (0.00ns) (grouped into LUT with out node shl_ln68_5)   --->   "%select_ln68_11 = select i1 %icmp_ln68_2, i6 %xor_ln68_5, i6 %zext_ln68_20" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 157 'select' 'select_ln68_11' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 158 [1/1] (1.60ns) (out node of the LUT)   --->   "%sub_ln68_6 = sub i6 31, %select_ln68_9" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 158 'sub' 'sub_ln68_6' <Predicate = true> <Delay = 1.60> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 159 [1/1] (0.00ns) (grouped into LUT with out node shl_ln68_5)   --->   "%zext_ln68_22 = zext i6 %select_ln68_11 to i32" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 159 'zext' 'zext_ln68_22' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 160 [1/1] (0.00ns) (grouped into LUT with out node and_ln68_5)   --->   "%zext_ln68_23 = zext i6 %select_ln68_10 to i32" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 160 'zext' 'zext_ln68_23' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 161 [1/1] (0.00ns) (grouped into LUT with out node and_ln68_5)   --->   "%zext_ln68_24 = zext i6 %sub_ln68_6 to i32" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 161 'zext' 'zext_ln68_24' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 162 [1/1] (2.42ns) (out node of the LUT)   --->   "%shl_ln68_5 = shl i32 %zext_ln68_21, %zext_ln68_22" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 162 'shl' 'shl_ln68_5' <Predicate = true> <Delay = 2.42> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 163 [1/1] (0.00ns) (grouped into LUT with out node and_ln68_6)   --->   "%tmp_20 = call i32 @llvm.part.select.i32(i32 %shl_ln68_5, i32 31, i32 0)" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 163 'partselect' 'tmp_20' <Predicate = (icmp_ln68_2)> <Delay = 0.00>
ST_10 : Operation 164 [1/1] (0.00ns) (grouped into LUT with out node and_ln68_6)   --->   "%select_ln68_12 = select i1 %icmp_ln68_2, i32 %tmp_20, i32 %shl_ln68_5" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 164 'select' 'select_ln68_12' <Predicate = true> <Delay = 0.00> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_10 : Operation 165 [1/1] (0.00ns) (grouped into LUT with out node and_ln68_5)   --->   "%shl_ln68_6 = shl i32 -1, %zext_ln68_23" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 165 'shl' 'shl_ln68_6' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 166 [1/1] (0.00ns) (grouped into LUT with out node and_ln68_5)   --->   "%lshr_ln68_4 = lshr i32 -1, %zext_ln68_24" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 166 'lshr' 'lshr_ln68_4' <Predicate = true> <Delay = 0.00> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 167 [1/1] (2.28ns) (out node of the LUT)   --->   "%and_ln68_5 = and i32 %shl_ln68_6, %lshr_ln68_4" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 167 'and' 'and_ln68_5' <Predicate = true> <Delay = 2.28> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 168 [1/1] (0.80ns) (out node of the LUT)   --->   "%and_ln68_6 = and i32 %select_ln68_12, %and_ln68_5" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 168 'and' 'and_ln68_6' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 169 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBRAMWithByteEnable([64 x i32]* %temp)" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 169 'specbramwithbyteenable' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 170 [1/1] (0.00ns)   --->   "%zext_ln68_25 = zext i2 %tmp_17 to i4" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 170 'zext' 'zext_ln68_25' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 171 [1/1] (1.49ns)   --->   "%shl_ln68_7 = shl i4 1, %zext_ln68_25" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 171 'shl' 'shl_ln68_7' <Predicate = true> <Delay = 1.49> <Core = "Shift">   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_10 : Operation 172 [1/1] (2.77ns)   --->   "call void @_ssdm_op_Write.bram.i32(i32* %temp_addr_10, i32 %and_ln68_6, i4 %shl_ln68_7)" [picnic_impl.c:68->picnic_impl.c:136]   --->   Operation 172 'store' <Predicate = true> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_10 : Operation 173 [1/1] (0.00ns)   --->   "%empty_38 = call i32 (...)* @_ssdm_op_SpecRegionEnd([18 x i8]* @p_str1137, i32 %tmp)" [picnic_impl.c:137]   --->   Operation 173 'specregionend' 'empty_38' <Predicate = true> <Delay = 0.00>
ST_10 : Operation 174 [1/1] (0.00ns)   --->   "br label %1" [picnic_impl.c:129]   --->   Operation 174 'br' <Predicate = true> <Delay = 0.00>

State 11 <SV = 2> <Delay = 2.77>
ST_11 : Operation 175 [1/1] (0.00ns)   --->   "%loop_0_0 = phi i3 [ %add_ln139, %matrix_mul_label7 ], [ 0, %.preheader.0.preheader ]" [picnic_impl.c:139]   --->   Operation 175 'phi' 'loop_0_0' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 176 [1/1] (1.00ns)   --->   "%icmp_ln139 = icmp eq i3 %loop_0_0, -4" [picnic_impl.c:139]   --->   Operation 176 'icmp' 'icmp_ln139' <Predicate = true> <Delay = 1.00> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.22> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_11 : Operation 177 [1/1] (0.00ns)   --->   "%empty_39 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 2, i64 2, i64 2)"   --->   Operation 177 'speclooptripcount' 'empty_39' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 178 [1/1] (0.00ns)   --->   "br i1 %icmp_ln139, label %6, label %matrix_mul_label7" [picnic_impl.c:139]   --->   Operation 178 'br' <Predicate = true> <Delay = 0.00>
ST_11 : Operation 179 [1/1] (0.00ns)   --->   "%trunc_ln139 = trunc i3 %loop_0_0 to i2" [picnic_impl.c:139]   --->   Operation 179 'trunc' 'trunc_ln139' <Predicate = (!icmp_ln139)> <Delay = 0.00>
ST_11 : Operation 180 [1/1] (0.00ns)   --->   "%zext_ln142 = zext i3 %loop_0_0 to i64" [picnic_impl.c:142]   --->   Operation 180 'zext' 'zext_ln142' <Predicate = (!icmp_ln139)> <Delay = 0.00>
ST_11 : Operation 181 [1/1] (0.00ns)   --->   "%temp_addr = getelementptr inbounds [64 x i32]* %temp, i64 0, i64 %zext_ln142" [picnic_impl.c:142]   --->   Operation 181 'getelementptr' 'temp_addr' <Predicate = (!icmp_ln139)> <Delay = 0.00>
ST_11 : Operation 182 [2/2] (2.77ns)   --->   "%temp_load = load i32* %temp_addr, align 8" [picnic_impl.c:142]   --->   Operation 182 'load' 'temp_load' <Predicate = (!icmp_ln139)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_11 : Operation 183 [1/1] (0.00ns)   --->   "%or_ln139 = or i2 %trunc_ln139, 1" [picnic_impl.c:139]   --->   Operation 183 'or' 'or_ln139' <Predicate = (!icmp_ln139)> <Delay = 0.00>
ST_11 : Operation 184 [1/1] (0.00ns)   --->   "%zext_ln142_2 = zext i2 %or_ln139 to i64" [picnic_impl.c:142]   --->   Operation 184 'zext' 'zext_ln142_2' <Predicate = (!icmp_ln139)> <Delay = 0.00>
ST_11 : Operation 185 [1/1] (0.00ns)   --->   "%temp_addr_1 = getelementptr inbounds [64 x i32]* %temp, i64 0, i64 %zext_ln142_2" [picnic_impl.c:142]   --->   Operation 185 'getelementptr' 'temp_addr_1' <Predicate = (!icmp_ln139)> <Delay = 0.00>
ST_11 : Operation 186 [2/2] (2.77ns)   --->   "%temp_load_1 = load i32* %temp_addr_1, align 4" [picnic_impl.c:142]   --->   Operation 186 'load' 'temp_load_1' <Predicate = (!icmp_ln139)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_11 : Operation 187 [1/1] (1.34ns)   --->   "%add_ln139 = add i3 2, %loop_0_0" [picnic_impl.c:139]   --->   Operation 187 'add' 'add_ln139' <Predicate = (!icmp_ln139)> <Delay = 1.34> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.60> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

State 12 <SV = 3> <Delay = 4.52>
ST_12 : Operation 188 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([18 x i8]* @p_str13) nounwind" [picnic_impl.c:141]   --->   Operation 188 'specloopname' <Predicate = (!icmp_ln139)> <Delay = 0.00>
ST_12 : Operation 189 [1/1] (0.00ns)   --->   "%tmp_5 = call i32 (...)* @_ssdm_op_SpecRegionBegin([18 x i8]* @p_str13)" [picnic_impl.c:141]   --->   Operation 189 'specregionbegin' 'tmp_5' <Predicate = (!icmp_ln139)> <Delay = 0.00>
ST_12 : Operation 190 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecPipeline(i32 -1, i32 1, i32 1, i32 0, [1 x i8]* @p_str327) nounwind" [picnic_impl.c:141]   --->   Operation 190 'specpipeline' <Predicate = (!icmp_ln139)> <Delay = 0.00>
ST_12 : Operation 191 [1/2] (2.77ns)   --->   "%temp_load = load i32* %temp_addr, align 8" [picnic_impl.c:142]   --->   Operation 191 'load' 'temp_load' <Predicate = (!icmp_ln139)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_12 : Operation 192 [1/1] (0.00ns)   --->   "%state_addr = getelementptr [8 x i32]* %output_r, i64 0, i64 %zext_ln142" [picnic_impl.c:142]   --->   Operation 192 'getelementptr' 'state_addr' <Predicate = (!icmp_ln139)> <Delay = 0.00>
ST_12 : Operation 193 [1/1] (1.75ns)   --->   "store i32 %temp_load, i32* %state_addr, align 4" [picnic_impl.c:142]   --->   Operation 193 'store' <Predicate = (!icmp_ln139)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_12 : Operation 194 [1/1] (0.00ns)   --->   "%empty_40 = call i32 (...)* @_ssdm_op_SpecRegionEnd([18 x i8]* @p_str13, i32 %tmp_5)" [picnic_impl.c:142]   --->   Operation 194 'specregionend' 'empty_40' <Predicate = (!icmp_ln139)> <Delay = 0.00>
ST_12 : Operation 195 [1/2] (2.77ns)   --->   "%temp_load_1 = load i32* %temp_addr_1, align 4" [picnic_impl.c:142]   --->   Operation 195 'load' 'temp_load_1' <Predicate = (!icmp_ln139)> <Delay = 2.77> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_12 : Operation 196 [1/1] (0.00ns)   --->   "%state_addr_2 = getelementptr [8 x i32]* %output_r, i64 0, i64 %zext_ln142_2" [picnic_impl.c:142]   --->   Operation 196 'getelementptr' 'state_addr_2' <Predicate = (!icmp_ln139)> <Delay = 0.00>
ST_12 : Operation 197 [1/1] (1.75ns)   --->   "store i32 %temp_load_1, i32* %state_addr_2, align 4" [picnic_impl.c:142]   --->   Operation 197 'store' <Predicate = (!icmp_ln139)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 64> <RAM>
ST_12 : Operation 198 [1/1] (0.00ns)   --->   "br label %.preheader.0" [picnic_impl.c:139]   --->   Operation 198 'br' <Predicate = (!icmp_ln139)> <Delay = 0.00>

State 13 <SV = 3> <Delay = 0.00>
ST_13 : Operation 199 [1/1] (0.00ns)   --->   "ret void" [picnic_impl.c:143]   --->   Operation 199 'ret' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.35ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', picnic_impl.c:129) [11]  (1.35 ns)

 <State 2>: 1.72ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', picnic_impl.c:129) [11]  (0 ns)
	'add' operation ('i', picnic_impl.c:129) [14]  (1.72 ns)

 <State 3>: 6.32ns
The critical path consists of the following:
	'phi' operation ('j_0_0', picnic_impl.c:130) with incoming values : ('add_ln130', picnic_impl.c:130) [24]  (0 ns)
	'add' operation ('add_ln133', picnic_impl.c:133) [34]  (1.73 ns)
	'add' operation ('add_ln134', picnic_impl.c:134) [39]  (1.81 ns)
	'getelementptr' operation ('temp_matrix2_addr', picnic_impl.c:134) [41]  (0 ns)
	'load' operation ('temp_matrix2_load', picnic_impl.c:134) on array 'temp_matrix2' [42]  (2.77 ns)

 <State 4>: 6.35ns
The critical path consists of the following:
	'load' operation ('temp_matrix2_load', picnic_impl.c:134) on array 'temp_matrix2' [42]  (2.77 ns)
	'and' operation ('and_ln134', picnic_impl.c:134) [43]  (0.809 ns)
	'store' operation ('store_ln134', picnic_impl.c:134) of variable 'and_ln134', picnic_impl.c:134 on array 'prod', picnic_impl.c:126 [45]  (2.77 ns)

 <State 5>: 2.77ns
The critical path consists of the following:
	'load' operation ('x', picnic_impl.c:85->picnic_impl.c:136) on array 'prod', picnic_impl.c:126 [63]  (2.77 ns)

 <State 6>: 2.77ns
The critical path consists of the following:
	'load' operation ('x', picnic_impl.c:85->picnic_impl.c:136) on array 'prod', picnic_impl.c:126 [63]  (2.77 ns)

 <State 7>: 2.77ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', picnic_impl.c:87->picnic_impl.c:136) [67]  (0 ns)
	'getelementptr' operation ('prod_addr_5', picnic_impl.c:88->picnic_impl.c:136) [73]  (0 ns)
	'load' operation ('prod_load', picnic_impl.c:88->picnic_impl.c:136) on array 'prod', picnic_impl.c:126 [74]  (2.77 ns)

 <State 8>: 3.58ns
The critical path consists of the following:
	'load' operation ('prod_load', picnic_impl.c:88->picnic_impl.c:136) on array 'prod', picnic_impl.c:126 [74]  (2.77 ns)
	'xor' operation ('x', picnic_impl.c:88->picnic_impl.c:136) [75]  (0.809 ns)

 <State 9>: 8.37ns
The critical path consists of the following:
	'add' operation ('add_ln68', picnic_impl.c:68->picnic_impl.c:136) [117]  (1.55 ns)
	'icmp' operation ('icmp_ln68', picnic_impl.c:68->picnic_impl.c:136) [119]  (1.23 ns)
	'select' operation ('select_ln68_7', picnic_impl.c:68->picnic_impl.c:136) [126]  (0 ns)
	'lshr' operation ('lshr_ln68', picnic_impl.c:68->picnic_impl.c:136) [131]  (3.31 ns)
	'and' operation ('and_ln68_4', picnic_impl.c:68->picnic_impl.c:136) [133]  (0 ns)
	'and' operation ('and_ln68', picnic_impl.c:68->picnic_impl.c:136) [140]  (0 ns)
	'or' operation ('or_ln68', picnic_impl.c:68->picnic_impl.c:136) [141]  (2.28 ns)

 <State 10>: 7.47ns
The critical path consists of the following:
	'select' operation ('select_ln68_9', picnic_impl.c:68->picnic_impl.c:136) [146]  (0 ns)
	'sub' operation ('sub_ln68_6', picnic_impl.c:68->picnic_impl.c:136) [149]  (1.6 ns)
	'lshr' operation ('lshr_ln68_4', picnic_impl.c:68->picnic_impl.c:136) [157]  (0 ns)
	'and' operation ('and_ln68_5', picnic_impl.c:68->picnic_impl.c:136) [158]  (2.28 ns)
	'and' operation ('and_ln68_6', picnic_impl.c:68->picnic_impl.c:136) [159]  (0.809 ns)
	'store' operation ('store_ln68', picnic_impl.c:68->picnic_impl.c:136) of constant <constant:_ssdm_op_Write.bram.i32> on array 'temp', picnic_impl.c:127 [163]  (2.77 ns)

 <State 11>: 2.77ns
The critical path consists of the following:
	'phi' operation ('loop_0_0', picnic_impl.c:139) with incoming values : ('add_ln139', picnic_impl.c:139) [169]  (0 ns)
	'getelementptr' operation ('temp_addr', picnic_impl.c:142) [179]  (0 ns)
	'load' operation ('temp_load', picnic_impl.c:142) on array 'temp', picnic_impl.c:127 [180]  (2.77 ns)

 <State 12>: 4.53ns
The critical path consists of the following:
	'load' operation ('temp_load', picnic_impl.c:142) on array 'temp', picnic_impl.c:127 [180]  (2.77 ns)
	'store' operation ('store_ln142', picnic_impl.c:142) of variable 'temp_load', picnic_impl.c:142 on array 'output_r' [182]  (1.75 ns)

 <State 13>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A

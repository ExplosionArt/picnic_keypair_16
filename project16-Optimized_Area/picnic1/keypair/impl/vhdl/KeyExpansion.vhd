-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity KeyExpansion is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    RoundKey_address0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    RoundKey_ce0 : OUT STD_LOGIC;
    RoundKey_we0 : OUT STD_LOGIC;
    RoundKey_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    RoundKey_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    Key_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    Key_ce0 : OUT STD_LOGIC;
    Key_q0 : IN STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of KeyExpansion is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (16 downto 0) := "00000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (16 downto 0) := "00000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (16 downto 0) := "00000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (16 downto 0) := "00000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (16 downto 0) := "00000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (16 downto 0) := "00000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (16 downto 0) := "00001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (16 downto 0) := "00010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (16 downto 0) := "00100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (16 downto 0) := "01000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (16 downto 0) := "10000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv6_8 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_2 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv6_3C : STD_LOGIC_VECTOR (5 downto 0) := "111100";
    constant ap_const_lv8_FC : STD_LOGIC_VECTOR (7 downto 0) := "11111100";
    constant ap_const_lv8_E0 : STD_LOGIC_VECTOR (7 downto 0) := "11100000";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal sbox_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal sbox_ce0 : STD_LOGIC;
    signal sbox_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal Rcon_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal Rcon_ce0 : STD_LOGIC;
    signal Rcon_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_fu_734_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal i_reg_1020 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal shl_ln_fu_744_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln_reg_1025 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln158_fu_728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_fu_758_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_reg_1033 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal zext_ln162_1_fu_773_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln162_1_reg_1038 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln160_fu_752_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_6_fu_784_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_6_reg_1051 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln171_fu_778_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln175_fu_798_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln175_reg_1057 : STD_LOGIC_VECTOR (8 downto 0);
    signal j_4_fu_808_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_4_reg_1065 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln175_fu_802_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln177_fu_828_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln177_reg_1075 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln171_fu_832_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln171_reg_1079 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln186_fu_836_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln186_reg_1084 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal j_5_fu_848_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_5_reg_1099 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal trunc_ln206_fu_854_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln206_reg_1104 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln204_fu_842_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal icmp_ln215_fu_899_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln215_reg_1126 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal j_7_fu_910_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal j_7_reg_1133 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal trunc_ln220_fu_916_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln220_reg_1138 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln218_fu_904_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln231_fu_944_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln231_reg_1147 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal l_fu_954_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal l_reg_1163 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal icmp_ln229_fu_948_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_4_fu_982_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_4_reg_1173 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln231_1_fu_996_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln231_1_reg_1178 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_9_fu_1001_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal i_0_reg_155 : STD_LOGIC_VECTOR (3 downto 0);
    signal j_0_reg_166 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal tempa_3_8_reg_593 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempa_3_0_reg_177 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempa_2_8_reg_606 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempa_2_0_reg_189 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempa_1_8_reg_619 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempa_1_0_reg_201 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempa_0_85_reg_632 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempa_0_0_reg_213 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_1_reg_225 : STD_LOGIC_VECTOR (5 downto 0);
    signal tempa_2_reg_237 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal tempa_1_reg_248 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempa_0_reg_259 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempa_3_reg_270 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_1_reg_281 : STD_LOGIC_VECTOR (2 downto 0);
    signal tempa_2_be_reg_292 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempa_1_be_reg_310 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempa_0_be_reg_328 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempa_3_be_reg_346 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempa_3_3_reg_364 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal tempa_2_3_reg_375 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempa_1_3_reg_386 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempa_0_32_reg_397 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_2_reg_408 : STD_LOGIC_VECTOR (2 downto 0);
    signal tempa_3_3_be_reg_419 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempa_2_3_be_reg_437 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempa_1_3_be_reg_455 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempa_0_32_be_reg_473 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_tempa_3_5_phi_fu_494_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempa_3_5_reg_491 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_tempa_2_5_phi_fu_506_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempa_2_5_reg_503 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_tempa_1_5_phi_fu_518_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempa_1_5_reg_515 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempa_0_2_fu_892_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_tempa_0_5_phi_fu_530_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempa_0_5_reg_527 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempa_3_6_reg_538 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal tempa_2_6_reg_549 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempa_1_6_reg_560 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempa_0_63_reg_571 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_3_reg_582 : STD_LOGIC_VECTOR (2 downto 0);
    signal tempa_3_6_be_reg_645 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempa_2_6_be_reg_663 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempa_1_6_be_reg_681 : STD_LOGIC_VECTOR (7 downto 0);
    signal tempa_0_63_be_reg_699 : STD_LOGIC_VECTOR (7 downto 0);
    signal l_0_reg_717 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal zext_ln177_1_fu_823_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln206_fu_872_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln212_fu_887_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln220_fu_934_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln231_3_fu_973_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln231_4_fu_1013_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal xor_ln231_fu_1007_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln162_fu_740_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln162_fu_764_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln162_fu_768_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal k_fu_792_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln177_fu_814_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln177_fu_818_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1_fu_858_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_1_fu_858_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal lshr_ln_fu_877_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_2_fu_920_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_2_fu_920_p6 : STD_LOGIC_VECTOR (7 downto 0);
    signal k_1_fu_939_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln231_2_fu_964_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln231_fu_968_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_4_fu_982_p5 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln231_1_fu_960_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (16 downto 0);

    component crypto_sign_keypabkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (7 downto 0);
        din4 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component KeyExpansion_sbox IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component KeyExpansion_Rcon IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    sbox_U : component KeyExpansion_sbox
    generic map (
        DataWidth => 8,
        AddressRange => 256,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => sbox_address0,
        ce0 => sbox_ce0,
        q0 => sbox_q0);

    Rcon_U : component KeyExpansion_Rcon
    generic map (
        DataWidth => 8,
        AddressRange => 11,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => Rcon_address0,
        ce0 => Rcon_ce0,
        q0 => Rcon_q0);

    crypto_sign_keypabkb_U1 : component crypto_sign_keypabkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => tempa_0_32_reg_397,
        din1 => tempa_1_3_reg_386,
        din2 => tempa_2_3_reg_375,
        din3 => tempa_3_3_reg_364,
        din4 => tmp_1_fu_858_p5,
        dout => tmp_1_fu_858_p6);

    crypto_sign_keypabkb_U2 : component crypto_sign_keypabkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => tempa_0_63_reg_571,
        din1 => tempa_1_6_reg_560,
        din2 => tempa_2_6_reg_549,
        din3 => tempa_3_6_reg_538,
        din4 => tmp_2_fu_920_p5,
        dout => tmp_2_fu_920_p6);

    crypto_sign_keypabkb_U3 : component crypto_sign_keypabkb
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 8,
        din4_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => tempa_0_85_reg_632,
        din1 => tempa_1_8_reg_619,
        din2 => tempa_2_8_reg_606,
        din3 => tempa_3_8_reg_593,
        din4 => tmp_4_fu_982_p5,
        dout => tmp_4_fu_982_p6);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    i_0_reg_155_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln160_fu_752_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                i_0_reg_155 <= i_reg_1020;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_reg_155 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;

    i_1_reg_225_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln158_fu_728_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                i_1_reg_225 <= ap_const_lv6_8;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln229_fu_948_p2 = ap_const_lv1_1))) then 
                i_1_reg_225 <= i_9_fu_1001_p2;
            end if; 
        end if;
    end process;

    j_0_reg_166_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                j_0_reg_166 <= j_reg_1033;
            elsif (((icmp_ln158_fu_728_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_0_reg_166 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    j_1_reg_281_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                j_1_reg_281 <= j_4_reg_1065;
            elsif (((icmp_ln171_fu_778_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                j_1_reg_281 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    j_2_reg_408_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                j_2_reg_408 <= j_5_reg_1099;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln186_fu_836_p2 = ap_const_lv1_1) and (icmp_ln175_fu_802_p2 = ap_const_lv1_1))) then 
                j_2_reg_408 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    j_3_reg_582_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                j_3_reg_582 <= j_7_reg_1133;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln215_fu_899_p2 = ap_const_lv1_1))) then 
                j_3_reg_582 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    l_0_reg_717_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                l_0_reg_717 <= l_reg_1163;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state13) and ((icmp_ln215_reg_1126 = ap_const_lv1_0) or (icmp_ln218_fu_904_p2 = ap_const_lv1_1)))) then 
                l_0_reg_717 <= ap_const_lv3_0;
            end if; 
        end if;
    end process;

    tempa_0_32_be_reg_473_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (trunc_ln206_reg_1104 = ap_const_lv2_0))) then 
                tempa_0_32_be_reg_473 <= sbox_q0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state10) and (trunc_ln206_reg_1104 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (trunc_ln206_reg_1104 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (trunc_ln206_reg_1104 = ap_const_lv2_3)))) then 
                tempa_0_32_be_reg_473 <= tempa_0_32_reg_397;
            end if; 
        end if;
    end process;

    tempa_0_32_reg_397_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                tempa_0_32_reg_397 <= tempa_0_32_be_reg_473;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln186_fu_836_p2 = ap_const_lv1_1) and (icmp_ln175_fu_802_p2 = ap_const_lv1_1))) then 
                tempa_0_32_reg_397 <= tempa_0_reg_259;
            end if; 
        end if;
    end process;

    tempa_0_5_reg_527_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln186_fu_836_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln175_fu_802_p2 = ap_const_lv1_1))) then 
                tempa_0_5_reg_527 <= tempa_3_reg_270;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln186_reg_1084 = ap_const_lv1_1))) then 
                tempa_0_5_reg_527 <= tempa_0_2_fu_892_p2;
            end if; 
        end if;
    end process;

    tempa_0_63_be_reg_699_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (trunc_ln220_reg_1138 = ap_const_lv2_0))) then 
                tempa_0_63_be_reg_699 <= sbox_q0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state14) and (trunc_ln220_reg_1138 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (trunc_ln220_reg_1138 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (trunc_ln220_reg_1138 = ap_const_lv2_3)))) then 
                tempa_0_63_be_reg_699 <= tempa_0_63_reg_571;
            end if; 
        end if;
    end process;

    tempa_0_63_reg_571_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                tempa_0_63_reg_571 <= tempa_0_63_be_reg_699;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln215_fu_899_p2 = ap_const_lv1_1))) then 
                tempa_0_63_reg_571 <= ap_phi_mux_tempa_0_5_phi_fu_530_p4;
            end if; 
        end if;
    end process;

    tempa_0_85_reg_632_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln218_fu_904_p2 = ap_const_lv1_1) and (icmp_ln215_reg_1126 = ap_const_lv1_1))) then 
                tempa_0_85_reg_632 <= tempa_0_63_reg_571;
            elsif (((icmp_ln215_fu_899_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                tempa_0_85_reg_632 <= ap_phi_mux_tempa_0_5_phi_fu_530_p4;
            end if; 
        end if;
    end process;

    tempa_0_be_reg_328_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (trunc_ln177_reg_1075 = ap_const_lv2_1))) then 
                tempa_0_be_reg_328 <= RoundKey_q0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state7) and (trunc_ln177_reg_1075 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (trunc_ln177_reg_1075 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (trunc_ln177_reg_1075 = ap_const_lv2_3)))) then 
                tempa_0_be_reg_328 <= tempa_0_reg_259;
            end if; 
        end if;
    end process;

    tempa_0_reg_259_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                tempa_0_reg_259 <= tempa_0_be_reg_328;
            elsif (((icmp_ln171_fu_778_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                tempa_0_reg_259 <= tempa_1_0_reg_201;
            end if; 
        end if;
    end process;

    tempa_1_3_be_reg_455_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (trunc_ln206_reg_1104 = ap_const_lv2_1))) then 
                tempa_1_3_be_reg_455 <= sbox_q0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state10) and (trunc_ln206_reg_1104 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (trunc_ln206_reg_1104 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (trunc_ln206_reg_1104 = ap_const_lv2_3)))) then 
                tempa_1_3_be_reg_455 <= tempa_1_3_reg_386;
            end if; 
        end if;
    end process;

    tempa_1_3_reg_386_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                tempa_1_3_reg_386 <= tempa_1_3_be_reg_455;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln186_fu_836_p2 = ap_const_lv1_1) and (icmp_ln175_fu_802_p2 = ap_const_lv1_1))) then 
                tempa_1_3_reg_386 <= tempa_1_reg_248;
            end if; 
        end if;
    end process;

    tempa_1_5_reg_515_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln186_fu_836_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln175_fu_802_p2 = ap_const_lv1_1))) then 
                tempa_1_5_reg_515 <= tempa_0_reg_259;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln186_reg_1084 = ap_const_lv1_1))) then 
                tempa_1_5_reg_515 <= tempa_1_3_reg_386;
            end if; 
        end if;
    end process;

    tempa_1_6_be_reg_681_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (trunc_ln220_reg_1138 = ap_const_lv2_1))) then 
                tempa_1_6_be_reg_681 <= sbox_q0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state14) and (trunc_ln220_reg_1138 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (trunc_ln220_reg_1138 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (trunc_ln220_reg_1138 = ap_const_lv2_3)))) then 
                tempa_1_6_be_reg_681 <= tempa_1_6_reg_560;
            end if; 
        end if;
    end process;

    tempa_1_6_reg_560_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                tempa_1_6_reg_560 <= tempa_1_6_be_reg_681;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln215_fu_899_p2 = ap_const_lv1_1))) then 
                tempa_1_6_reg_560 <= ap_phi_mux_tempa_1_5_phi_fu_518_p4;
            end if; 
        end if;
    end process;

    tempa_1_8_reg_619_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln218_fu_904_p2 = ap_const_lv1_1) and (icmp_ln215_reg_1126 = ap_const_lv1_1))) then 
                tempa_1_8_reg_619 <= tempa_1_6_reg_560;
            elsif (((icmp_ln215_fu_899_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                tempa_1_8_reg_619 <= ap_phi_mux_tempa_1_5_phi_fu_518_p4;
            end if; 
        end if;
    end process;

    tempa_1_be_reg_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (trunc_ln177_reg_1075 = ap_const_lv2_2))) then 
                tempa_1_be_reg_310 <= RoundKey_q0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state7) and (trunc_ln177_reg_1075 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (trunc_ln177_reg_1075 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (trunc_ln177_reg_1075 = ap_const_lv2_3)))) then 
                tempa_1_be_reg_310 <= tempa_1_reg_248;
            end if; 
        end if;
    end process;

    tempa_1_reg_248_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                tempa_1_reg_248 <= tempa_1_be_reg_310;
            elsif (((icmp_ln171_fu_778_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                tempa_1_reg_248 <= tempa_2_0_reg_189;
            end if; 
        end if;
    end process;

    tempa_2_3_be_reg_437_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (trunc_ln206_reg_1104 = ap_const_lv2_2))) then 
                tempa_2_3_be_reg_437 <= sbox_q0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state10) and (trunc_ln206_reg_1104 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (trunc_ln206_reg_1104 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (trunc_ln206_reg_1104 = ap_const_lv2_3)))) then 
                tempa_2_3_be_reg_437 <= tempa_2_3_reg_375;
            end if; 
        end if;
    end process;

    tempa_2_3_reg_375_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                tempa_2_3_reg_375 <= tempa_2_3_be_reg_437;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln186_fu_836_p2 = ap_const_lv1_1) and (icmp_ln175_fu_802_p2 = ap_const_lv1_1))) then 
                tempa_2_3_reg_375 <= tempa_2_reg_237;
            end if; 
        end if;
    end process;

    tempa_2_5_reg_503_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln186_fu_836_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln175_fu_802_p2 = ap_const_lv1_1))) then 
                tempa_2_5_reg_503 <= tempa_1_reg_248;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln186_reg_1084 = ap_const_lv1_1))) then 
                tempa_2_5_reg_503 <= tempa_2_3_reg_375;
            end if; 
        end if;
    end process;

    tempa_2_6_be_reg_663_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state14) and (trunc_ln220_reg_1138 = ap_const_lv2_2))) then 
                tempa_2_6_be_reg_663 <= sbox_q0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state14) and (trunc_ln220_reg_1138 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (trunc_ln220_reg_1138 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (trunc_ln220_reg_1138 = ap_const_lv2_3)))) then 
                tempa_2_6_be_reg_663 <= tempa_2_6_reg_549;
            end if; 
        end if;
    end process;

    tempa_2_6_reg_549_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                tempa_2_6_reg_549 <= tempa_2_6_be_reg_663;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln215_fu_899_p2 = ap_const_lv1_1))) then 
                tempa_2_6_reg_549 <= ap_phi_mux_tempa_2_5_phi_fu_506_p4;
            end if; 
        end if;
    end process;

    tempa_2_8_reg_606_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln218_fu_904_p2 = ap_const_lv1_1) and (icmp_ln215_reg_1126 = ap_const_lv1_1))) then 
                tempa_2_8_reg_606 <= tempa_2_6_reg_549;
            elsif (((icmp_ln215_fu_899_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                tempa_2_8_reg_606 <= ap_phi_mux_tempa_2_5_phi_fu_506_p4;
            end if; 
        end if;
    end process;

    tempa_2_be_reg_292_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state7) and (trunc_ln177_reg_1075 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (trunc_ln177_reg_1075 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (trunc_ln177_reg_1075 = ap_const_lv2_2)))) then 
                tempa_2_be_reg_292 <= tempa_2_reg_237;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state7) and (trunc_ln177_reg_1075 = ap_const_lv2_3))) then 
                tempa_2_be_reg_292 <= RoundKey_q0;
            end if; 
        end if;
    end process;

    tempa_2_reg_237_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                tempa_2_reg_237 <= tempa_2_be_reg_292;
            elsif (((icmp_ln171_fu_778_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                tempa_2_reg_237 <= tempa_3_0_reg_177;
            end if; 
        end if;
    end process;

    tempa_3_3_be_reg_419_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state10) and (trunc_ln206_reg_1104 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (trunc_ln206_reg_1104 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (trunc_ln206_reg_1104 = ap_const_lv2_2)))) then 
                tempa_3_3_be_reg_419 <= tempa_3_3_reg_364;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (trunc_ln206_reg_1104 = ap_const_lv2_3))) then 
                tempa_3_3_be_reg_419 <= sbox_q0;
            end if; 
        end if;
    end process;

    tempa_3_3_reg_364_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                tempa_3_3_reg_364 <= tempa_3_3_be_reg_419;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln186_fu_836_p2 = ap_const_lv1_1) and (icmp_ln175_fu_802_p2 = ap_const_lv1_1))) then 
                tempa_3_3_reg_364 <= tempa_3_reg_270;
            end if; 
        end if;
    end process;

    tempa_3_5_reg_491_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln186_fu_836_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln175_fu_802_p2 = ap_const_lv1_1))) then 
                tempa_3_5_reg_491 <= tempa_2_reg_237;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln186_reg_1084 = ap_const_lv1_1))) then 
                tempa_3_5_reg_491 <= tempa_3_3_reg_364;
            end if; 
        end if;
    end process;

    tempa_3_6_be_reg_645_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state14) and (trunc_ln220_reg_1138 = ap_const_lv2_0)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (trunc_ln220_reg_1138 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state14) and (trunc_ln220_reg_1138 = ap_const_lv2_2)))) then 
                tempa_3_6_be_reg_645 <= tempa_3_6_reg_538;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state14) and (trunc_ln220_reg_1138 = ap_const_lv2_3))) then 
                tempa_3_6_be_reg_645 <= sbox_q0;
            end if; 
        end if;
    end process;

    tempa_3_6_reg_538_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                tempa_3_6_reg_538 <= tempa_3_6_be_reg_645;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln215_fu_899_p2 = ap_const_lv1_1))) then 
                tempa_3_6_reg_538 <= ap_phi_mux_tempa_3_5_phi_fu_494_p4;
            end if; 
        end if;
    end process;

    tempa_3_8_reg_593_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln218_fu_904_p2 = ap_const_lv1_1) and (icmp_ln215_reg_1126 = ap_const_lv1_1))) then 
                tempa_3_8_reg_593 <= tempa_3_6_reg_538;
            elsif (((icmp_ln215_fu_899_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
                tempa_3_8_reg_593 <= ap_phi_mux_tempa_3_5_phi_fu_494_p4;
            end if; 
        end if;
    end process;

    tempa_3_be_reg_346_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state7) and (trunc_ln177_reg_1075 = ap_const_lv2_0))) then 
                tempa_3_be_reg_346 <= RoundKey_q0;
            elsif ((((ap_const_logic_1 = ap_CS_fsm_state7) and (trunc_ln177_reg_1075 = ap_const_lv2_1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (trunc_ln177_reg_1075 = ap_const_lv2_2)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (trunc_ln177_reg_1075 = ap_const_lv2_3)))) then 
                tempa_3_be_reg_346 <= tempa_3_reg_270;
            end if; 
        end if;
    end process;

    tempa_3_reg_270_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                tempa_3_reg_270 <= tempa_3_be_reg_346;
            elsif (((icmp_ln171_fu_778_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
                tempa_3_reg_270 <= tempa_0_0_reg_213;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln229_fu_948_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                add_ln231_1_reg_1178 <= add_ln231_1_fu_996_p2;
                tmp_4_reg_1173 <= tmp_4_fu_982_p6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                i_reg_1020 <= i_fu_734_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln175_fu_802_p2 = ap_const_lv1_1))) then
                icmp_ln186_reg_1084 <= icmp_ln186_fu_836_p2;
                trunc_ln171_reg_1079 <= trunc_ln171_fu_832_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                icmp_ln215_reg_1126 <= icmp_ln215_fu_899_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                j_4_reg_1065 <= j_4_fu_808_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                j_5_reg_1099 <= j_5_fu_848_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln171_fu_778_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    j_6_reg_1051(7 downto 2) <= j_6_fu_784_p3(7 downto 2);
                    zext_ln175_reg_1057(7 downto 2) <= zext_ln175_fu_798_p1(7 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln215_reg_1126 = ap_const_lv1_1))) then
                j_7_reg_1133 <= j_7_fu_910_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                j_reg_1033 <= j_fu_758_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                l_reg_1163 <= l_fu_954_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln158_fu_728_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    shl_ln_reg_1025(4 downto 2) <= shl_ln_fu_744_p3(4 downto 2);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln229_fu_948_p2 = ap_const_lv1_1))) then
                tempa_0_0_reg_213 <= tempa_0_85_reg_632;
                tempa_1_0_reg_201 <= tempa_1_8_reg_619;
                tempa_2_0_reg_189 <= tempa_2_8_reg_606;
                tempa_3_0_reg_177 <= tempa_3_8_reg_593;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln175_fu_802_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then
                trunc_ln177_reg_1075 <= trunc_ln177_fu_828_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln204_fu_842_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                trunc_ln206_reg_1104 <= trunc_ln206_fu_854_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln218_fu_904_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13) and (icmp_ln215_reg_1126 = ap_const_lv1_1))) then
                trunc_ln220_reg_1138 <= trunc_ln220_fu_916_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln160_fu_752_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    zext_ln162_1_reg_1038(4 downto 0) <= zext_ln162_1_fu_773_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) and ((icmp_ln215_reg_1126 = ap_const_lv1_0) or (icmp_ln218_fu_904_p2 = ap_const_lv1_1)))) then
                    zext_ln231_reg_1147(7 downto 2) <= zext_ln231_fu_944_p1(7 downto 2);
            end if;
        end if;
    end process;
    shl_ln_reg_1025(1 downto 0) <= "00";
    zext_ln162_1_reg_1038(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    j_6_reg_1051(1 downto 0) <= "00";
    zext_ln175_reg_1057(1 downto 0) <= "00";
    zext_ln175_reg_1057(8) <= '0';
    zext_ln231_reg_1147(1 downto 0) <= "00";
    zext_ln231_reg_1147(8) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, icmp_ln158_fu_728_p2, ap_CS_fsm_state3, icmp_ln160_fu_752_p2, ap_CS_fsm_state5, icmp_ln171_fu_778_p2, ap_CS_fsm_state6, icmp_ln175_fu_802_p2, icmp_ln186_fu_836_p2, ap_CS_fsm_state9, icmp_ln204_fu_842_p2, icmp_ln215_reg_1126, ap_CS_fsm_state13, icmp_ln218_fu_904_p2, ap_CS_fsm_state16, icmp_ln229_fu_948_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln158_fu_728_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln160_fu_752_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state5 => 
                if (((icmp_ln171_fu_778_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln186_fu_836_p2 = ap_const_lv1_1) and (icmp_ln175_fu_802_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                elsif (((icmp_ln186_fu_836_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln175_fu_802_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state7;
                end if;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state9 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln204_fu_842_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state13) and ((icmp_ln215_reg_1126 = ap_const_lv1_0) or (icmp_ln218_fu_904_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state16 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state16) and (icmp_ln229_fu_948_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXX";
        end case;
    end process;
    Key_address0 <= zext_ln162_1_fu_773_p1(5 - 1 downto 0);

    Key_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            Key_ce0 <= ap_const_logic_1;
        else 
            Key_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    Rcon_address0 <= zext_ln212_fu_887_p1(4 - 1 downto 0);

    Rcon_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            Rcon_ce0 <= ap_const_logic_1;
        else 
            Rcon_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    RoundKey_address0_assign_proc : process(zext_ln162_1_reg_1038, ap_CS_fsm_state6, ap_CS_fsm_state16, ap_CS_fsm_state4, ap_CS_fsm_state17, zext_ln177_1_fu_823_p1, zext_ln231_3_fu_973_p1, zext_ln231_4_fu_1013_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            RoundKey_address0 <= zext_ln231_4_fu_1013_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            RoundKey_address0 <= zext_ln231_3_fu_973_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            RoundKey_address0 <= zext_ln177_1_fu_823_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            RoundKey_address0 <= zext_ln162_1_reg_1038(8 - 1 downto 0);
        else 
            RoundKey_address0 <= "XXXXXXXX";
        end if; 
    end process;


    RoundKey_ce0_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state16, ap_CS_fsm_state4, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            RoundKey_ce0 <= ap_const_logic_1;
        else 
            RoundKey_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    RoundKey_d0_assign_proc : process(Key_q0, ap_CS_fsm_state4, ap_CS_fsm_state17, xor_ln231_fu_1007_p2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            RoundKey_d0 <= xor_ln231_fu_1007_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            RoundKey_d0 <= Key_q0;
        else 
            RoundKey_d0 <= "XXXXXXXX";
        end if; 
    end process;


    RoundKey_we0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            RoundKey_we0 <= ap_const_logic_1;
        else 
            RoundKey_we0 <= ap_const_logic_0;
        end if; 
    end process;

    add_ln162_fu_768_p2 <= std_logic_vector(unsigned(shl_ln_reg_1025) + unsigned(zext_ln162_fu_764_p1));
    add_ln177_fu_818_p2 <= std_logic_vector(unsigned(zext_ln175_reg_1057) + unsigned(zext_ln177_fu_814_p1));
    add_ln231_1_fu_996_p2 <= std_logic_vector(unsigned(j_6_reg_1051) + unsigned(zext_ln231_1_fu_960_p1));
    add_ln231_fu_968_p2 <= std_logic_vector(unsigned(zext_ln231_reg_1147) + unsigned(zext_ln231_2_fu_964_p1));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state5, icmp_ln171_fu_778_p2)
    begin
        if ((((icmp_ln171_fu_778_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_tempa_0_5_phi_fu_530_p4_assign_proc : process(icmp_ln186_reg_1084, ap_CS_fsm_state12, tempa_0_2_fu_892_p2, tempa_0_5_reg_527)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln186_reg_1084 = ap_const_lv1_1))) then 
            ap_phi_mux_tempa_0_5_phi_fu_530_p4 <= tempa_0_2_fu_892_p2;
        else 
            ap_phi_mux_tempa_0_5_phi_fu_530_p4 <= tempa_0_5_reg_527;
        end if; 
    end process;


    ap_phi_mux_tempa_1_5_phi_fu_518_p4_assign_proc : process(icmp_ln186_reg_1084, ap_CS_fsm_state12, tempa_1_3_reg_386, tempa_1_5_reg_515)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln186_reg_1084 = ap_const_lv1_1))) then 
            ap_phi_mux_tempa_1_5_phi_fu_518_p4 <= tempa_1_3_reg_386;
        else 
            ap_phi_mux_tempa_1_5_phi_fu_518_p4 <= tempa_1_5_reg_515;
        end if; 
    end process;


    ap_phi_mux_tempa_2_5_phi_fu_506_p4_assign_proc : process(icmp_ln186_reg_1084, ap_CS_fsm_state12, tempa_2_3_reg_375, tempa_2_5_reg_503)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln186_reg_1084 = ap_const_lv1_1))) then 
            ap_phi_mux_tempa_2_5_phi_fu_506_p4 <= tempa_2_3_reg_375;
        else 
            ap_phi_mux_tempa_2_5_phi_fu_506_p4 <= tempa_2_5_reg_503;
        end if; 
    end process;


    ap_phi_mux_tempa_3_5_phi_fu_494_p4_assign_proc : process(icmp_ln186_reg_1084, ap_CS_fsm_state12, tempa_3_3_reg_364, tempa_3_5_reg_491)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) and (icmp_ln186_reg_1084 = ap_const_lv1_1))) then 
            ap_phi_mux_tempa_3_5_phi_fu_494_p4 <= tempa_3_3_reg_364;
        else 
            ap_phi_mux_tempa_3_5_phi_fu_494_p4 <= tempa_3_5_reg_491;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state5, icmp_ln171_fu_778_p2)
    begin
        if (((icmp_ln171_fu_778_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    i_9_fu_1001_p2 <= std_logic_vector(unsigned(i_1_reg_225) + unsigned(ap_const_lv6_1));
    i_fu_734_p2 <= std_logic_vector(unsigned(i_0_reg_155) + unsigned(ap_const_lv4_1));
    icmp_ln158_fu_728_p2 <= "1" when (i_0_reg_155 = ap_const_lv4_8) else "0";
    icmp_ln160_fu_752_p2 <= "1" when (j_0_reg_166 = ap_const_lv3_4) else "0";
    icmp_ln171_fu_778_p2 <= "1" when (i_1_reg_225 = ap_const_lv6_3C) else "0";
    icmp_ln175_fu_802_p2 <= "1" when (j_1_reg_281 = ap_const_lv3_4) else "0";
    icmp_ln186_fu_836_p2 <= "1" when (trunc_ln171_fu_832_p1 = ap_const_lv3_0) else "0";
    icmp_ln204_fu_842_p2 <= "1" when (j_2_reg_408 = ap_const_lv3_4) else "0";
    icmp_ln215_fu_899_p2 <= "1" when (trunc_ln171_reg_1079 = ap_const_lv3_4) else "0";
    icmp_ln218_fu_904_p2 <= "1" when (j_3_reg_582 = ap_const_lv3_4) else "0";
    icmp_ln229_fu_948_p2 <= "1" when (l_0_reg_717 = ap_const_lv3_4) else "0";
    j_4_fu_808_p2 <= std_logic_vector(unsigned(j_1_reg_281) + unsigned(ap_const_lv3_1));
    j_5_fu_848_p2 <= std_logic_vector(unsigned(j_2_reg_408) + unsigned(ap_const_lv3_1));
    j_6_fu_784_p3 <= (i_1_reg_225 & ap_const_lv2_0);
    j_7_fu_910_p2 <= std_logic_vector(unsigned(j_3_reg_582) + unsigned(ap_const_lv3_1));
    j_fu_758_p2 <= std_logic_vector(unsigned(j_0_reg_166) + unsigned(ap_const_lv3_1));
    k_1_fu_939_p2 <= std_logic_vector(unsigned(j_6_reg_1051) + unsigned(ap_const_lv8_E0));
    k_fu_792_p2 <= std_logic_vector(unsigned(j_6_fu_784_p3) + unsigned(ap_const_lv8_FC));
    l_fu_954_p2 <= std_logic_vector(unsigned(l_0_reg_717) + unsigned(ap_const_lv3_1));
    lshr_ln_fu_877_p4 <= i_1_reg_225(5 downto 3);

    sbox_address0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state13, zext_ln206_fu_872_p1, zext_ln220_fu_934_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            sbox_address0 <= zext_ln220_fu_934_p1(8 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            sbox_address0 <= zext_ln206_fu_872_p1(8 - 1 downto 0);
        else 
            sbox_address0 <= "XXXXXXXX";
        end if; 
    end process;


    sbox_ce0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state13)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            sbox_ce0 <= ap_const_logic_1;
        else 
            sbox_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    shl_ln_fu_744_p3 <= (trunc_ln162_fu_740_p1 & ap_const_lv2_0);
    tempa_0_2_fu_892_p2 <= (tempa_0_32_reg_397 xor Rcon_q0);
    tmp_1_fu_858_p5 <= j_2_reg_408(2 - 1 downto 0);
    tmp_2_fu_920_p5 <= j_3_reg_582(2 - 1 downto 0);
    tmp_4_fu_982_p5 <= l_0_reg_717(2 - 1 downto 0);
    trunc_ln162_fu_740_p1 <= i_0_reg_155(3 - 1 downto 0);
    trunc_ln171_fu_832_p1 <= i_1_reg_225(3 - 1 downto 0);
    trunc_ln177_fu_828_p1 <= j_1_reg_281(2 - 1 downto 0);
    trunc_ln206_fu_854_p1 <= j_2_reg_408(2 - 1 downto 0);
    trunc_ln220_fu_916_p1 <= j_3_reg_582(2 - 1 downto 0);
    xor_ln231_fu_1007_p2 <= (tmp_4_reg_1173 xor RoundKey_q0);
    zext_ln162_1_fu_773_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln162_fu_768_p2),64));
    zext_ln162_fu_764_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_0_reg_166),5));
    zext_ln175_fu_798_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_fu_792_p2),9));
    zext_ln177_1_fu_823_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln177_fu_818_p2),64));
    zext_ln177_fu_814_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_1_reg_281),9));
    zext_ln206_fu_872_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_858_p6),64));
    zext_ln212_fu_887_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_877_p4),64));
    zext_ln220_fu_934_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_920_p6),64));
    zext_ln231_1_fu_960_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(l_0_reg_717),8));
    zext_ln231_2_fu_964_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(l_0_reg_717),9));
    zext_ln231_3_fu_973_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln231_fu_968_p2),64));
    zext_ln231_4_fu_1013_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln231_1_reg_1178),64));
    zext_ln231_fu_944_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_1_fu_939_p2),9));
end behav;

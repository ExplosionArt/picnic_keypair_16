// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module KeyExpansion (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        RoundKey_address0,
        RoundKey_ce0,
        RoundKey_we0,
        RoundKey_d0,
        RoundKey_q0,
        Key_address0,
        Key_ce0,
        Key_q0
);

parameter    ap_ST_fsm_state1 = 17'd1;
parameter    ap_ST_fsm_state2 = 17'd2;
parameter    ap_ST_fsm_state3 = 17'd4;
parameter    ap_ST_fsm_state4 = 17'd8;
parameter    ap_ST_fsm_state5 = 17'd16;
parameter    ap_ST_fsm_state6 = 17'd32;
parameter    ap_ST_fsm_state7 = 17'd64;
parameter    ap_ST_fsm_state8 = 17'd128;
parameter    ap_ST_fsm_state9 = 17'd256;
parameter    ap_ST_fsm_state10 = 17'd512;
parameter    ap_ST_fsm_state11 = 17'd1024;
parameter    ap_ST_fsm_state12 = 17'd2048;
parameter    ap_ST_fsm_state13 = 17'd4096;
parameter    ap_ST_fsm_state14 = 17'd8192;
parameter    ap_ST_fsm_state15 = 17'd16384;
parameter    ap_ST_fsm_state16 = 17'd32768;
parameter    ap_ST_fsm_state17 = 17'd65536;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] RoundKey_address0;
output   RoundKey_ce0;
output   RoundKey_we0;
output  [7:0] RoundKey_d0;
input  [7:0] RoundKey_q0;
output  [4:0] Key_address0;
output   Key_ce0;
input  [7:0] Key_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[7:0] RoundKey_address0;
reg RoundKey_ce0;
reg RoundKey_we0;
reg[7:0] RoundKey_d0;
reg Key_ce0;

(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] sbox_address0;
reg    sbox_ce0;
wire   [7:0] sbox_q0;
wire   [3:0] Rcon_address0;
reg    Rcon_ce0;
wire   [7:0] Rcon_q0;
wire   [3:0] i_fu_734_p2;
reg   [3:0] i_reg_1020;
wire    ap_CS_fsm_state2;
wire   [4:0] shl_ln_fu_744_p3;
reg   [4:0] shl_ln_reg_1025;
wire   [0:0] icmp_ln158_fu_728_p2;
wire   [2:0] j_fu_758_p2;
reg   [2:0] j_reg_1033;
wire    ap_CS_fsm_state3;
wire   [63:0] zext_ln162_1_fu_773_p1;
reg   [63:0] zext_ln162_1_reg_1038;
wire   [0:0] icmp_ln160_fu_752_p2;
wire   [7:0] j_6_fu_784_p3;
reg   [7:0] j_6_reg_1051;
wire    ap_CS_fsm_state5;
wire   [0:0] icmp_ln171_fu_778_p2;
wire   [8:0] zext_ln175_fu_798_p1;
reg   [8:0] zext_ln175_reg_1057;
wire   [2:0] j_4_fu_808_p2;
reg   [2:0] j_4_reg_1065;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln175_fu_802_p2;
wire   [1:0] trunc_ln177_fu_828_p1;
reg   [1:0] trunc_ln177_reg_1075;
wire   [2:0] trunc_ln171_fu_832_p1;
reg   [2:0] trunc_ln171_reg_1079;
wire   [0:0] icmp_ln186_fu_836_p2;
reg   [0:0] icmp_ln186_reg_1084;
wire    ap_CS_fsm_state7;
wire   [2:0] j_5_fu_848_p2;
reg   [2:0] j_5_reg_1099;
wire    ap_CS_fsm_state9;
wire   [1:0] trunc_ln206_fu_854_p1;
reg   [1:0] trunc_ln206_reg_1104;
wire   [0:0] icmp_ln204_fu_842_p2;
wire    ap_CS_fsm_state10;
wire   [0:0] icmp_ln215_fu_899_p2;
reg   [0:0] icmp_ln215_reg_1126;
wire    ap_CS_fsm_state12;
wire   [2:0] j_7_fu_910_p2;
reg   [2:0] j_7_reg_1133;
wire    ap_CS_fsm_state13;
wire   [1:0] trunc_ln220_fu_916_p1;
reg   [1:0] trunc_ln220_reg_1138;
wire   [0:0] icmp_ln218_fu_904_p2;
wire   [8:0] zext_ln231_fu_944_p1;
reg   [8:0] zext_ln231_reg_1147;
wire    ap_CS_fsm_state14;
wire   [2:0] l_fu_954_p2;
reg   [2:0] l_reg_1163;
wire    ap_CS_fsm_state16;
wire   [0:0] icmp_ln229_fu_948_p2;
wire   [7:0] tmp_4_fu_982_p6;
reg   [7:0] tmp_4_reg_1173;
wire   [7:0] add_ln231_1_fu_996_p2;
reg   [7:0] add_ln231_1_reg_1178;
wire   [5:0] i_9_fu_1001_p2;
reg   [3:0] i_0_reg_155;
reg   [2:0] j_0_reg_166;
wire    ap_CS_fsm_state4;
reg   [7:0] tempa_3_8_reg_593;
reg   [7:0] tempa_3_0_reg_177;
reg   [7:0] tempa_2_8_reg_606;
reg   [7:0] tempa_2_0_reg_189;
reg   [7:0] tempa_1_8_reg_619;
reg   [7:0] tempa_1_0_reg_201;
reg   [7:0] tempa_0_85_reg_632;
reg   [7:0] tempa_0_0_reg_213;
reg   [5:0] i_1_reg_225;
reg   [7:0] tempa_2_reg_237;
wire    ap_CS_fsm_state8;
reg   [7:0] tempa_1_reg_248;
reg   [7:0] tempa_0_reg_259;
reg   [7:0] tempa_3_reg_270;
reg   [2:0] j_1_reg_281;
reg   [7:0] tempa_2_be_reg_292;
reg   [7:0] tempa_1_be_reg_310;
reg   [7:0] tempa_0_be_reg_328;
reg   [7:0] tempa_3_be_reg_346;
reg   [7:0] tempa_3_3_reg_364;
wire    ap_CS_fsm_state11;
reg   [7:0] tempa_2_3_reg_375;
reg   [7:0] tempa_1_3_reg_386;
reg   [7:0] tempa_0_32_reg_397;
reg   [2:0] j_2_reg_408;
reg   [7:0] tempa_3_3_be_reg_419;
reg   [7:0] tempa_2_3_be_reg_437;
reg   [7:0] tempa_1_3_be_reg_455;
reg   [7:0] tempa_0_32_be_reg_473;
reg   [7:0] ap_phi_mux_tempa_3_5_phi_fu_494_p4;
reg   [7:0] tempa_3_5_reg_491;
reg   [7:0] ap_phi_mux_tempa_2_5_phi_fu_506_p4;
reg   [7:0] tempa_2_5_reg_503;
reg   [7:0] ap_phi_mux_tempa_1_5_phi_fu_518_p4;
reg   [7:0] tempa_1_5_reg_515;
wire   [7:0] tempa_0_2_fu_892_p2;
reg   [7:0] ap_phi_mux_tempa_0_5_phi_fu_530_p4;
reg   [7:0] tempa_0_5_reg_527;
reg   [7:0] tempa_3_6_reg_538;
wire    ap_CS_fsm_state15;
reg   [7:0] tempa_2_6_reg_549;
reg   [7:0] tempa_1_6_reg_560;
reg   [7:0] tempa_0_63_reg_571;
reg   [2:0] j_3_reg_582;
reg   [7:0] tempa_3_6_be_reg_645;
reg   [7:0] tempa_2_6_be_reg_663;
reg   [7:0] tempa_1_6_be_reg_681;
reg   [7:0] tempa_0_63_be_reg_699;
reg   [2:0] l_0_reg_717;
wire    ap_CS_fsm_state17;
wire   [63:0] zext_ln177_1_fu_823_p1;
wire   [63:0] zext_ln206_fu_872_p1;
wire   [63:0] zext_ln212_fu_887_p1;
wire   [63:0] zext_ln220_fu_934_p1;
wire   [63:0] zext_ln231_3_fu_973_p1;
wire   [63:0] zext_ln231_4_fu_1013_p1;
wire   [7:0] xor_ln231_fu_1007_p2;
wire   [2:0] trunc_ln162_fu_740_p1;
wire   [4:0] zext_ln162_fu_764_p1;
wire   [4:0] add_ln162_fu_768_p2;
wire   [7:0] k_fu_792_p2;
wire   [8:0] zext_ln177_fu_814_p1;
wire   [8:0] add_ln177_fu_818_p2;
wire   [1:0] tmp_1_fu_858_p5;
wire   [7:0] tmp_1_fu_858_p6;
wire   [2:0] lshr_ln_fu_877_p4;
wire   [1:0] tmp_2_fu_920_p5;
wire   [7:0] tmp_2_fu_920_p6;
wire   [7:0] k_1_fu_939_p2;
wire   [8:0] zext_ln231_2_fu_964_p1;
wire   [8:0] add_ln231_fu_968_p2;
wire   [1:0] tmp_4_fu_982_p5;
wire   [7:0] zext_ln231_1_fu_960_p1;
reg   [16:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 17'd1;
end

KeyExpansion_sbox #(
    .DataWidth( 8 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
sbox_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(sbox_address0),
    .ce0(sbox_ce0),
    .q0(sbox_q0)
);

KeyExpansion_Rcon #(
    .DataWidth( 8 ),
    .AddressRange( 11 ),
    .AddressWidth( 4 ))
Rcon_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(Rcon_address0),
    .ce0(Rcon_ce0),
    .q0(Rcon_q0)
);

crypto_sign_keypabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
crypto_sign_keypabkb_U1(
    .din0(tempa_0_32_reg_397),
    .din1(tempa_1_3_reg_386),
    .din2(tempa_2_3_reg_375),
    .din3(tempa_3_3_reg_364),
    .din4(tmp_1_fu_858_p5),
    .dout(tmp_1_fu_858_p6)
);

crypto_sign_keypabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
crypto_sign_keypabkb_U2(
    .din0(tempa_0_63_reg_571),
    .din1(tempa_1_6_reg_560),
    .din2(tempa_2_6_reg_549),
    .din3(tempa_3_6_reg_538),
    .din4(tmp_2_fu_920_p5),
    .dout(tmp_2_fu_920_p6)
);

crypto_sign_keypabkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 2 ),
    .dout_WIDTH( 8 ))
crypto_sign_keypabkb_U3(
    .din0(tempa_0_85_reg_632),
    .din1(tempa_1_8_reg_619),
    .din2(tempa_2_8_reg_606),
    .din3(tempa_3_8_reg_593),
    .din4(tmp_4_fu_982_p5),
    .dout(tmp_4_fu_982_p6)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln160_fu_752_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        i_0_reg_155 <= i_reg_1020;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_155 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln158_fu_728_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        i_1_reg_225 <= 6'd8;
    end else if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln229_fu_948_p2 == 1'd1))) begin
        i_1_reg_225 <= i_9_fu_1001_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        j_0_reg_166 <= j_reg_1033;
    end else if (((icmp_ln158_fu_728_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_0_reg_166 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        j_1_reg_281 <= j_4_reg_1065;
    end else if (((icmp_ln171_fu_778_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        j_1_reg_281 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        j_2_reg_408 <= j_5_reg_1099;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln186_fu_836_p2 == 1'd1) & (icmp_ln175_fu_802_p2 == 1'd1))) begin
        j_2_reg_408 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        j_3_reg_582 <= j_7_reg_1133;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln215_fu_899_p2 == 1'd1))) begin
        j_3_reg_582 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        l_0_reg_717 <= l_reg_1163;
    end else if (((1'b1 == ap_CS_fsm_state13) & ((icmp_ln215_reg_1126 == 1'd0) | (icmp_ln218_fu_904_p2 == 1'd1)))) begin
        l_0_reg_717 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (trunc_ln206_reg_1104 == 2'd0))) begin
        tempa_0_32_be_reg_473 <= sbox_q0;
    end else if ((((1'b1 == ap_CS_fsm_state10) & (trunc_ln206_reg_1104 == 2'd1)) | ((1'b1 == ap_CS_fsm_state10) & (trunc_ln206_reg_1104 == 2'd2)) | ((1'b1 == ap_CS_fsm_state10) & (trunc_ln206_reg_1104 == 2'd3)))) begin
        tempa_0_32_be_reg_473 <= tempa_0_32_reg_397;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tempa_0_32_reg_397 <= tempa_0_32_be_reg_473;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln186_fu_836_p2 == 1'd1) & (icmp_ln175_fu_802_p2 == 1'd1))) begin
        tempa_0_32_reg_397 <= tempa_0_reg_259;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln186_fu_836_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln175_fu_802_p2 == 1'd1))) begin
        tempa_0_5_reg_527 <= tempa_3_reg_270;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln186_reg_1084 == 1'd1))) begin
        tempa_0_5_reg_527 <= tempa_0_2_fu_892_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (trunc_ln220_reg_1138 == 2'd0))) begin
        tempa_0_63_be_reg_699 <= sbox_q0;
    end else if ((((1'b1 == ap_CS_fsm_state14) & (trunc_ln220_reg_1138 == 2'd1)) | ((1'b1 == ap_CS_fsm_state14) & (trunc_ln220_reg_1138 == 2'd2)) | ((1'b1 == ap_CS_fsm_state14) & (trunc_ln220_reg_1138 == 2'd3)))) begin
        tempa_0_63_be_reg_699 <= tempa_0_63_reg_571;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        tempa_0_63_reg_571 <= tempa_0_63_be_reg_699;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln215_fu_899_p2 == 1'd1))) begin
        tempa_0_63_reg_571 <= ap_phi_mux_tempa_0_5_phi_fu_530_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln218_fu_904_p2 == 1'd1) & (icmp_ln215_reg_1126 == 1'd1))) begin
        tempa_0_85_reg_632 <= tempa_0_63_reg_571;
    end else if (((icmp_ln215_fu_899_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        tempa_0_85_reg_632 <= ap_phi_mux_tempa_0_5_phi_fu_530_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (trunc_ln177_reg_1075 == 2'd1))) begin
        tempa_0_be_reg_328 <= RoundKey_q0;
    end else if ((((1'b1 == ap_CS_fsm_state7) & (trunc_ln177_reg_1075 == 2'd0)) | ((1'b1 == ap_CS_fsm_state7) & (trunc_ln177_reg_1075 == 2'd2)) | ((1'b1 == ap_CS_fsm_state7) & (trunc_ln177_reg_1075 == 2'd3)))) begin
        tempa_0_be_reg_328 <= tempa_0_reg_259;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tempa_0_reg_259 <= tempa_0_be_reg_328;
    end else if (((icmp_ln171_fu_778_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        tempa_0_reg_259 <= tempa_1_0_reg_201;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (trunc_ln206_reg_1104 == 2'd1))) begin
        tempa_1_3_be_reg_455 <= sbox_q0;
    end else if ((((1'b1 == ap_CS_fsm_state10) & (trunc_ln206_reg_1104 == 2'd0)) | ((1'b1 == ap_CS_fsm_state10) & (trunc_ln206_reg_1104 == 2'd2)) | ((1'b1 == ap_CS_fsm_state10) & (trunc_ln206_reg_1104 == 2'd3)))) begin
        tempa_1_3_be_reg_455 <= tempa_1_3_reg_386;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tempa_1_3_reg_386 <= tempa_1_3_be_reg_455;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln186_fu_836_p2 == 1'd1) & (icmp_ln175_fu_802_p2 == 1'd1))) begin
        tempa_1_3_reg_386 <= tempa_1_reg_248;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln186_fu_836_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln175_fu_802_p2 == 1'd1))) begin
        tempa_1_5_reg_515 <= tempa_0_reg_259;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln186_reg_1084 == 1'd1))) begin
        tempa_1_5_reg_515 <= tempa_1_3_reg_386;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (trunc_ln220_reg_1138 == 2'd1))) begin
        tempa_1_6_be_reg_681 <= sbox_q0;
    end else if ((((1'b1 == ap_CS_fsm_state14) & (trunc_ln220_reg_1138 == 2'd0)) | ((1'b1 == ap_CS_fsm_state14) & (trunc_ln220_reg_1138 == 2'd2)) | ((1'b1 == ap_CS_fsm_state14) & (trunc_ln220_reg_1138 == 2'd3)))) begin
        tempa_1_6_be_reg_681 <= tempa_1_6_reg_560;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        tempa_1_6_reg_560 <= tempa_1_6_be_reg_681;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln215_fu_899_p2 == 1'd1))) begin
        tempa_1_6_reg_560 <= ap_phi_mux_tempa_1_5_phi_fu_518_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln218_fu_904_p2 == 1'd1) & (icmp_ln215_reg_1126 == 1'd1))) begin
        tempa_1_8_reg_619 <= tempa_1_6_reg_560;
    end else if (((icmp_ln215_fu_899_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        tempa_1_8_reg_619 <= ap_phi_mux_tempa_1_5_phi_fu_518_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (trunc_ln177_reg_1075 == 2'd2))) begin
        tempa_1_be_reg_310 <= RoundKey_q0;
    end else if ((((1'b1 == ap_CS_fsm_state7) & (trunc_ln177_reg_1075 == 2'd0)) | ((1'b1 == ap_CS_fsm_state7) & (trunc_ln177_reg_1075 == 2'd1)) | ((1'b1 == ap_CS_fsm_state7) & (trunc_ln177_reg_1075 == 2'd3)))) begin
        tempa_1_be_reg_310 <= tempa_1_reg_248;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tempa_1_reg_248 <= tempa_1_be_reg_310;
    end else if (((icmp_ln171_fu_778_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        tempa_1_reg_248 <= tempa_2_0_reg_189;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (trunc_ln206_reg_1104 == 2'd2))) begin
        tempa_2_3_be_reg_437 <= sbox_q0;
    end else if ((((1'b1 == ap_CS_fsm_state10) & (trunc_ln206_reg_1104 == 2'd0)) | ((1'b1 == ap_CS_fsm_state10) & (trunc_ln206_reg_1104 == 2'd1)) | ((1'b1 == ap_CS_fsm_state10) & (trunc_ln206_reg_1104 == 2'd3)))) begin
        tempa_2_3_be_reg_437 <= tempa_2_3_reg_375;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tempa_2_3_reg_375 <= tempa_2_3_be_reg_437;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln186_fu_836_p2 == 1'd1) & (icmp_ln175_fu_802_p2 == 1'd1))) begin
        tempa_2_3_reg_375 <= tempa_2_reg_237;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln186_fu_836_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln175_fu_802_p2 == 1'd1))) begin
        tempa_2_5_reg_503 <= tempa_1_reg_248;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln186_reg_1084 == 1'd1))) begin
        tempa_2_5_reg_503 <= tempa_2_3_reg_375;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (trunc_ln220_reg_1138 == 2'd2))) begin
        tempa_2_6_be_reg_663 <= sbox_q0;
    end else if ((((1'b1 == ap_CS_fsm_state14) & (trunc_ln220_reg_1138 == 2'd0)) | ((1'b1 == ap_CS_fsm_state14) & (trunc_ln220_reg_1138 == 2'd1)) | ((1'b1 == ap_CS_fsm_state14) & (trunc_ln220_reg_1138 == 2'd3)))) begin
        tempa_2_6_be_reg_663 <= tempa_2_6_reg_549;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        tempa_2_6_reg_549 <= tempa_2_6_be_reg_663;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln215_fu_899_p2 == 1'd1))) begin
        tempa_2_6_reg_549 <= ap_phi_mux_tempa_2_5_phi_fu_506_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln218_fu_904_p2 == 1'd1) & (icmp_ln215_reg_1126 == 1'd1))) begin
        tempa_2_8_reg_606 <= tempa_2_6_reg_549;
    end else if (((icmp_ln215_fu_899_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        tempa_2_8_reg_606 <= ap_phi_mux_tempa_2_5_phi_fu_506_p4;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state7) & (trunc_ln177_reg_1075 == 2'd0)) | ((1'b1 == ap_CS_fsm_state7) & (trunc_ln177_reg_1075 == 2'd1)) | ((1'b1 == ap_CS_fsm_state7) & (trunc_ln177_reg_1075 == 2'd2)))) begin
        tempa_2_be_reg_292 <= tempa_2_reg_237;
    end else if (((1'b1 == ap_CS_fsm_state7) & (trunc_ln177_reg_1075 == 2'd3))) begin
        tempa_2_be_reg_292 <= RoundKey_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tempa_2_reg_237 <= tempa_2_be_reg_292;
    end else if (((icmp_ln171_fu_778_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        tempa_2_reg_237 <= tempa_3_0_reg_177;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state10) & (trunc_ln206_reg_1104 == 2'd0)) | ((1'b1 == ap_CS_fsm_state10) & (trunc_ln206_reg_1104 == 2'd1)) | ((1'b1 == ap_CS_fsm_state10) & (trunc_ln206_reg_1104 == 2'd2)))) begin
        tempa_3_3_be_reg_419 <= tempa_3_3_reg_364;
    end else if (((1'b1 == ap_CS_fsm_state10) & (trunc_ln206_reg_1104 == 2'd3))) begin
        tempa_3_3_be_reg_419 <= sbox_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        tempa_3_3_reg_364 <= tempa_3_3_be_reg_419;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln186_fu_836_p2 == 1'd1) & (icmp_ln175_fu_802_p2 == 1'd1))) begin
        tempa_3_3_reg_364 <= tempa_3_reg_270;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln186_fu_836_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln175_fu_802_p2 == 1'd1))) begin
        tempa_3_5_reg_491 <= tempa_2_reg_237;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln186_reg_1084 == 1'd1))) begin
        tempa_3_5_reg_491 <= tempa_3_3_reg_364;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state14) & (trunc_ln220_reg_1138 == 2'd0)) | ((1'b1 == ap_CS_fsm_state14) & (trunc_ln220_reg_1138 == 2'd1)) | ((1'b1 == ap_CS_fsm_state14) & (trunc_ln220_reg_1138 == 2'd2)))) begin
        tempa_3_6_be_reg_645 <= tempa_3_6_reg_538;
    end else if (((1'b1 == ap_CS_fsm_state14) & (trunc_ln220_reg_1138 == 2'd3))) begin
        tempa_3_6_be_reg_645 <= sbox_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        tempa_3_6_reg_538 <= tempa_3_6_be_reg_645;
    end else if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln215_fu_899_p2 == 1'd1))) begin
        tempa_3_6_reg_538 <= ap_phi_mux_tempa_3_5_phi_fu_494_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln218_fu_904_p2 == 1'd1) & (icmp_ln215_reg_1126 == 1'd1))) begin
        tempa_3_8_reg_593 <= tempa_3_6_reg_538;
    end else if (((icmp_ln215_fu_899_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
        tempa_3_8_reg_593 <= ap_phi_mux_tempa_3_5_phi_fu_494_p4;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (trunc_ln177_reg_1075 == 2'd0))) begin
        tempa_3_be_reg_346 <= RoundKey_q0;
    end else if ((((1'b1 == ap_CS_fsm_state7) & (trunc_ln177_reg_1075 == 2'd1)) | ((1'b1 == ap_CS_fsm_state7) & (trunc_ln177_reg_1075 == 2'd2)) | ((1'b1 == ap_CS_fsm_state7) & (trunc_ln177_reg_1075 == 2'd3)))) begin
        tempa_3_be_reg_346 <= tempa_3_reg_270;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        tempa_3_reg_270 <= tempa_3_be_reg_346;
    end else if (((icmp_ln171_fu_778_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        tempa_3_reg_270 <= tempa_0_0_reg_213;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln229_fu_948_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state16))) begin
        add_ln231_1_reg_1178 <= add_ln231_1_fu_996_p2;
        tmp_4_reg_1173 <= tmp_4_fu_982_p6;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        i_reg_1020 <= i_fu_734_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln175_fu_802_p2 == 1'd1))) begin
        icmp_ln186_reg_1084 <= icmp_ln186_fu_836_p2;
        trunc_ln171_reg_1079 <= trunc_ln171_fu_832_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        icmp_ln215_reg_1126 <= icmp_ln215_fu_899_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        j_4_reg_1065 <= j_4_fu_808_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        j_5_reg_1099 <= j_5_fu_848_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln171_fu_778_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
        j_6_reg_1051[7 : 2] <= j_6_fu_784_p3[7 : 2];
        zext_ln175_reg_1057[7 : 2] <= zext_ln175_fu_798_p1[7 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (icmp_ln215_reg_1126 == 1'd1))) begin
        j_7_reg_1133 <= j_7_fu_910_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_reg_1033 <= j_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        l_reg_1163 <= l_fu_954_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln158_fu_728_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        shl_ln_reg_1025[4 : 2] <= shl_ln_fu_744_p3[4 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln229_fu_948_p2 == 1'd1))) begin
        tempa_0_0_reg_213 <= tempa_0_85_reg_632;
        tempa_1_0_reg_201 <= tempa_1_8_reg_619;
        tempa_2_0_reg_189 <= tempa_2_8_reg_606;
        tempa_3_0_reg_177 <= tempa_3_8_reg_593;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln175_fu_802_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6))) begin
        trunc_ln177_reg_1075 <= trunc_ln177_fu_828_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln204_fu_842_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        trunc_ln206_reg_1104 <= trunc_ln206_fu_854_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln218_fu_904_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13) & (icmp_ln215_reg_1126 == 1'd1))) begin
        trunc_ln220_reg_1138 <= trunc_ln220_fu_916_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln160_fu_752_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        zext_ln162_1_reg_1038[4 : 0] <= zext_ln162_1_fu_773_p1[4 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & ((icmp_ln215_reg_1126 == 1'd0) | (icmp_ln218_fu_904_p2 == 1'd1)))) begin
        zext_ln231_reg_1147[7 : 2] <= zext_ln231_fu_944_p1[7 : 2];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        Key_ce0 = 1'b1;
    end else begin
        Key_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        Rcon_ce0 = 1'b1;
    end else begin
        Rcon_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        RoundKey_address0 = zext_ln231_4_fu_1013_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        RoundKey_address0 = zext_ln231_3_fu_973_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        RoundKey_address0 = zext_ln177_1_fu_823_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        RoundKey_address0 = zext_ln162_1_reg_1038;
    end else begin
        RoundKey_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state6))) begin
        RoundKey_ce0 = 1'b1;
    end else begin
        RoundKey_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        RoundKey_d0 = xor_ln231_fu_1007_p2;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        RoundKey_d0 = Key_q0;
    end else begin
        RoundKey_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state4))) begin
        RoundKey_we0 = 1'b1;
    end else begin
        RoundKey_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln171_fu_778_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln186_reg_1084 == 1'd1))) begin
        ap_phi_mux_tempa_0_5_phi_fu_530_p4 = tempa_0_2_fu_892_p2;
    end else begin
        ap_phi_mux_tempa_0_5_phi_fu_530_p4 = tempa_0_5_reg_527;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln186_reg_1084 == 1'd1))) begin
        ap_phi_mux_tempa_1_5_phi_fu_518_p4 = tempa_1_3_reg_386;
    end else begin
        ap_phi_mux_tempa_1_5_phi_fu_518_p4 = tempa_1_5_reg_515;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln186_reg_1084 == 1'd1))) begin
        ap_phi_mux_tempa_2_5_phi_fu_506_p4 = tempa_2_3_reg_375;
    end else begin
        ap_phi_mux_tempa_2_5_phi_fu_506_p4 = tempa_2_5_reg_503;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) & (icmp_ln186_reg_1084 == 1'd1))) begin
        ap_phi_mux_tempa_3_5_phi_fu_494_p4 = tempa_3_3_reg_364;
    end else begin
        ap_phi_mux_tempa_3_5_phi_fu_494_p4 = tempa_3_5_reg_491;
    end
end

always @ (*) begin
    if (((icmp_ln171_fu_778_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        sbox_address0 = zext_ln220_fu_934_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        sbox_address0 = zext_ln206_fu_872_p1;
    end else begin
        sbox_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9))) begin
        sbox_ce0 = 1'b1;
    end else begin
        sbox_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln158_fu_728_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln160_fu_752_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln171_fu_778_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln186_fu_836_p2 == 1'd1) & (icmp_ln175_fu_802_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else if (((icmp_ln186_fu_836_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state6) & (icmp_ln175_fu_802_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln204_fu_842_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & ((icmp_ln215_reg_1126 == 1'd0) | (icmp_ln218_fu_904_p2 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (icmp_ln229_fu_948_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Key_address0 = zext_ln162_1_fu_773_p1;

assign Rcon_address0 = zext_ln212_fu_887_p1;

assign add_ln162_fu_768_p2 = (shl_ln_reg_1025 + zext_ln162_fu_764_p1);

assign add_ln177_fu_818_p2 = (zext_ln175_reg_1057 + zext_ln177_fu_814_p1);

assign add_ln231_1_fu_996_p2 = (j_6_reg_1051 + zext_ln231_1_fu_960_p1);

assign add_ln231_fu_968_p2 = (zext_ln231_reg_1147 + zext_ln231_2_fu_964_p1);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign i_9_fu_1001_p2 = (i_1_reg_225 + 6'd1);

assign i_fu_734_p2 = (i_0_reg_155 + 4'd1);

assign icmp_ln158_fu_728_p2 = ((i_0_reg_155 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln160_fu_752_p2 = ((j_0_reg_166 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln171_fu_778_p2 = ((i_1_reg_225 == 6'd60) ? 1'b1 : 1'b0);

assign icmp_ln175_fu_802_p2 = ((j_1_reg_281 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln186_fu_836_p2 = ((trunc_ln171_fu_832_p1 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln204_fu_842_p2 = ((j_2_reg_408 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln215_fu_899_p2 = ((trunc_ln171_reg_1079 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln218_fu_904_p2 = ((j_3_reg_582 == 3'd4) ? 1'b1 : 1'b0);

assign icmp_ln229_fu_948_p2 = ((l_0_reg_717 == 3'd4) ? 1'b1 : 1'b0);

assign j_4_fu_808_p2 = (j_1_reg_281 + 3'd1);

assign j_5_fu_848_p2 = (j_2_reg_408 + 3'd1);

assign j_6_fu_784_p3 = {{i_1_reg_225}, {2'd0}};

assign j_7_fu_910_p2 = (j_3_reg_582 + 3'd1);

assign j_fu_758_p2 = (j_0_reg_166 + 3'd1);

assign k_1_fu_939_p2 = ($signed(j_6_reg_1051) + $signed(8'd224));

assign k_fu_792_p2 = ($signed(j_6_fu_784_p3) + $signed(8'd252));

assign l_fu_954_p2 = (l_0_reg_717 + 3'd1);

assign lshr_ln_fu_877_p4 = {{i_1_reg_225[5:3]}};

assign shl_ln_fu_744_p3 = {{trunc_ln162_fu_740_p1}, {2'd0}};

assign tempa_0_2_fu_892_p2 = (tempa_0_32_reg_397 ^ Rcon_q0);

assign tmp_1_fu_858_p5 = j_2_reg_408[1:0];

assign tmp_2_fu_920_p5 = j_3_reg_582[1:0];

assign tmp_4_fu_982_p5 = l_0_reg_717[1:0];

assign trunc_ln162_fu_740_p1 = i_0_reg_155[2:0];

assign trunc_ln171_fu_832_p1 = i_1_reg_225[2:0];

assign trunc_ln177_fu_828_p1 = j_1_reg_281[1:0];

assign trunc_ln206_fu_854_p1 = j_2_reg_408[1:0];

assign trunc_ln220_fu_916_p1 = j_3_reg_582[1:0];

assign xor_ln231_fu_1007_p2 = (tmp_4_reg_1173 ^ RoundKey_q0);

assign zext_ln162_1_fu_773_p1 = add_ln162_fu_768_p2;

assign zext_ln162_fu_764_p1 = j_0_reg_166;

assign zext_ln175_fu_798_p1 = k_fu_792_p2;

assign zext_ln177_1_fu_823_p1 = add_ln177_fu_818_p2;

assign zext_ln177_fu_814_p1 = j_1_reg_281;

assign zext_ln206_fu_872_p1 = tmp_1_fu_858_p6;

assign zext_ln212_fu_887_p1 = lshr_ln_fu_877_p4;

assign zext_ln220_fu_934_p1 = tmp_2_fu_920_p6;

assign zext_ln231_1_fu_960_p1 = l_0_reg_717;

assign zext_ln231_2_fu_964_p1 = l_0_reg_717;

assign zext_ln231_3_fu_973_p1 = add_ln231_fu_968_p2;

assign zext_ln231_4_fu_1013_p1 = add_ln231_1_reg_1178;

assign zext_ln231_fu_944_p1 = k_1_fu_939_p2;

always @ (posedge ap_clk) begin
    shl_ln_reg_1025[1:0] <= 2'b00;
    zext_ln162_1_reg_1038[63:5] <= 59'b00000000000000000000000000000000000000000000000000000000000;
    j_6_reg_1051[1:0] <= 2'b00;
    zext_ln175_reg_1057[1:0] <= 2'b00;
    zext_ln175_reg_1057[8] <= 1'b0;
    zext_ln231_reg_1147[1:0] <= 2'b00;
    zext_ln231_reg_1147[8] <= 1'b0;
end

endmodule //KeyExpansion

// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "matrix_mul_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic matrix_mul_1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic matrix_mul_1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> matrix_mul_1::ap_ST_fsm_state1 = "1";
const sc_lv<11> matrix_mul_1::ap_ST_fsm_state2 = "10";
const sc_lv<11> matrix_mul_1::ap_ST_fsm_state3 = "100";
const sc_lv<11> matrix_mul_1::ap_ST_fsm_state4 = "1000";
const sc_lv<11> matrix_mul_1::ap_ST_fsm_state5 = "10000";
const sc_lv<11> matrix_mul_1::ap_ST_fsm_state6 = "100000";
const sc_lv<11> matrix_mul_1::ap_ST_fsm_state7 = "1000000";
const sc_lv<11> matrix_mul_1::ap_ST_fsm_state8 = "10000000";
const sc_lv<11> matrix_mul_1::ap_ST_fsm_state9 = "100000000";
const sc_lv<11> matrix_mul_1::ap_ST_fsm_state10 = "1000000000";
const sc_lv<11> matrix_mul_1::ap_ST_fsm_state11 = "10000000000";
const sc_lv<32> matrix_mul_1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> matrix_mul_1::ap_const_lv32_1 = "1";
const sc_lv<1> matrix_mul_1::ap_const_lv1_0 = "0";
const sc_lv<32> matrix_mul_1::ap_const_lv32_2 = "10";
const sc_lv<32> matrix_mul_1::ap_const_lv32_4 = "100";
const sc_lv<32> matrix_mul_1::ap_const_lv32_5 = "101";
const sc_lv<1> matrix_mul_1::ap_const_lv1_1 = "1";
const sc_lv<32> matrix_mul_1::ap_const_lv32_6 = "110";
const sc_lv<32> matrix_mul_1::ap_const_lv32_7 = "111";
const sc_lv<32> matrix_mul_1::ap_const_lv32_9 = "1001";
const sc_lv<8> matrix_mul_1::ap_const_lv8_0 = "00000000";
const sc_lv<32> matrix_mul_1::ap_const_lv32_8 = "1000";
const sc_lv<3> matrix_mul_1::ap_const_lv3_0 = "000";
const sc_lv<32> matrix_mul_1::ap_const_lv32_3 = "11";
const sc_lv<3> matrix_mul_1::ap_const_lv3_1 = "1";
const sc_lv<32> matrix_mul_1::ap_const_lv32_A = "1010";
const sc_lv<64> matrix_mul_1::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<4> matrix_mul_1::ap_const_lv4_0 = "0000";
const sc_lv<8> matrix_mul_1::ap_const_lv8_80 = "10000000";
const sc_lv<8> matrix_mul_1::ap_const_lv8_1 = "1";
const sc_lv<2> matrix_mul_1::ap_const_lv2_0 = "00";
const sc_lv<3> matrix_mul_1::ap_const_lv3_4 = "100";
const sc_lv<32> matrix_mul_1::ap_const_lv32_1F = "11111";
const sc_lv<32> matrix_mul_1::ap_const_lv32_18 = "11000";
const sc_lv<32> matrix_mul_1::ap_const_lv32_19 = "11001";
const sc_lv<32> matrix_mul_1::ap_const_lv32_1B = "11011";
const sc_lv<32> matrix_mul_1::ap_const_lv32_10 = "10000";
const sc_lv<6> matrix_mul_1::ap_const_lv6_7 = "111";
const sc_lv<6> matrix_mul_1::ap_const_lv6_1F = "11111";
const sc_lv<32> matrix_mul_1::ap_const_lv32_FFFFFFFF = "11111111111111111111111111111111";
const sc_lv<3> matrix_mul_1::ap_const_lv3_7 = "111";
const sc_lv<8> matrix_mul_1::ap_const_lv8_FF = "11111111";
const sc_lv<4> matrix_mul_1::ap_const_lv4_1 = "1";
const bool matrix_mul_1::ap_const_boolean_1 = true;

matrix_mul_1::matrix_mul_1(sc_module_name name) : sc_module(name), mVcdFile(0) {
    temp_matrix_U = new matrix_mul_1_tempeOg("temp_matrix_U");
    temp_matrix_U->clk(ap_clk);
    temp_matrix_U->reset(ap_rst);
    temp_matrix_U->address0(temp_matrix_address0);
    temp_matrix_U->ce0(temp_matrix_ce0);
    temp_matrix_U->q0(temp_matrix_q0);
    prod_U = new matrix_mul_1_prod("prod_U");
    prod_U->clk(ap_clk);
    prod_U->reset(ap_rst);
    prod_U->address0(prod_address0);
    prod_U->ce0(prod_ce0);
    prod_U->we0(prod_we0);
    prod_U->d0(prod_d0);
    prod_U->q0(prod_q0);
    temp_U = new matrix_mul_1_temp("temp_U");
    temp_U->clk(ap_clk);
    temp_U->reset(ap_rst);
    temp_U->address0(temp_address0);
    temp_U->ce0(temp_ce0);
    temp_U->we0(temp_we0);
    temp_U->d0(temp_d0);
    temp_U->q0(temp_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln133_fu_309_p2);
    sensitive << ( shl_ln_reg_909 );
    sensitive << ( zext_ln130_fu_293_p1 );

    SC_METHOD(thread_add_ln134_fu_323_p2);
    sensitive << ( matrix_offset );
    sensitive << ( zext_ln133_fu_314_p1 );

    SC_METHOD(thread_add_ln68_fu_609_p2);
    sensitive << ( zext_ln68_fu_601_p1 );

    SC_METHOD(thread_and_ln68_1_fu_707_p2);
    sensitive << ( lshr_ln68_fu_695_p2 );
    sensitive << ( lshr_ln68_1_fu_701_p2 );

    SC_METHOD(thread_and_ln68_2_fu_846_p2);
    sensitive << ( shl_ln68_3_fu_834_p2 );
    sensitive << ( lshr_ln68_2_fu_840_p2 );

    SC_METHOD(thread_and_ln68_fu_744_p2);
    sensitive << ( trunc_ln68_fu_713_p1 );
    sensitive << ( xor_ln68_1_fu_732_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln140_fu_869_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln140_fu_869_p2 );

    SC_METHOD(thread_i_5_fu_351_p2);
    sensitive << ( i_0_i_reg_243 );

    SC_METHOD(thread_i_fu_275_p2);
    sensitive << ( bitNumber_assign_reg_210 );

    SC_METHOD(thread_icmp_ln128_fu_269_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( bitNumber_assign_reg_210 );

    SC_METHOD(thread_icmp_ln130_fu_297_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( j_0_reg_222 );

    SC_METHOD(thread_icmp_ln140_fu_869_p2);
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( loop_0_reg_254 );

    SC_METHOD(thread_icmp_ln68_1_fu_756_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( zext_ln68_2_fu_605_p1 );
    sensitive << ( zext_ln68_4_fu_615_p1 );

    SC_METHOD(thread_icmp_ln68_fu_619_p2);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( zext_ln68_2_fu_605_p1 );
    sensitive << ( zext_ln68_4_fu_615_p1 );

    SC_METHOD(thread_icmp_ln87_fu_345_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( i_0_i_reg_243 );

    SC_METHOD(thread_j_fu_303_p2);
    sensitive << ( j_0_reg_222 );

    SC_METHOD(thread_loop_fu_875_p2);
    sensitive << ( loop_0_reg_254 );

    SC_METHOD(thread_lshr_ln2_fu_434_p4);
    sensitive << ( y_fu_428_p2 );

    SC_METHOD(thread_lshr_ln3_fu_478_p4);
    sensitive << ( y_1_fu_472_p2 );

    SC_METHOD(thread_lshr_ln68_1_fu_701_p2);
    sensitive << ( zext_ln68_7_fu_691_p1 );

    SC_METHOD(thread_lshr_ln68_2_fu_840_p2);
    sensitive << ( zext_ln68_12_fu_807_p1 );

    SC_METHOD(thread_lshr_ln68_fu_695_p2);
    sensitive << ( select_ln68_1_fu_665_p3 );
    sensitive << ( zext_ln68_6_fu_687_p1 );

    SC_METHOD(thread_lshr_ln_fu_388_p4);
    sensitive << ( x_0_i_reg_233 );

    SC_METHOD(thread_or_ln68_fu_750_p2);
    sensitive << ( and_ln68_fu_744_p2 );
    sensitive << ( shl_ln68_1_fu_738_p2 );

    SC_METHOD(thread_output_r_address0);
    sensitive << ( zext_ln141_reg_1003 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_output_r_ce0);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_output_r_d0);
    sensitive << ( temp_q0 );
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_output_r_we0);
    sensitive << ( ap_CS_fsm_state11 );

    SC_METHOD(thread_prod_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln134_reg_922 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( zext_ln87_fu_340_p1 );

    SC_METHOD(thread_prod_ce0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_prod_d0);
    sensitive << ( state_q0 );
    sensitive << ( temp_matrix_q0 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_prod_we0);
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_select_ln68_1_fu_665_p3);
    sensitive << ( temp_q0 );
    sensitive << ( icmp_ln68_fu_619_p2 );
    sensitive << ( tmp_9_fu_629_p4 );

    SC_METHOD(thread_select_ln68_2_fu_673_p3);
    sensitive << ( zext_ln68_5_fu_625_p1 );
    sensitive << ( icmp_ln68_fu_619_p2 );
    sensitive << ( xor_ln68_2_fu_645_p2 );

    SC_METHOD(thread_select_ln68_3_fu_774_p3);
    sensitive << ( add_ln68_reg_976 );
    sensitive << ( icmp_ln68_1_reg_987 );
    sensitive << ( zext_ln68_8_fu_762_p1 );

    SC_METHOD(thread_select_ln68_4_fu_780_p3);
    sensitive << ( add_ln68_reg_976 );
    sensitive << ( icmp_ln68_1_reg_987 );
    sensitive << ( zext_ln68_8_fu_762_p1 );

    SC_METHOD(thread_select_ln68_5_fu_786_p3);
    sensitive << ( icmp_ln68_1_reg_987 );
    sensitive << ( zext_ln68_8_fu_762_p1 );
    sensitive << ( xor_ln68_3_fu_768_p2 );

    SC_METHOD(thread_select_ln68_6_fu_827_p3);
    sensitive << ( icmp_ln68_1_reg_987 );
    sensitive << ( shl_ln68_2_fu_811_p2 );
    sensitive << ( tmp_10_fu_817_p4 );

    SC_METHOD(thread_select_ln68_fu_657_p3);
    sensitive << ( icmp_ln68_fu_619_p2 );
    sensitive << ( sub_ln68_fu_639_p2 );
    sensitive << ( sub_ln68_1_fu_651_p2 );

    SC_METHOD(thread_shl_ln68_1_fu_738_p2);
    sensitive << ( zext_ln68_1_fu_722_p1 );
    sensitive << ( zext_ln101_fu_590_p1 );

    SC_METHOD(thread_shl_ln68_2_fu_811_p2);
    sensitive << ( zext_ln68_9_fu_765_p1 );
    sensitive << ( zext_ln68_10_fu_799_p1 );

    SC_METHOD(thread_shl_ln68_3_fu_834_p2);
    sensitive << ( zext_ln68_11_fu_803_p1 );

    SC_METHOD(thread_shl_ln68_4_fu_862_p2);
    sensitive << ( zext_ln68_13_fu_859_p1 );

    SC_METHOD(thread_shl_ln68_fu_726_p2);
    sensitive << ( zext_ln68_1_fu_722_p1 );

    SC_METHOD(thread_shl_ln_fu_285_p3);
    sensitive << ( trunc_ln133_fu_281_p1 );

    SC_METHOD(thread_state_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln134_fu_318_p1 );

    SC_METHOD(thread_state_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_sub_ln68_1_fu_651_p2);
    sensitive << ( add_ln68_fu_609_p2 );
    sensitive << ( zext_ln68_5_fu_625_p1 );

    SC_METHOD(thread_sub_ln68_2_fu_681_p2);
    sensitive << ( select_ln68_fu_657_p3 );

    SC_METHOD(thread_sub_ln68_3_fu_793_p2);
    sensitive << ( select_ln68_3_fu_774_p3 );

    SC_METHOD(thread_sub_ln68_fu_639_p2);
    sensitive << ( add_ln68_fu_609_p2 );
    sensitive << ( zext_ln68_5_fu_625_p1 );

    SC_METHOD(thread_temp_address0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( temp_addr_4_reg_961 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( zext_ln141_fu_881_p1 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( zext_ln68_3_fu_377_p1 );

    SC_METHOD(thread_temp_ce0);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( ap_CS_fsm_state9 );

    SC_METHOD(thread_temp_d0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( select_ln68_6_fu_827_p3 );
    sensitive << ( and_ln68_2_fu_846_p2 );

    SC_METHOD(thread_temp_matrix_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln134_1_fu_328_p1 );

    SC_METHOD(thread_temp_matrix_ce0);
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_temp_we0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( shl_ln68_4_fu_862_p2 );

    SC_METHOD(thread_tmp_10_fu_817_p4);
    sensitive << ( shl_ln68_2_fu_811_p2 );

    SC_METHOD(thread_tmp_2_fu_406_p3);
    sensitive << ( x_0_i_reg_233 );

    SC_METHOD(thread_tmp_3_fu_448_p3);
    sensitive << ( y_fu_428_p2 );

    SC_METHOD(thread_tmp_4_fu_492_p3);
    sensitive << ( y_1_fu_472_p2 );

    SC_METHOD(thread_tmp_5_fu_538_p3);
    sensitive << ( y_2_fu_516_p2 );

    SC_METHOD(thread_tmp_6_fu_552_p3);
    sensitive << ( y_3_fu_546_p2 );

    SC_METHOD(thread_tmp_8_fu_367_p4);
    sensitive << ( bitNumber_assign_reg_210 );

    SC_METHOD(thread_tmp_9_fu_629_p4);
    sensitive << ( temp_q0 );

    SC_METHOD(thread_trunc_ln128_fu_265_p1);
    sensitive << ( bitNumber_assign_reg_210 );

    SC_METHOD(thread_trunc_ln133_fu_281_p1);
    sensitive << ( bitNumber_assign_reg_210 );

    SC_METHOD(thread_trunc_ln5_fu_528_p4);
    sensitive << ( y_2_fu_516_p2 );

    SC_METHOD(thread_trunc_ln68_fu_713_p1);
    sensitive << ( and_ln68_1_fu_707_p2 );

    SC_METHOD(thread_trunc_ln96_1_fu_414_p1);
    sensitive << ( x_0_i_reg_233 );

    SC_METHOD(thread_trunc_ln96_3_fu_418_p4);
    sensitive << ( x_0_i_reg_233 );

    SC_METHOD(thread_trunc_ln96_fu_402_p1);
    sensitive << ( x_0_i_reg_233 );

    SC_METHOD(thread_trunc_ln97_1_fu_462_p4);
    sensitive << ( y_fu_428_p2 );

    SC_METHOD(thread_trunc_ln98_1_fu_506_p4);
    sensitive << ( y_1_fu_472_p2 );

    SC_METHOD(thread_x_1_fu_382_p2);
    sensitive << ( prod_q0 );
    sensitive << ( x_0_i_reg_233 );

    SC_METHOD(thread_xor_ln101_1_fu_566_p2);
    sensitive << ( xor_ln101_fu_560_p2 );
    sensitive << ( tmp_2_fu_406_p3 );

    SC_METHOD(thread_xor_ln101_2_fu_572_p2);
    sensitive << ( tmp_5_fu_538_p3 );
    sensitive << ( tmp_6_fu_552_p3 );

    SC_METHOD(thread_xor_ln101_3_fu_578_p2);
    sensitive << ( xor_ln101_2_fu_572_p2 );
    sensitive << ( tmp_4_fu_492_p3 );

    SC_METHOD(thread_xor_ln101_4_fu_584_p2);
    sensitive << ( xor_ln101_3_fu_578_p2 );
    sensitive << ( xor_ln101_1_fu_566_p2 );

    SC_METHOD(thread_xor_ln101_fu_560_p2);
    sensitive << ( trunc_ln96_fu_402_p1 );
    sensitive << ( tmp_3_fu_448_p3 );

    SC_METHOD(thread_xor_ln68_1_fu_732_p2);
    sensitive << ( shl_ln68_fu_726_p2 );

    SC_METHOD(thread_xor_ln68_2_fu_645_p2);
    sensitive << ( zext_ln68_5_fu_625_p1 );

    SC_METHOD(thread_xor_ln68_3_fu_768_p2);
    sensitive << ( zext_ln68_8_fu_762_p1 );

    SC_METHOD(thread_xor_ln68_fu_717_p2);
    sensitive << ( trunc_ln128_reg_896 );

    SC_METHOD(thread_xor_ln97_fu_456_p2);
    sensitive << ( trunc_ln96_3_fu_418_p4 );
    sensitive << ( trunc_ln96_1_fu_414_p1 );

    SC_METHOD(thread_xor_ln98_2_fu_522_p2);
    sensitive << ( trunc_ln98_1_fu_506_p4 );
    sensitive << ( xor_ln98_fu_500_p2 );

    SC_METHOD(thread_xor_ln98_fu_500_p2);
    sensitive << ( trunc_ln97_1_fu_462_p4 );
    sensitive << ( xor_ln97_fu_456_p2 );

    SC_METHOD(thread_y_1_fu_472_p2);
    sensitive << ( y_fu_428_p2 );
    sensitive << ( zext_ln97_fu_444_p1 );

    SC_METHOD(thread_y_2_fu_516_p2);
    sensitive << ( y_1_fu_472_p2 );
    sensitive << ( zext_ln98_fu_488_p1 );

    SC_METHOD(thread_y_3_fu_546_p2);
    sensitive << ( trunc_ln5_fu_528_p4 );
    sensitive << ( xor_ln98_2_fu_522_p2 );

    SC_METHOD(thread_y_fu_428_p2);
    sensitive << ( x_0_i_reg_233 );
    sensitive << ( zext_ln96_fu_398_p1 );

    SC_METHOD(thread_zext_ln101_fu_590_p1);
    sensitive << ( xor_ln101_4_fu_584_p2 );

    SC_METHOD(thread_zext_ln130_fu_293_p1);
    sensitive << ( j_0_reg_222 );

    SC_METHOD(thread_zext_ln133_fu_314_p1);
    sensitive << ( add_ln133_fu_309_p2 );

    SC_METHOD(thread_zext_ln134_1_fu_328_p1);
    sensitive << ( add_ln134_fu_323_p2 );

    SC_METHOD(thread_zext_ln134_fu_318_p1);
    sensitive << ( j_0_reg_222 );

    SC_METHOD(thread_zext_ln141_fu_881_p1);
    sensitive << ( loop_0_reg_254 );

    SC_METHOD(thread_zext_ln68_10_fu_799_p1);
    sensitive << ( select_ln68_5_fu_786_p3 );

    SC_METHOD(thread_zext_ln68_11_fu_803_p1);
    sensitive << ( select_ln68_4_fu_780_p3 );

    SC_METHOD(thread_zext_ln68_12_fu_807_p1);
    sensitive << ( sub_ln68_3_fu_793_p2 );

    SC_METHOD(thread_zext_ln68_13_fu_859_p1);
    sensitive << ( tmp_7_reg_955 );

    SC_METHOD(thread_zext_ln68_1_fu_722_p1);
    sensitive << ( xor_ln68_fu_717_p2 );

    SC_METHOD(thread_zext_ln68_2_fu_605_p1);
    sensitive << ( zext_ln68_cast_fu_594_p3 );

    SC_METHOD(thread_zext_ln68_3_fu_377_p1);
    sensitive << ( tmp_8_fu_367_p4 );

    SC_METHOD(thread_zext_ln68_4_fu_615_p1);
    sensitive << ( add_ln68_fu_609_p2 );

    SC_METHOD(thread_zext_ln68_5_fu_625_p1);
    sensitive << ( zext_ln68_cast_fu_594_p3 );

    SC_METHOD(thread_zext_ln68_6_fu_687_p1);
    sensitive << ( select_ln68_2_fu_673_p3 );

    SC_METHOD(thread_zext_ln68_7_fu_691_p1);
    sensitive << ( sub_ln68_2_fu_681_p2 );

    SC_METHOD(thread_zext_ln68_8_fu_762_p1);
    sensitive << ( zext_ln68_cast_reg_971 );

    SC_METHOD(thread_zext_ln68_9_fu_765_p1);
    sensitive << ( or_ln68_reg_982 );

    SC_METHOD(thread_zext_ln68_cast_fu_594_p3);
    sensitive << ( tmp_7_reg_955 );

    SC_METHOD(thread_zext_ln68_fu_601_p1);
    sensitive << ( zext_ln68_cast_fu_594_p3 );

    SC_METHOD(thread_zext_ln87_fu_340_p1);
    sensitive << ( i_0_i_reg_243 );

    SC_METHOD(thread_zext_ln96_fu_398_p1);
    sensitive << ( lshr_ln_fu_388_p4 );

    SC_METHOD(thread_zext_ln97_fu_444_p1);
    sensitive << ( lshr_ln2_fu_434_p4 );

    SC_METHOD(thread_zext_ln98_fu_488_p1);
    sensitive << ( lshr_ln3_fu_478_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln128_fu_269_p2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln130_fu_297_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln87_fu_345_p2 );
    sensitive << ( ap_CS_fsm_state10 );
    sensitive << ( icmp_ln140_fu_869_p2 );

    ap_CS_fsm = "00000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "matrix_mul_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, output_r_address0, "(port)output_r_address0");
    sc_trace(mVcdFile, output_r_ce0, "(port)output_r_ce0");
    sc_trace(mVcdFile, output_r_we0, "(port)output_r_we0");
    sc_trace(mVcdFile, output_r_d0, "(port)output_r_d0");
    sc_trace(mVcdFile, state_address0, "(port)state_address0");
    sc_trace(mVcdFile, state_ce0, "(port)state_ce0");
    sc_trace(mVcdFile, state_q0, "(port)state_q0");
    sc_trace(mVcdFile, matrix_offset, "(port)matrix_offset");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, temp_matrix_address0, "temp_matrix_address0");
    sc_trace(mVcdFile, temp_matrix_ce0, "temp_matrix_ce0");
    sc_trace(mVcdFile, temp_matrix_q0, "temp_matrix_q0");
    sc_trace(mVcdFile, trunc_ln128_fu_265_p1, "trunc_ln128_fu_265_p1");
    sc_trace(mVcdFile, trunc_ln128_reg_896, "trunc_ln128_reg_896");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_fu_275_p2, "i_fu_275_p2");
    sc_trace(mVcdFile, i_reg_904, "i_reg_904");
    sc_trace(mVcdFile, shl_ln_fu_285_p3, "shl_ln_fu_285_p3");
    sc_trace(mVcdFile, shl_ln_reg_909, "shl_ln_reg_909");
    sc_trace(mVcdFile, icmp_ln128_fu_269_p2, "icmp_ln128_fu_269_p2");
    sc_trace(mVcdFile, j_fu_303_p2, "j_fu_303_p2");
    sc_trace(mVcdFile, j_reg_917, "j_reg_917");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, zext_ln134_fu_318_p1, "zext_ln134_fu_318_p1");
    sc_trace(mVcdFile, zext_ln134_reg_922, "zext_ln134_reg_922");
    sc_trace(mVcdFile, icmp_ln130_fu_297_p2, "icmp_ln130_fu_297_p2");
    sc_trace(mVcdFile, prod_q0, "prod_q0");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, icmp_ln87_fu_345_p2, "icmp_ln87_fu_345_p2");
    sc_trace(mVcdFile, i_5_fu_351_p2, "i_5_fu_351_p2");
    sc_trace(mVcdFile, i_5_reg_950, "i_5_reg_950");
    sc_trace(mVcdFile, tmp_7_reg_955, "tmp_7_reg_955");
    sc_trace(mVcdFile, temp_addr_4_reg_961, "temp_addr_4_reg_961");
    sc_trace(mVcdFile, x_1_fu_382_p2, "x_1_fu_382_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, zext_ln68_cast_fu_594_p3, "zext_ln68_cast_fu_594_p3");
    sc_trace(mVcdFile, zext_ln68_cast_reg_971, "zext_ln68_cast_reg_971");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, add_ln68_fu_609_p2, "add_ln68_fu_609_p2");
    sc_trace(mVcdFile, add_ln68_reg_976, "add_ln68_reg_976");
    sc_trace(mVcdFile, or_ln68_fu_750_p2, "or_ln68_fu_750_p2");
    sc_trace(mVcdFile, or_ln68_reg_982, "or_ln68_reg_982");
    sc_trace(mVcdFile, icmp_ln68_1_fu_756_p2, "icmp_ln68_1_fu_756_p2");
    sc_trace(mVcdFile, icmp_ln68_1_reg_987, "icmp_ln68_1_reg_987");
    sc_trace(mVcdFile, loop_fu_875_p2, "loop_fu_875_p2");
    sc_trace(mVcdFile, loop_reg_998, "loop_reg_998");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, zext_ln141_fu_881_p1, "zext_ln141_fu_881_p1");
    sc_trace(mVcdFile, zext_ln141_reg_1003, "zext_ln141_reg_1003");
    sc_trace(mVcdFile, icmp_ln140_fu_869_p2, "icmp_ln140_fu_869_p2");
    sc_trace(mVcdFile, prod_address0, "prod_address0");
    sc_trace(mVcdFile, prod_ce0, "prod_ce0");
    sc_trace(mVcdFile, prod_we0, "prod_we0");
    sc_trace(mVcdFile, prod_d0, "prod_d0");
    sc_trace(mVcdFile, temp_address0, "temp_address0");
    sc_trace(mVcdFile, temp_ce0, "temp_ce0");
    sc_trace(mVcdFile, temp_we0, "temp_we0");
    sc_trace(mVcdFile, temp_d0, "temp_d0");
    sc_trace(mVcdFile, temp_q0, "temp_q0");
    sc_trace(mVcdFile, bitNumber_assign_reg_210, "bitNumber_assign_reg_210");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, j_0_reg_222, "j_0_reg_222");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, x_0_i_reg_233, "x_0_i_reg_233");
    sc_trace(mVcdFile, i_0_i_reg_243, "i_0_i_reg_243");
    sc_trace(mVcdFile, loop_0_reg_254, "loop_0_reg_254");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, zext_ln134_1_fu_328_p1, "zext_ln134_1_fu_328_p1");
    sc_trace(mVcdFile, zext_ln87_fu_340_p1, "zext_ln87_fu_340_p1");
    sc_trace(mVcdFile, zext_ln68_3_fu_377_p1, "zext_ln68_3_fu_377_p1");
    sc_trace(mVcdFile, shl_ln68_4_fu_862_p2, "shl_ln68_4_fu_862_p2");
    sc_trace(mVcdFile, trunc_ln133_fu_281_p1, "trunc_ln133_fu_281_p1");
    sc_trace(mVcdFile, zext_ln130_fu_293_p1, "zext_ln130_fu_293_p1");
    sc_trace(mVcdFile, add_ln133_fu_309_p2, "add_ln133_fu_309_p2");
    sc_trace(mVcdFile, zext_ln133_fu_314_p1, "zext_ln133_fu_314_p1");
    sc_trace(mVcdFile, add_ln134_fu_323_p2, "add_ln134_fu_323_p2");
    sc_trace(mVcdFile, tmp_8_fu_367_p4, "tmp_8_fu_367_p4");
    sc_trace(mVcdFile, lshr_ln_fu_388_p4, "lshr_ln_fu_388_p4");
    sc_trace(mVcdFile, zext_ln96_fu_398_p1, "zext_ln96_fu_398_p1");
    sc_trace(mVcdFile, y_fu_428_p2, "y_fu_428_p2");
    sc_trace(mVcdFile, lshr_ln2_fu_434_p4, "lshr_ln2_fu_434_p4");
    sc_trace(mVcdFile, trunc_ln96_3_fu_418_p4, "trunc_ln96_3_fu_418_p4");
    sc_trace(mVcdFile, trunc_ln96_1_fu_414_p1, "trunc_ln96_1_fu_414_p1");
    sc_trace(mVcdFile, zext_ln97_fu_444_p1, "zext_ln97_fu_444_p1");
    sc_trace(mVcdFile, y_1_fu_472_p2, "y_1_fu_472_p2");
    sc_trace(mVcdFile, lshr_ln3_fu_478_p4, "lshr_ln3_fu_478_p4");
    sc_trace(mVcdFile, trunc_ln97_1_fu_462_p4, "trunc_ln97_1_fu_462_p4");
    sc_trace(mVcdFile, xor_ln97_fu_456_p2, "xor_ln97_fu_456_p2");
    sc_trace(mVcdFile, zext_ln98_fu_488_p1, "zext_ln98_fu_488_p1");
    sc_trace(mVcdFile, trunc_ln98_1_fu_506_p4, "trunc_ln98_1_fu_506_p4");
    sc_trace(mVcdFile, xor_ln98_fu_500_p2, "xor_ln98_fu_500_p2");
    sc_trace(mVcdFile, y_2_fu_516_p2, "y_2_fu_516_p2");
    sc_trace(mVcdFile, trunc_ln5_fu_528_p4, "trunc_ln5_fu_528_p4");
    sc_trace(mVcdFile, xor_ln98_2_fu_522_p2, "xor_ln98_2_fu_522_p2");
    sc_trace(mVcdFile, y_3_fu_546_p2, "y_3_fu_546_p2");
    sc_trace(mVcdFile, trunc_ln96_fu_402_p1, "trunc_ln96_fu_402_p1");
    sc_trace(mVcdFile, tmp_3_fu_448_p3, "tmp_3_fu_448_p3");
    sc_trace(mVcdFile, xor_ln101_fu_560_p2, "xor_ln101_fu_560_p2");
    sc_trace(mVcdFile, tmp_2_fu_406_p3, "tmp_2_fu_406_p3");
    sc_trace(mVcdFile, tmp_5_fu_538_p3, "tmp_5_fu_538_p3");
    sc_trace(mVcdFile, tmp_6_fu_552_p3, "tmp_6_fu_552_p3");
    sc_trace(mVcdFile, xor_ln101_2_fu_572_p2, "xor_ln101_2_fu_572_p2");
    sc_trace(mVcdFile, tmp_4_fu_492_p3, "tmp_4_fu_492_p3");
    sc_trace(mVcdFile, xor_ln101_3_fu_578_p2, "xor_ln101_3_fu_578_p2");
    sc_trace(mVcdFile, xor_ln101_1_fu_566_p2, "xor_ln101_1_fu_566_p2");
    sc_trace(mVcdFile, xor_ln101_4_fu_584_p2, "xor_ln101_4_fu_584_p2");
    sc_trace(mVcdFile, zext_ln68_fu_601_p1, "zext_ln68_fu_601_p1");
    sc_trace(mVcdFile, zext_ln68_2_fu_605_p1, "zext_ln68_2_fu_605_p1");
    sc_trace(mVcdFile, zext_ln68_4_fu_615_p1, "zext_ln68_4_fu_615_p1");
    sc_trace(mVcdFile, zext_ln68_5_fu_625_p1, "zext_ln68_5_fu_625_p1");
    sc_trace(mVcdFile, icmp_ln68_fu_619_p2, "icmp_ln68_fu_619_p2");
    sc_trace(mVcdFile, sub_ln68_fu_639_p2, "sub_ln68_fu_639_p2");
    sc_trace(mVcdFile, sub_ln68_1_fu_651_p2, "sub_ln68_1_fu_651_p2");
    sc_trace(mVcdFile, tmp_9_fu_629_p4, "tmp_9_fu_629_p4");
    sc_trace(mVcdFile, xor_ln68_2_fu_645_p2, "xor_ln68_2_fu_645_p2");
    sc_trace(mVcdFile, select_ln68_fu_657_p3, "select_ln68_fu_657_p3");
    sc_trace(mVcdFile, select_ln68_2_fu_673_p3, "select_ln68_2_fu_673_p3");
    sc_trace(mVcdFile, sub_ln68_2_fu_681_p2, "sub_ln68_2_fu_681_p2");
    sc_trace(mVcdFile, select_ln68_1_fu_665_p3, "select_ln68_1_fu_665_p3");
    sc_trace(mVcdFile, zext_ln68_6_fu_687_p1, "zext_ln68_6_fu_687_p1");
    sc_trace(mVcdFile, zext_ln68_7_fu_691_p1, "zext_ln68_7_fu_691_p1");
    sc_trace(mVcdFile, lshr_ln68_fu_695_p2, "lshr_ln68_fu_695_p2");
    sc_trace(mVcdFile, lshr_ln68_1_fu_701_p2, "lshr_ln68_1_fu_701_p2");
    sc_trace(mVcdFile, and_ln68_1_fu_707_p2, "and_ln68_1_fu_707_p2");
    sc_trace(mVcdFile, xor_ln68_fu_717_p2, "xor_ln68_fu_717_p2");
    sc_trace(mVcdFile, zext_ln68_1_fu_722_p1, "zext_ln68_1_fu_722_p1");
    sc_trace(mVcdFile, shl_ln68_fu_726_p2, "shl_ln68_fu_726_p2");
    sc_trace(mVcdFile, zext_ln101_fu_590_p1, "zext_ln101_fu_590_p1");
    sc_trace(mVcdFile, trunc_ln68_fu_713_p1, "trunc_ln68_fu_713_p1");
    sc_trace(mVcdFile, xor_ln68_1_fu_732_p2, "xor_ln68_1_fu_732_p2");
    sc_trace(mVcdFile, and_ln68_fu_744_p2, "and_ln68_fu_744_p2");
    sc_trace(mVcdFile, shl_ln68_1_fu_738_p2, "shl_ln68_1_fu_738_p2");
    sc_trace(mVcdFile, zext_ln68_8_fu_762_p1, "zext_ln68_8_fu_762_p1");
    sc_trace(mVcdFile, xor_ln68_3_fu_768_p2, "xor_ln68_3_fu_768_p2");
    sc_trace(mVcdFile, select_ln68_3_fu_774_p3, "select_ln68_3_fu_774_p3");
    sc_trace(mVcdFile, select_ln68_5_fu_786_p3, "select_ln68_5_fu_786_p3");
    sc_trace(mVcdFile, select_ln68_4_fu_780_p3, "select_ln68_4_fu_780_p3");
    sc_trace(mVcdFile, sub_ln68_3_fu_793_p2, "sub_ln68_3_fu_793_p2");
    sc_trace(mVcdFile, zext_ln68_9_fu_765_p1, "zext_ln68_9_fu_765_p1");
    sc_trace(mVcdFile, zext_ln68_10_fu_799_p1, "zext_ln68_10_fu_799_p1");
    sc_trace(mVcdFile, shl_ln68_2_fu_811_p2, "shl_ln68_2_fu_811_p2");
    sc_trace(mVcdFile, tmp_10_fu_817_p4, "tmp_10_fu_817_p4");
    sc_trace(mVcdFile, zext_ln68_11_fu_803_p1, "zext_ln68_11_fu_803_p1");
    sc_trace(mVcdFile, zext_ln68_12_fu_807_p1, "zext_ln68_12_fu_807_p1");
    sc_trace(mVcdFile, shl_ln68_3_fu_834_p2, "shl_ln68_3_fu_834_p2");
    sc_trace(mVcdFile, lshr_ln68_2_fu_840_p2, "lshr_ln68_2_fu_840_p2");
    sc_trace(mVcdFile, select_ln68_6_fu_827_p3, "select_ln68_6_fu_827_p3");
    sc_trace(mVcdFile, and_ln68_2_fu_846_p2, "and_ln68_2_fu_846_p2");
    sc_trace(mVcdFile, zext_ln68_13_fu_859_p1, "zext_ln68_13_fu_859_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

matrix_mul_1::~matrix_mul_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete temp_matrix_U;
    delete prod_U;
    delete temp_U;
}

void matrix_mul_1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        bitNumber_assign_reg_210 = i_reg_904.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        bitNumber_assign_reg_210 = ap_const_lv8_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        i_0_i_reg_243 = i_5_reg_950.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i_0_i_reg_243 = ap_const_lv3_1;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        j_0_reg_222 = j_reg_917.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln128_fu_269_p2.read(), ap_const_lv1_0))) {
        j_0_reg_222 = ap_const_lv3_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln128_fu_269_p2.read(), ap_const_lv1_1))) {
        loop_0_reg_254 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        loop_0_reg_254 = loop_reg_998.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        x_0_i_reg_233 = x_1_fu_382_p2.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        x_0_i_reg_233 = prod_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        add_ln68_reg_976 = add_ln68_fu_609_p2.read();
        icmp_ln68_1_reg_987 = icmp_ln68_1_fu_756_p2.read();
        or_ln68_reg_982 = or_ln68_fu_750_p2.read();
        zext_ln68_cast_reg_971 = zext_ln68_cast_fu_594_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln87_fu_345_p2.read()))) {
        i_5_reg_950 = i_5_fu_351_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_904 = i_fu_275_p2.read();
        trunc_ln128_reg_896 = trunc_ln128_fu_265_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        j_reg_917 = j_fu_303_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        loop_reg_998 = loop_fu_875_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln128_fu_269_p2.read(), ap_const_lv1_0))) {
        shl_ln_reg_909 = shl_ln_fu_285_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(icmp_ln87_fu_345_p2.read(), ap_const_lv1_1))) {
        temp_addr_4_reg_961 =  (sc_lv<6>) (zext_ln68_3_fu_377_p1.read());
        tmp_7_reg_955 = bitNumber_assign_reg_210.read().range(4, 3);
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln130_fu_297_p2.read()))) {
        zext_ln134_reg_922 = zext_ln134_fu_318_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln140_fu_869_p2.read()))) {
        zext_ln141_reg_1003 = zext_ln141_fu_881_p1.read();
    }
}

void matrix_mul_1::thread_add_ln133_fu_309_p2() {
    add_ln133_fu_309_p2 = (!shl_ln_reg_909.read().is_01() || !zext_ln130_fu_293_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(shl_ln_reg_909.read()) + sc_biguint<9>(zext_ln130_fu_293_p1.read()));
}

void matrix_mul_1::thread_add_ln134_fu_323_p2() {
    add_ln134_fu_323_p2 = (!zext_ln133_fu_314_p1.read().is_01() || !matrix_offset.read().is_01())? sc_lv<14>(): (sc_biguint<14>(zext_ln133_fu_314_p1.read()) + sc_biguint<14>(matrix_offset.read()));
}

void matrix_mul_1::thread_add_ln68_fu_609_p2() {
    add_ln68_fu_609_p2 = (!ap_const_lv6_7.is_01() || !zext_ln68_fu_601_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_7) + sc_biguint<6>(zext_ln68_fu_601_p1.read()));
}

void matrix_mul_1::thread_and_ln68_1_fu_707_p2() {
    and_ln68_1_fu_707_p2 = (lshr_ln68_fu_695_p2.read() & lshr_ln68_1_fu_701_p2.read());
}

void matrix_mul_1::thread_and_ln68_2_fu_846_p2() {
    and_ln68_2_fu_846_p2 = (shl_ln68_3_fu_834_p2.read() & lshr_ln68_2_fu_840_p2.read());
}

void matrix_mul_1::thread_and_ln68_fu_744_p2() {
    and_ln68_fu_744_p2 = (trunc_ln68_fu_713_p1.read() & xor_ln68_1_fu_732_p2.read());
}

void matrix_mul_1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void matrix_mul_1::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void matrix_mul_1::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void matrix_mul_1::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void matrix_mul_1::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void matrix_mul_1::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void matrix_mul_1::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void matrix_mul_1::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void matrix_mul_1::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void matrix_mul_1::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void matrix_mul_1::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void matrix_mul_1::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln140_fu_869_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void matrix_mul_1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void matrix_mul_1::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln140_fu_869_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void matrix_mul_1::thread_i_5_fu_351_p2() {
    i_5_fu_351_p2 = (!i_0_i_reg_243.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_0_i_reg_243.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void matrix_mul_1::thread_i_fu_275_p2() {
    i_fu_275_p2 = (!ap_const_lv8_1.is_01() || !bitNumber_assign_reg_210.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_1) + sc_biguint<8>(bitNumber_assign_reg_210.read()));
}

void matrix_mul_1::thread_icmp_ln128_fu_269_p2() {
    icmp_ln128_fu_269_p2 = (!bitNumber_assign_reg_210.read().is_01() || !ap_const_lv8_80.is_01())? sc_lv<1>(): sc_lv<1>(bitNumber_assign_reg_210.read() == ap_const_lv8_80);
}

void matrix_mul_1::thread_icmp_ln130_fu_297_p2() {
    icmp_ln130_fu_297_p2 = (!j_0_reg_222.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(j_0_reg_222.read() == ap_const_lv3_4);
}

void matrix_mul_1::thread_icmp_ln140_fu_869_p2() {
    icmp_ln140_fu_869_p2 = (!loop_0_reg_254.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(loop_0_reg_254.read() == ap_const_lv3_4);
}

void matrix_mul_1::thread_icmp_ln68_1_fu_756_p2() {
    icmp_ln68_1_fu_756_p2 = (!zext_ln68_2_fu_605_p1.read().is_01() || !zext_ln68_4_fu_615_p1.read().is_01())? sc_lv<1>(): (sc_biguint<64>(zext_ln68_2_fu_605_p1.read()) > sc_biguint<64>(zext_ln68_4_fu_615_p1.read()));
}

void matrix_mul_1::thread_icmp_ln68_fu_619_p2() {
    icmp_ln68_fu_619_p2 = (!zext_ln68_2_fu_605_p1.read().is_01() || !zext_ln68_4_fu_615_p1.read().is_01())? sc_lv<1>(): (sc_biguint<64>(zext_ln68_2_fu_605_p1.read()) > sc_biguint<64>(zext_ln68_4_fu_615_p1.read()));
}

void matrix_mul_1::thread_icmp_ln87_fu_345_p2() {
    icmp_ln87_fu_345_p2 = (!i_0_i_reg_243.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_reg_243.read() == ap_const_lv3_4);
}

void matrix_mul_1::thread_j_fu_303_p2() {
    j_fu_303_p2 = (!j_0_reg_222.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(j_0_reg_222.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void matrix_mul_1::thread_loop_fu_875_p2() {
    loop_fu_875_p2 = (!loop_0_reg_254.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(loop_0_reg_254.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void matrix_mul_1::thread_lshr_ln2_fu_434_p4() {
    lshr_ln2_fu_434_p4 = y_fu_428_p2.read().range(31, 2);
}

void matrix_mul_1::thread_lshr_ln3_fu_478_p4() {
    lshr_ln3_fu_478_p4 = y_1_fu_472_p2.read().range(31, 4);
}

void matrix_mul_1::thread_lshr_ln68_1_fu_701_p2() {
    lshr_ln68_1_fu_701_p2 = (!zext_ln68_7_fu_691_p1.read().is_01())? sc_lv<32>(): ap_const_lv32_FFFFFFFF >> (unsigned short)zext_ln68_7_fu_691_p1.read().to_uint();
}

void matrix_mul_1::thread_lshr_ln68_2_fu_840_p2() {
    lshr_ln68_2_fu_840_p2 = (!zext_ln68_12_fu_807_p1.read().is_01())? sc_lv<32>(): ap_const_lv32_FFFFFFFF >> (unsigned short)zext_ln68_12_fu_807_p1.read().to_uint();
}

void matrix_mul_1::thread_lshr_ln68_fu_695_p2() {
    lshr_ln68_fu_695_p2 = (!zext_ln68_6_fu_687_p1.read().is_01())? sc_lv<32>(): select_ln68_1_fu_665_p3.read() >> (unsigned short)zext_ln68_6_fu_687_p1.read().to_uint();
}

void matrix_mul_1::thread_lshr_ln_fu_388_p4() {
    lshr_ln_fu_388_p4 = x_0_i_reg_233.read().range(31, 1);
}

void matrix_mul_1::thread_or_ln68_fu_750_p2() {
    or_ln68_fu_750_p2 = (and_ln68_fu_744_p2.read() | shl_ln68_1_fu_738_p2.read());
}

void matrix_mul_1::thread_output_r_address0() {
    output_r_address0 =  (sc_lv<4>) (zext_ln141_reg_1003.read());
}

void matrix_mul_1::thread_output_r_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        output_r_ce0 = ap_const_logic_1;
    } else {
        output_r_ce0 = ap_const_logic_0;
    }
}

void matrix_mul_1::thread_output_r_d0() {
    output_r_d0 = temp_q0.read();
}

void matrix_mul_1::thread_output_r_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        output_r_we0 = ap_const_logic_1;
    } else {
        output_r_we0 = ap_const_logic_0;
    }
}

void matrix_mul_1::thread_prod_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        prod_address0 =  (sc_lv<6>) (zext_ln87_fu_340_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        prod_address0 =  (sc_lv<6>) (zext_ln134_reg_922.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        prod_address0 =  (sc_lv<6>) (ap_const_lv64_0);
    } else {
        prod_address0 = "XXXXXX";
    }
}

void matrix_mul_1::thread_prod_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        prod_ce0 = ap_const_logic_1;
    } else {
        prod_ce0 = ap_const_logic_0;
    }
}

void matrix_mul_1::thread_prod_d0() {
    prod_d0 = (temp_matrix_q0.read() & state_q0.read());
}

void matrix_mul_1::thread_prod_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        prod_we0 = ap_const_logic_1;
    } else {
        prod_we0 = ap_const_logic_0;
    }
}

void matrix_mul_1::thread_select_ln68_1_fu_665_p3() {
    select_ln68_1_fu_665_p3 = (!icmp_ln68_fu_619_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln68_fu_619_p2.read()[0].to_bool())? tmp_9_fu_629_p4.read(): temp_q0.read());
}

void matrix_mul_1::thread_select_ln68_2_fu_673_p3() {
    select_ln68_2_fu_673_p3 = (!icmp_ln68_fu_619_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln68_fu_619_p2.read()[0].to_bool())? xor_ln68_2_fu_645_p2.read(): zext_ln68_5_fu_625_p1.read());
}

void matrix_mul_1::thread_select_ln68_3_fu_774_p3() {
    select_ln68_3_fu_774_p3 = (!icmp_ln68_1_reg_987.read()[0].is_01())? sc_lv<6>(): ((icmp_ln68_1_reg_987.read()[0].to_bool())? zext_ln68_8_fu_762_p1.read(): add_ln68_reg_976.read());
}

void matrix_mul_1::thread_select_ln68_4_fu_780_p3() {
    select_ln68_4_fu_780_p3 = (!icmp_ln68_1_reg_987.read()[0].is_01())? sc_lv<6>(): ((icmp_ln68_1_reg_987.read()[0].to_bool())? add_ln68_reg_976.read(): zext_ln68_8_fu_762_p1.read());
}

void matrix_mul_1::thread_select_ln68_5_fu_786_p3() {
    select_ln68_5_fu_786_p3 = (!icmp_ln68_1_reg_987.read()[0].is_01())? sc_lv<6>(): ((icmp_ln68_1_reg_987.read()[0].to_bool())? xor_ln68_3_fu_768_p2.read(): zext_ln68_8_fu_762_p1.read());
}

void matrix_mul_1::thread_select_ln68_6_fu_827_p3() {
    select_ln68_6_fu_827_p3 = (!icmp_ln68_1_reg_987.read()[0].is_01())? sc_lv<32>(): ((icmp_ln68_1_reg_987.read()[0].to_bool())? tmp_10_fu_817_p4.read(): shl_ln68_2_fu_811_p2.read());
}

void matrix_mul_1::thread_select_ln68_fu_657_p3() {
    select_ln68_fu_657_p3 = (!icmp_ln68_fu_619_p2.read()[0].is_01())? sc_lv<6>(): ((icmp_ln68_fu_619_p2.read()[0].to_bool())? sub_ln68_fu_639_p2.read(): sub_ln68_1_fu_651_p2.read());
}

void matrix_mul_1::thread_shl_ln68_1_fu_738_p2() {
    shl_ln68_1_fu_738_p2 = (!zext_ln68_1_fu_722_p1.read().is_01())? sc_lv<8>(): zext_ln101_fu_590_p1.read() << (unsigned short)zext_ln68_1_fu_722_p1.read().to_uint();
}

void matrix_mul_1::thread_shl_ln68_2_fu_811_p2() {
    shl_ln68_2_fu_811_p2 = (!zext_ln68_10_fu_799_p1.read().is_01())? sc_lv<32>(): zext_ln68_9_fu_765_p1.read() << (unsigned short)zext_ln68_10_fu_799_p1.read().to_uint();
}

void matrix_mul_1::thread_shl_ln68_3_fu_834_p2() {
    shl_ln68_3_fu_834_p2 = (!zext_ln68_11_fu_803_p1.read().is_01())? sc_lv<32>(): ap_const_lv32_FFFFFFFF << (unsigned short)zext_ln68_11_fu_803_p1.read().to_uint();
}

void matrix_mul_1::thread_shl_ln68_4_fu_862_p2() {
    shl_ln68_4_fu_862_p2 = (!zext_ln68_13_fu_859_p1.read().is_01())? sc_lv<4>(): ap_const_lv4_1 << (unsigned short)zext_ln68_13_fu_859_p1.read().to_uint();
}

void matrix_mul_1::thread_shl_ln68_fu_726_p2() {
    shl_ln68_fu_726_p2 = (!zext_ln68_1_fu_722_p1.read().is_01())? sc_lv<8>(): ap_const_lv8_1 << (unsigned short)zext_ln68_1_fu_722_p1.read().to_uint();
}

void matrix_mul_1::thread_shl_ln_fu_285_p3() {
    shl_ln_fu_285_p3 = esl_concat<7,2>(trunc_ln133_fu_281_p1.read(), ap_const_lv2_0);
}

void matrix_mul_1::thread_state_address0() {
    state_address0 =  (sc_lv<3>) (zext_ln134_fu_318_p1.read());
}

void matrix_mul_1::thread_state_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        state_ce0 = ap_const_logic_1;
    } else {
        state_ce0 = ap_const_logic_0;
    }
}

void matrix_mul_1::thread_sub_ln68_1_fu_651_p2() {
    sub_ln68_1_fu_651_p2 = (!add_ln68_fu_609_p2.read().is_01() || !zext_ln68_5_fu_625_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(add_ln68_fu_609_p2.read()) - sc_biguint<6>(zext_ln68_5_fu_625_p1.read()));
}

void matrix_mul_1::thread_sub_ln68_2_fu_681_p2() {
    sub_ln68_2_fu_681_p2 = (!ap_const_lv6_1F.is_01() || !select_ln68_fu_657_p3.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1F) - sc_biguint<6>(select_ln68_fu_657_p3.read()));
}

void matrix_mul_1::thread_sub_ln68_3_fu_793_p2() {
    sub_ln68_3_fu_793_p2 = (!ap_const_lv6_1F.is_01() || !select_ln68_3_fu_774_p3.read().is_01())? sc_lv<6>(): (sc_biguint<6>(ap_const_lv6_1F) - sc_biguint<6>(select_ln68_3_fu_774_p3.read()));
}

void matrix_mul_1::thread_sub_ln68_fu_639_p2() {
    sub_ln68_fu_639_p2 = (!zext_ln68_5_fu_625_p1.read().is_01() || !add_ln68_fu_609_p2.read().is_01())? sc_lv<6>(): (sc_biguint<6>(zext_ln68_5_fu_625_p1.read()) - sc_biguint<6>(add_ln68_fu_609_p2.read()));
}

void matrix_mul_1::thread_temp_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        temp_address0 =  (sc_lv<6>) (zext_ln141_fu_881_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        temp_address0 = temp_addr_4_reg_961.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        temp_address0 =  (sc_lv<6>) (zext_ln68_3_fu_377_p1.read());
    } else {
        temp_address0 = "XXXXXX";
    }
}

void matrix_mul_1::thread_temp_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()))) {
        temp_ce0 = ap_const_logic_1;
    } else {
        temp_ce0 = ap_const_logic_0;
    }
}

void matrix_mul_1::thread_temp_d0() {
    temp_d0 = (select_ln68_6_fu_827_p3.read() & and_ln68_2_fu_846_p2.read());
}

void matrix_mul_1::thread_temp_matrix_address0() {
    temp_matrix_address0 =  (sc_lv<14>) (zext_ln134_1_fu_328_p1.read());
}

void matrix_mul_1::thread_temp_matrix_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        temp_matrix_ce0 = ap_const_logic_1;
    } else {
        temp_matrix_ce0 = ap_const_logic_0;
    }
}

void matrix_mul_1::thread_temp_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        temp_we0 = shl_ln68_4_fu_862_p2.read();
    } else {
        temp_we0 = ap_const_lv4_0;
    }
}

void matrix_mul_1::thread_tmp_10_fu_817_p4() {
    tmp_10_fu_817_p4 = shl_ln68_2_fu_811_p2.read().range(0, 31);
}

void matrix_mul_1::thread_tmp_2_fu_406_p3() {
    tmp_2_fu_406_p3 = x_0_i_reg_233.read().range(1, 1);
}

void matrix_mul_1::thread_tmp_3_fu_448_p3() {
    tmp_3_fu_448_p3 = y_fu_428_p2.read().range(2, 2);
}

void matrix_mul_1::thread_tmp_4_fu_492_p3() {
    tmp_4_fu_492_p3 = y_1_fu_472_p2.read().range(4, 4);
}

void matrix_mul_1::thread_tmp_5_fu_538_p3() {
    tmp_5_fu_538_p3 = y_2_fu_516_p2.read().range(8, 8);
}

void matrix_mul_1::thread_tmp_6_fu_552_p3() {
    tmp_6_fu_552_p3 = y_3_fu_546_p2.read().range(16, 16);
}

void matrix_mul_1::thread_tmp_8_fu_367_p4() {
    tmp_8_fu_367_p4 = bitNumber_assign_reg_210.read().range(6, 5);
}

void matrix_mul_1::thread_tmp_9_fu_629_p4() {
    tmp_9_fu_629_p4 = temp_q0.read().range(0, 31);
}

void matrix_mul_1::thread_trunc_ln128_fu_265_p1() {
    trunc_ln128_fu_265_p1 = bitNumber_assign_reg_210.read().range(3-1, 0);
}

void matrix_mul_1::thread_trunc_ln133_fu_281_p1() {
    trunc_ln133_fu_281_p1 = bitNumber_assign_reg_210.read().range(7-1, 0);
}

void matrix_mul_1::thread_trunc_ln5_fu_528_p4() {
    trunc_ln5_fu_528_p4 = y_2_fu_516_p2.read().range(31, 8);
}

void matrix_mul_1::thread_trunc_ln68_fu_713_p1() {
    trunc_ln68_fu_713_p1 = and_ln68_1_fu_707_p2.read().range(8-1, 0);
}

void matrix_mul_1::thread_trunc_ln96_1_fu_414_p1() {
    trunc_ln96_1_fu_414_p1 = x_0_i_reg_233.read().range(24-1, 0);
}

void matrix_mul_1::thread_trunc_ln96_3_fu_418_p4() {
    trunc_ln96_3_fu_418_p4 = x_0_i_reg_233.read().range(24, 1);
}

void matrix_mul_1::thread_trunc_ln96_fu_402_p1() {
    trunc_ln96_fu_402_p1 = x_0_i_reg_233.read().range(1-1, 0);
}

void matrix_mul_1::thread_trunc_ln97_1_fu_462_p4() {
    trunc_ln97_1_fu_462_p4 = y_fu_428_p2.read().range(25, 2);
}

void matrix_mul_1::thread_trunc_ln98_1_fu_506_p4() {
    trunc_ln98_1_fu_506_p4 = y_1_fu_472_p2.read().range(27, 4);
}

void matrix_mul_1::thread_x_1_fu_382_p2() {
    x_1_fu_382_p2 = (prod_q0.read() ^ x_0_i_reg_233.read());
}

void matrix_mul_1::thread_xor_ln101_1_fu_566_p2() {
    xor_ln101_1_fu_566_p2 = (xor_ln101_fu_560_p2.read() ^ tmp_2_fu_406_p3.read());
}

void matrix_mul_1::thread_xor_ln101_2_fu_572_p2() {
    xor_ln101_2_fu_572_p2 = (tmp_5_fu_538_p3.read() ^ tmp_6_fu_552_p3.read());
}

void matrix_mul_1::thread_xor_ln101_3_fu_578_p2() {
    xor_ln101_3_fu_578_p2 = (xor_ln101_2_fu_572_p2.read() ^ tmp_4_fu_492_p3.read());
}

void matrix_mul_1::thread_xor_ln101_4_fu_584_p2() {
    xor_ln101_4_fu_584_p2 = (xor_ln101_3_fu_578_p2.read() ^ xor_ln101_1_fu_566_p2.read());
}

void matrix_mul_1::thread_xor_ln101_fu_560_p2() {
    xor_ln101_fu_560_p2 = (trunc_ln96_fu_402_p1.read() ^ tmp_3_fu_448_p3.read());
}

void matrix_mul_1::thread_xor_ln68_1_fu_732_p2() {
    xor_ln68_1_fu_732_p2 = (shl_ln68_fu_726_p2.read() ^ ap_const_lv8_FF);
}

void matrix_mul_1::thread_xor_ln68_2_fu_645_p2() {
    xor_ln68_2_fu_645_p2 = (zext_ln68_5_fu_625_p1.read() ^ ap_const_lv6_1F);
}

void matrix_mul_1::thread_xor_ln68_3_fu_768_p2() {
    xor_ln68_3_fu_768_p2 = (zext_ln68_8_fu_762_p1.read() ^ ap_const_lv6_1F);
}

void matrix_mul_1::thread_xor_ln68_fu_717_p2() {
    xor_ln68_fu_717_p2 = (trunc_ln128_reg_896.read() ^ ap_const_lv3_7);
}

void matrix_mul_1::thread_xor_ln97_fu_456_p2() {
    xor_ln97_fu_456_p2 = (trunc_ln96_3_fu_418_p4.read() ^ trunc_ln96_1_fu_414_p1.read());
}

void matrix_mul_1::thread_xor_ln98_2_fu_522_p2() {
    xor_ln98_2_fu_522_p2 = (trunc_ln98_1_fu_506_p4.read() ^ xor_ln98_fu_500_p2.read());
}

void matrix_mul_1::thread_xor_ln98_fu_500_p2() {
    xor_ln98_fu_500_p2 = (trunc_ln97_1_fu_462_p4.read() ^ xor_ln97_fu_456_p2.read());
}

void matrix_mul_1::thread_y_1_fu_472_p2() {
    y_1_fu_472_p2 = (zext_ln97_fu_444_p1.read() ^ y_fu_428_p2.read());
}

void matrix_mul_1::thread_y_2_fu_516_p2() {
    y_2_fu_516_p2 = (zext_ln98_fu_488_p1.read() ^ y_1_fu_472_p2.read());
}

void matrix_mul_1::thread_y_3_fu_546_p2() {
    y_3_fu_546_p2 = (trunc_ln5_fu_528_p4.read() ^ xor_ln98_2_fu_522_p2.read());
}

void matrix_mul_1::thread_y_fu_428_p2() {
    y_fu_428_p2 = (zext_ln96_fu_398_p1.read() ^ x_0_i_reg_233.read());
}

void matrix_mul_1::thread_zext_ln101_fu_590_p1() {
    zext_ln101_fu_590_p1 = esl_zext<8,1>(xor_ln101_4_fu_584_p2.read());
}

void matrix_mul_1::thread_zext_ln130_fu_293_p1() {
    zext_ln130_fu_293_p1 = esl_zext<9,3>(j_0_reg_222.read());
}

void matrix_mul_1::thread_zext_ln133_fu_314_p1() {
    zext_ln133_fu_314_p1 = esl_zext<14,9>(add_ln133_fu_309_p2.read());
}

void matrix_mul_1::thread_zext_ln134_1_fu_328_p1() {
    zext_ln134_1_fu_328_p1 = esl_zext<64,14>(add_ln134_fu_323_p2.read());
}

void matrix_mul_1::thread_zext_ln134_fu_318_p1() {
    zext_ln134_fu_318_p1 = esl_zext<64,3>(j_0_reg_222.read());
}

void matrix_mul_1::thread_zext_ln141_fu_881_p1() {
    zext_ln141_fu_881_p1 = esl_zext<64,3>(loop_0_reg_254.read());
}

void matrix_mul_1::thread_zext_ln68_10_fu_799_p1() {
    zext_ln68_10_fu_799_p1 = esl_zext<32,6>(select_ln68_5_fu_786_p3.read());
}

void matrix_mul_1::thread_zext_ln68_11_fu_803_p1() {
    zext_ln68_11_fu_803_p1 = esl_zext<32,6>(select_ln68_4_fu_780_p3.read());
}

void matrix_mul_1::thread_zext_ln68_12_fu_807_p1() {
    zext_ln68_12_fu_807_p1 = esl_zext<32,6>(sub_ln68_3_fu_793_p2.read());
}

void matrix_mul_1::thread_zext_ln68_13_fu_859_p1() {
    zext_ln68_13_fu_859_p1 = esl_zext<4,2>(tmp_7_reg_955.read());
}

void matrix_mul_1::thread_zext_ln68_1_fu_722_p1() {
    zext_ln68_1_fu_722_p1 = esl_zext<8,3>(xor_ln68_fu_717_p2.read());
}

void matrix_mul_1::thread_zext_ln68_2_fu_605_p1() {
    zext_ln68_2_fu_605_p1 = esl_zext<64,5>(zext_ln68_cast_fu_594_p3.read());
}

void matrix_mul_1::thread_zext_ln68_3_fu_377_p1() {
    zext_ln68_3_fu_377_p1 = esl_zext<64,2>(tmp_8_fu_367_p4.read());
}

void matrix_mul_1::thread_zext_ln68_4_fu_615_p1() {
    zext_ln68_4_fu_615_p1 = esl_zext<64,6>(add_ln68_fu_609_p2.read());
}

void matrix_mul_1::thread_zext_ln68_5_fu_625_p1() {
    zext_ln68_5_fu_625_p1 = esl_zext<6,5>(zext_ln68_cast_fu_594_p3.read());
}

void matrix_mul_1::thread_zext_ln68_6_fu_687_p1() {
    zext_ln68_6_fu_687_p1 = esl_zext<32,6>(select_ln68_2_fu_673_p3.read());
}

void matrix_mul_1::thread_zext_ln68_7_fu_691_p1() {
    zext_ln68_7_fu_691_p1 = esl_zext<32,6>(sub_ln68_2_fu_681_p2.read());
}

void matrix_mul_1::thread_zext_ln68_8_fu_762_p1() {
    zext_ln68_8_fu_762_p1 = esl_zext<6,5>(zext_ln68_cast_reg_971.read());
}

void matrix_mul_1::thread_zext_ln68_9_fu_765_p1() {
    zext_ln68_9_fu_765_p1 = esl_zext<32,8>(or_ln68_reg_982.read());
}

void matrix_mul_1::thread_zext_ln68_cast_fu_594_p3() {
    zext_ln68_cast_fu_594_p3 = esl_concat<2,3>(tmp_7_reg_955.read(), ap_const_lv3_0);
}

void matrix_mul_1::thread_zext_ln68_fu_601_p1() {
    zext_ln68_fu_601_p1 = esl_zext<6,5>(zext_ln68_cast_fu_594_p3.read());
}

void matrix_mul_1::thread_zext_ln87_fu_340_p1() {
    zext_ln87_fu_340_p1 = esl_zext<64,3>(i_0_i_reg_243.read());
}

void matrix_mul_1::thread_zext_ln96_fu_398_p1() {
    zext_ln96_fu_398_p1 = esl_zext<32,31>(lshr_ln_fu_388_p4.read());
}

void matrix_mul_1::thread_zext_ln97_fu_444_p1() {
    zext_ln97_fu_444_p1 = esl_zext<32,30>(lshr_ln2_fu_434_p4.read());
}

void matrix_mul_1::thread_zext_ln98_fu_488_p1() {
    zext_ln98_fu_488_p1 = esl_zext<32,28>(lshr_ln3_fu_478_p4.read());
}

void matrix_mul_1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln128_fu_269_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state10;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln130_fu_297_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(icmp_ln87_fu_345_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_state7;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln140_fu_869_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state11;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

}

